2014-10-03 11:18:07 INFO     MAIN :: Checking database structure...
2014-10-03 11:18:07 DEBUG    MAIN :: Checking Initial Schema database upgrade
2014-10-03 11:18:07 DEBUG    MAIN :: sickbeard.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('tv_shows',)
2014-10-03 11:18:07 INFO     MAIN :: Database upgrade required: Initial Schema
2014-10-03 11:18:07 DEBUG    MAIN :: sickbeard.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('tv_shows',)
2014-10-03 11:18:07 DEBUG    MAIN :: sickbeard.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('db_version',)
2014-10-03 11:18:07 DEBUG    MAIN :: sickbeard.db: CREATE TABLE db_version (db_version INTEGER);
2014-10-03 11:18:07 DEBUG    MAIN :: sickbeard.db: CREATE TABLE history (action NUMERIC, date NUMERIC, showid NUMERIC, season NUMERIC, episode NUMERIC, quality NUMERIC, resource TEXT, provider TEXT, source TEXT);
2014-10-03 11:18:07 DEBUG    MAIN :: sickbeard.db: CREATE TABLE info (last_backlog NUMERIC, last_tvdb NUMERIC);
2014-10-03 11:18:07 DEBUG    MAIN :: sickbeard.db: CREATE TABLE tv_episodes (episode_id INTEGER PRIMARY KEY, showid NUMERIC, tvdbid NUMERIC, name TEXT, season NUMERIC, episode NUMERIC, description TEXT, airdate NUMERIC, hasnfo NUMERIC, hastbn NUMERIC, status NUMERIC, location TEXT, file_size NUMERIC, release_name TEXT);
2014-10-03 11:18:07 DEBUG    MAIN :: sickbeard.db: CREATE TABLE tv_shows (show_id INTEGER PRIMARY KEY, location TEXT, show_name TEXT, tvdb_id NUMERIC, network TEXT, genre TEXT, runtime NUMERIC, quality NUMERIC, airs TEXT, status TEXT, flatten_folders NUMERIC, paused NUMERIC, startyear NUMERIC, tvr_id NUMERIC, tvr_name TEXT, air_by_date NUMERIC, lang TEXT, last_update_tvdb NUMERIC, rls_require_words TEXT, rls_ignore_words TEXT, skip_notices NUMERIC);
2014-10-03 11:18:07 DEBUG    MAIN :: sickbeard.db: CREATE INDEX idx_tv_episodes_showid_airdate ON tv_episodes (showid,airdate);
2014-10-03 11:18:07 DEBUG    MAIN :: sickbeard.db: CREATE INDEX idx_showid ON tv_episodes (showid);
2014-10-03 11:18:07 DEBUG    MAIN :: sickbeard.db: CREATE UNIQUE INDEX idx_tvdb_id ON tv_shows (tvdb_id);
2014-10-03 11:18:07 DEBUG    MAIN :: sickbeard.db: INSERT INTO db_version (db_version) VALUES (18);
2014-10-03 11:18:07 DEBUG    MAIN :: Initial Schema upgrade completed
2014-10-03 11:18:07 DEBUG    MAIN :: Checking Add Size And Scene Name Fields database upgrade
2014-10-03 11:18:07 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 11:18:07 DEBUG    MAIN :: Add Size And Scene Name Fields upgrade not required
2014-10-03 11:18:07 DEBUG    MAIN :: Checking Rename Season Folders database upgrade
2014-10-03 11:18:07 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 11:18:07 DEBUG    MAIN :: Rename Season Folders upgrade not required
2014-10-03 11:18:07 DEBUG    MAIN :: Checking Add1080p And Raw Qualities database upgrade
2014-10-03 11:18:07 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 11:18:07 DEBUG    MAIN :: Add1080p And Raw Qualities upgrade not required
2014-10-03 11:18:07 DEBUG    MAIN :: Checking Add Showid Tvdbid Index database upgrade
2014-10-03 11:18:07 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 11:18:07 DEBUG    MAIN :: Add Showid Tvdbid Index upgrade not required
2014-10-03 11:18:07 DEBUG    MAIN :: Checking Add Last Update database upgrade
2014-10-03 11:18:07 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 11:18:07 DEBUG    MAIN :: Add Last Update upgrade not required
2014-10-03 11:18:07 DEBUG    MAIN :: Checking Add Require And Ignore Words database upgrade
2014-10-03 11:18:07 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 11:18:07 DEBUG    MAIN :: Add Require And Ignore Words upgrade not required
2014-10-03 11:18:07 DEBUG    MAIN :: Checking Cleanup History And Specials database upgrade
2014-10-03 11:18:07 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 11:18:07 DEBUG    MAIN :: Cleanup History And Specials upgrade not required
2014-10-03 11:18:07 DEBUG    MAIN :: Checking Add Skip Notifications database upgrade
2014-10-03 11:18:07 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 11:18:07 DEBUG    MAIN :: Add Skip Notifications upgrade not required
2014-10-03 11:18:07 DEBUG    MAIN :: Checking Add History Source database upgrade
2014-10-03 11:18:07 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 11:18:07 DEBUG    MAIN :: Add History Source upgrade not required
2014-10-03 11:18:07 INFO     MAIN :: Checking database structure...
2014-10-03 11:18:07 DEBUG    MAIN :: Checking Initial Schema database upgrade
2014-10-03 11:18:07 DEBUG    MAIN :: cache.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('lastUpdate',)
2014-10-03 11:18:07 INFO     MAIN :: Database upgrade required: Initial Schema
2014-10-03 11:18:07 DEBUG    MAIN :: cache.db: CREATE TABLE lastUpdate (provider TEXT, time NUMERIC);
2014-10-03 11:18:07 DEBUG    MAIN :: cache.db: CREATE TABLE db_version (db_version INTEGER);
2014-10-03 11:18:07 DEBUG    MAIN :: cache.db: INSERT INTO db_version (db_version) VALUES (?) with args (1,)
2014-10-03 11:18:07 DEBUG    MAIN :: Initial Schema upgrade completed
2014-10-03 11:18:07 DEBUG    MAIN :: Checking Add Scene Exceptions database upgrade
2014-10-03 11:18:07 DEBUG    MAIN :: cache.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('scene_exceptions',)
2014-10-03 11:18:07 INFO     MAIN :: Database upgrade required: Add Scene Exceptions
2014-10-03 11:18:07 DEBUG    MAIN :: cache.db: CREATE TABLE scene_exceptions (exception_id INTEGER PRIMARY KEY, tvdb_id INTEGER KEY, show_name TEXT, provider TEXT)
2014-10-03 11:18:07 DEBUG    MAIN :: Add Scene Exceptions upgrade completed
2014-10-03 11:18:07 DEBUG    MAIN :: Checking Add Scene Name Cache database upgrade
2014-10-03 11:18:07 DEBUG    MAIN :: cache.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('scene_names',)
2014-10-03 11:18:07 INFO     MAIN :: Database upgrade required: Add Scene Name Cache
2014-10-03 11:18:07 DEBUG    MAIN :: cache.db: CREATE TABLE scene_names (tvdb_id INTEGER, name TEXT)
2014-10-03 11:18:07 DEBUG    MAIN :: Add Scene Name Cache upgrade completed
2014-10-03 11:18:07 DEBUG    MAIN :: Checking Add Scene Exceptions Provider database upgrade
2014-10-03 11:18:07 DEBUG    MAIN :: Add Scene Exceptions Provider upgrade not required
2014-10-03 11:18:07 DEBUG    MAIN :: sickbeard.db: SELECT show_id, tvdb_id, COUNT(tvdb_id) as count FROM tv_shows GROUP BY tvdb_id HAVING count > 1
2014-10-03 11:18:07 INFO     MAIN :: No duplicate show, check passed
2014-10-03 11:18:07 DEBUG    MAIN :: sickbeard.db: SELECT showid, season, episode, COUNT(showid) as count FROM tv_episodes GROUP BY showid, season, episode HAVING count > 1
2014-10-03 11:18:07 INFO     MAIN :: No duplicate episode, check passed
2014-10-03 11:18:07 DEBUG    MAIN :: sickbeard.db: SELECT episode_id, showid, tv_shows.tvdb_id FROM tv_episodes LEFT JOIN tv_shows ON tv_episodes.showid=tv_shows.tvdb_id WHERE tv_shows.tvdb_id is NULL
2014-10-03 11:18:07 INFO     MAIN :: No orphan episodes, check passed
2014-10-03 11:18:07 DEBUG    MAIN :: config_version -> 6
2014-10-03 11:18:07 DEBUG    MAIN :: Checking if we can use git commands: git version
2014-10-03 11:18:07 DEBUG    MAIN :: Executing git version with your shell in /Users/cman/Temp/sickbeard_ynh/sources/Sick-Beard
2014-10-03 11:18:07 DEBUG    MAIN :: git output: git version 2.1.0
2014-10-03 11:18:07 DEBUG    MAIN :: git version : returned successful
2014-10-03 11:18:07 DEBUG    MAIN :: Using: git
2014-10-03 11:18:07 DEBUG    MAIN :: Executing git symbolic-ref -q HEAD with your shell in /Users/cman/Temp/sickbeard_ynh/sources/Sick-Beard
2014-10-03 11:18:07 DEBUG    MAIN :: git output: refs/heads/development
2014-10-03 11:18:07 DEBUG    MAIN :: git symbolic-ref -q HEAD : returned successful
2014-10-03 11:18:07 DEBUG    MAIN :: Retrieving the last check time from the DB
2014-10-03 11:18:07 DEBUG    MAIN :: sickbeard.db: SELECT * FROM info
2014-10-03 11:18:07 INFO     MAIN :: Starting Sick Beard on http://0.0.0.0:8081/
2014-10-03 11:18:07 INFO     MAIN :: Loading initial show list
2014-10-03 11:18:07 DEBUG    MAIN :: sickbeard.db: SELECT * FROM tv_shows
2014-10-03 11:18:07 DEBUG    CHECKVERSION :: Starting new thread: CHECKVERSION
2014-10-03 11:18:07 INFO     CHECKVERSION :: Checking if git needs an update
2014-10-03 11:18:07 DEBUG    CHECKVERSION :: Executing git rev-parse HEAD with your shell in /Users/cman/Temp/sickbeard_ynh/sources/Sick-Beard
2014-10-03 11:18:07 DEBUG    CHECKVERSION :: git output: 9dc20d8d4ef12a2bea75c9fa1f45be962383fe45
2014-10-03 11:18:07 DEBUG    CHECKVERSION :: git rev-parse HEAD : returned successful
2014-10-03 11:18:07 DEBUG    CHECKVERSION :: Executing git fetch origin with your shell in /Users/cman/Temp/sickbeard_ynh/sources/Sick-Beard
2014-10-03 11:18:08 DEBUG    CP Server Thread-4 :: sickbeard.db: SELECT showid, (SELECT COUNT(*) FROM tv_episodes WHERE showid=tv_eps.showid AND season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE showid=tv_eps.showid AND season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE showid=tv_eps.showid AND season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 735509 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total,  (SELECT airdate FROM tv_episodes WHERE showid=tv_eps.showid AND airdate >= 735509 AND status = 1 ORDER BY airdate ASC LIMIT 1) AS ep_airs_next  FROM tv_episodes tv_eps GROUP BY showid
2014-10-03 11:18:08 DEBUG    CP Server Thread-4 :: sickbeard.db: SELECT (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 735509 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total  FROM tv_episodes tv_eps LIMIT 1
2014-10-03 11:18:12 INFO     MAIN :: Signal 2 caught, saving and exiting...
2014-10-03 11:18:12 INFO     MAIN :: Aborting all threads
2014-10-03 11:18:12 INFO     MAIN :: Waiting for the SEARCH thread to exit
2014-10-03 11:18:12 DEBUG    CHECKVERSION :: git output: Killed by signal 2.
2014-10-03 11:18:12 ERROR    CHECKVERSION :: git fetch origin returned : Killed by signal 2., treat as error for now
2014-10-03 11:18:12 ERROR    CHECKVERSION :: Unable to contact github, can't check for update
2014-10-03 11:18:12 INFO     CHECKVERSION :: No update needed
2014-10-03 11:18:12 INFO     CHECKVERSION :: Check scene exceptions update
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: cache.db: SELECT tvdb_id, show_name FROM scene_exceptions WHERE provider=?; with args ['sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 INFO     CHECKVERSION :: Updating scene exceptions
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [272391, u'Karl Pilkington The Moaning Of Life', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [264535, u'Storage Wars NY', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [247824, u'The Voice (US)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [247824, u'The Voice', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71699, u'The Outer Limits (1963)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [253982, u'Common Law (2012)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [253982, u'Common Law', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79905, u'Tim and Eric Awesome Show', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79905, u'Tim and Erics Awesome Show Great Job', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [276515, u'Curse of Oak Island', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [249892, u'Extreme Chef', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [249892, u'Extreme Chefs', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [276526, u'Legend of Mick Dodge', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [244061, u'Steins Gate', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [260165, u'Chasing UFOs', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [260165, u'National Geographic Chasing UFOs', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248503, u'The Hour (2011)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248503, u'The Hour UK 2011', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248503, u'The Hour 2011', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [273424, u'David Attenboroughs Rise Of Animals', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71788, u'Superman: The Animated Series', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71788, u'Superman TAS', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [260206, u'Gordon Behind Bars', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [260206, u'Gordon Ramsay Behind Bars', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [254067, u'DUI', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [254067, u'D U I', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [254067, u'D.U.I', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [249980, u'Restoration Home', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [249980, u'Restoration Home UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [280939, u'Rush US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [145541, u'The Marriage Ref', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [145541, u'The Marriage Ref US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82060, u'Who Do You Think You Are AU', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [281624, u'Manhattan Love Story US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80018, u'Nick Cannon Presents Wild N Out', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [266388, u'David Attenboroughs Natural Curiosities', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250015, u'The Indestructibles', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250015, u'The Indestructibles US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [254112, u'Titanic 2012', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [282786, u'Utopia AU', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73893, u'Enterprise', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [84146, u'Secret Millionaire', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [84146, u'Secret Millionaire US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [282654, u'Utopia US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [198841, u'Undercover Boss (Au)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [198841, u'Undercover Boss Australia', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [194751, u'Conan', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [194751, u'Conan (2010)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [270528, u'Blood And Oil 2013', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [92361, u'Known Universe', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [92361, u'National Geographic Known Universe', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [256204, u'666 Park Avenue', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [256204, u'Park Avenue', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [198861, u'Film 2014 with Claudia Winkleman', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [198861, u'Film 2013 with Claudia Winkleman', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [198861, u'Film 2012 with Claudia Winkleman', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [198861, u'Film 2011 with Claudia Winkleman', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [255693, u'Undercover Boss Canada', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [255693, u'Undercover Boss CA', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [262353, u'Leaving', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [262353, u'Leaving UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82135, u'The Gruen Transfer', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82135, u'Gruen Nation', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82135, u'Gruen Sweat', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [139481, u'18 Kids And Counting', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [139481, u'17 Kids And Counting', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [213211, u'Love Hate', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [262368, u'Vikings (2012)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [262368, u'Vikings UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [168161, u'Law & Order: Los Angeles', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [168161, u'Law & Order: LA', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [78051, u'Never Mind the Buzzcocks', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [78051, u'Never Mind the Buzzcocks UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80101, u'Harry And Paul', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [262377, u'Sarah Beenys Double Your House for Half the Money', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [129261, u'Spartacus', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [129261, u'Spartacus Blood and Sand', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [129261, u'Spartacus Vengeance', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250095, u'The Marriage Ref(UK)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250095, u'The Marriage Ref UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [78075, u'Beast Machines Transformers', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [88321, u"Tabatha's Salon Takeover", 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [264450, u'Legit', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [264450, u'Legit US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80159, u'Sanctuary', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80159, u'Sanctuary US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250153, u'Top Design Australia', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250153, u'Top Design AU', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [256300, u'Richard Hammonds Crash Course', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [256300, u"Richard Hammond's Crash Course", 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [78125, u'22 Minutes', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [268591, u'The Tomorrow People US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [268591, u'The Tomorrow People', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [268591, u'Tomorrow People', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71985, u'Taboo', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71985, u'National Geographic Taboo', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [260489, u'National Geographic Caught In The Act', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71998, u'Jimmy Kimmel Live', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71998, u'Jimmy Kimmel', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76104, u'The Mole AU', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76107, u'Doctor Who Classic', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [94551, u'Parenthood (2010)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [94551, u'Parenthood', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [94551, u'Parenthood 2010', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [84312, u'Click (2000)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [84312, u'Click UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [172381, u'Silent Library (US)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80226, u'Inspector George Gently', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80226, u'George Gently', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76133, u'Poirot', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76133, u"Agatha Christie's Poirot", 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76133, u'Agatha Christie Poirot', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [280937, u'Satisfaction US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [166251, u'Four Corners', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [280949, u'Brandi and Jarrod-Married to the Job', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [199031, u'Click and Clack As the Wrench Turns', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [281664, u'Partners 2014', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76119, u'NOVA', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76119, u'PBS NOVA', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76168, u'Batman: The Animated Series', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76168, u'Batman: TAS', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [197001, u'Supernatural The Animation', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [197001, u'Supernatural: TAS', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [256394, u'Lab Rats', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [252312, u'Jessie', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250267, u'The Food Truck NZ', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [252319, u"Dragons' Den: How To Win In The Den", 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [252319, u'How to win in the Den', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [139681, u"The Smoking Gun Presents: The World's Dumbest", 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [139681, u"World's Dumbest", 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80290, u'Jamie Oliver Jamies Kitchen', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [278976, u'The Comic Artist and His Assistants', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [283073, u'Fat N Furious-Rolling Thunder', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [116811, u'Dragons Den CA', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248261, u'National Terrorism Strike Force: San Diego: Sport Utility Vehicle', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248261, u'National Terrorism Strike Force: San Diego: SUV', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248261, u'NTSF:SD:SUV::', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248261, u'NTSF SD SUV', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82374, u'Ultimate Factories', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82374, u'National Geographic Ultimate Factories', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76235, u"America's Funniest Home Videos", 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76235, u'AFHV', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76237, u'Big Brother (Australia)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76237, u'Big Brother AU', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72150, u'BBC Later With Jools Holland', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250331, u"Richard Hammond's Journey To...", 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250331, u'Richard Hammonds Journey To', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72164, u'The O.C.', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72164, u'The OC', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [264679, u'National Geographic UFO Europe Untold Stories', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [260586, u'Cosmos A Space Time Odyssey', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80379, u'The Big Bang Theory', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80379, u'Big Bang Theory', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80379, u'TBBT', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [90621, u'Discovery Channel Sunrise Earth', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [90621, u'Sunrise Earth', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [270849, u'I Didnt Do It', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72194, u'The Ellen Degeneres Show', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72194, u'Ellen Degeneres', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [246281, u'King', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [246281, u'King (2011)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82448, u'Project Runway Australia', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82448, u'Project Runway AU', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [90651, u'Selling Houses Australia', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [90651, u'Selling Houses Australia Extreme', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [273005, u'Ace of The Diamond', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72224, u'The Outer Limits (1995)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72224, u'The Outer Limits: TNS', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72224, u'The Outer Limits: The New Series', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82467, u'Eastbound Down', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82467, u'Eastbound and Down', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72231, u'Real Time with Bill Maher', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72231, u'Real Time With Bill Maher Plus Overtime', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74281, u'Have I Got News for You Uncut', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [88631, u'Krod Mandoon', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [283196, u'Married at First Sight US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [264776, u'Adam Hills In Gordon St Tonight', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250445, u'The Renovators', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250445, u'The Renovators AU', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [174681, u'Scooby-Doo! Mystery Incorporated', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [174681, u'Scooby Doo Mystery Incorporated', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [275039, u'Sailor Moon Crystal', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [164451, u'Carlos (2010)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [273002, u'I Couldnt Become a Hero So I Reluctantly Decided to Get a Job', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72301, u'Penn and Teller Bullshit', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72306, u'The Venture Brothers', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [90751, u'Travel Channel Planet Food', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [262787, u'Homefront UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74372, u'Blue Planet', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80522, u'Who Do You Think You Are?', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80522, u'Who Do You Think You Are UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [283291, u'Beyonce X10 The Mrs Carter Show World Tour', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250525, u'Hamish And Andys Gap Year', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250525, u'Hamish And Andys Euro Gap Year', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [139941, u'Childrens Hospital (US)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [139941, u'Childrens Hospital', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80552, u'Kitchen Nightmares (US)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80552, u'Kitchen Nightmares US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [168621, u'Melissa & Joey', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [168621, u'Melissa and Joey', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [250544, u'Match of the Day Two', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [277169, u'Faking It 2014', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [277171, u'Tough Young Teachers UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70327, u'Buffy the Vampire Slayer', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70327, u'Buffy', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70336, u'The Tonight Show with Jay Leno', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70336, u'Jay Leno', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [88771, u"The Apprentice: You're Fired!", 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [88771, u'The Apprentice UK Youre Fired', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [88771, u'The Apprentice UK Your Fired', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [88771, u'The Apprentice Youre Fired', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [281467, u'Matador US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [131791, u'Sci-Fi Science', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [131791, u'Sci-Fi Science: Physics of the Impossible', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [131791, u'Sci Fi Science Physics of the Impossible', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [258773, u'Zero Hour US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [260839, u'MasterChef Allstars AU', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72829, u'The Apprentice', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72829, u'The Apprentice US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80625, u'MegaStructures', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80625, u'National Geographic Megastructures', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72449, u'Stargate SG1', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80646, u'Frontline (US)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80646, u'Frontline US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [262927, u"Ian Hislop's Stiff Upper Lip", 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [262927, u'Ian Hislops Stiff Upper Lip An Emotional History Of Britain', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74512, u'Wife Swap (US)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80665, u'The Next Iron Chef Redemption', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248618, u'The Amazing Race Australia', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248618, u'The Amazing Race AU', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [285507, u'The Code AU', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [262980, u'House of Cards 2013', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [254798, u'Stella (2012)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [254798, u'Stella UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [263002, u'Switch (2012)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [263002, u'Switch UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72546, u'CSI', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72549, u'Big Brother UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72553, u'Mighty Morphin Power Rangers', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72553, u'Power Rangers Zeo', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72553, u'Power Rangers Turbo', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72553, u'Power Rangers in Space', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72553, u'Power Rangers Lost Galaxy', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72553, u'Power Rangers Ninja Storm', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72553, u'Power Rangers Operation Overdrive', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72553, u'Power Rangers Samurai', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72553, u'Power Rangers Super Samurai', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72553, u'Power Rangers Megaforce', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72553, u'Power Rangers Super Megaforce', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [140141, u'Undercover Boss (US)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [140141, u'Undercover Boss US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248699, u'24 Hours In A And E', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74626, u'The X Factor', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74626, u'The X Factor UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [271241, u'Deal With It US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81391, u'Wie is de mol?', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81391, u'Wie is de mol', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81391, u'widm', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76703, u'Pokemon', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76706, u'Big Brother (US)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [281511, u'Blackish', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70572, u'Little Rascals', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70572, u'The Little Rascals', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70578, u'Highway Patrol', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70578, u'Highway Patrol (AU)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73545, u'Battlestar Galactica', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [238521, u'Adam Eva', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [281535, u'Forever US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76736, u'The Black Adder', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76736, u'BlackAdder', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [166851, u'Noise Control (NZ)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [267206, u'Low Winter Sun US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [78804, u'Doctor Who 2005', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248789, u'Smash (2012)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248789, u'Smash', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [187351, u'This is England', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [187351, u'This is England 86', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [187351, u'This is England 88', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [193501, u'XIII', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [193501, u'XIII (2011)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [193501, u'XIII The Series (2011)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [84133, u'Manhunters: Fugitive Task Force', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [84133, u'Manhunters - Fugitive Task Force', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [230371, u'David Attenborough Madagascar', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82918, u'Diners, Drive-ins and Dives', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82918, u'Diners Drive ins and Dives', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [82918, u'Diners Driveins and Dives', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [273383, u'The House That 100k Built', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76779, u'WWE Monday Night RAW', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248812, u'Dont Trust the Bitch in Apartment 23', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248812, u'Apartment 23', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [220141, u'Wolverine', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [220141, u'Wolverine 2011', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [283630, u'Doraemon US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [267260, u'Intelligence US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [175101, u'Travel Channel Culture Shock', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [78846, u'Shameless UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248834, u'Last Man Standing (2011)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248834, u'Last Man Standing US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248834, u'Last Man Standing', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248835, u'Once Upon a Time (2011)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248835, u'Once Upon a Time', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248836, u'The River', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76808, u'Whose Line is it Anyway US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248841, u'Scandal US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72716, u'QI XL', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72716, u'BBC QI XL', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72716, u'BBC QI XL (Quite Interesting)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72716, u'BBC QI', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72716, u'BBC QI (Quite Interesting)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74768, u'The Block', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74768, u'The Block AU', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74768, u'The Block All Stars', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74768, u'The Block All Stars AU', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74768, u'The Block AU All Stars', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74768, u'The Block AU Sky High', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74768, u'The Block AU Fans vs Faves', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74768, u'The Block AU Glasshouse', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76817, u'The Ponderosa', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80915, u'La Linea 1972', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [277528, u'Love Child AU', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [281776, u'Youre the Worst', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [259106, u'Emily Owens M D', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [259106, u'Emily Owens MD', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [265252, u'MasterChef Australia The Professionals', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [275493, u'Backchat With Jack Whitehall And His Dad', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [105521, u'The Colony', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [105521, u'The Colony (US)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [279603, u'The Face AU', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [84489, u'Masterchef', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [84489, u'MasterChef UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [271421, u'Clarence US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [277568, u'Babylon', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [252019, u'The Bridge 2011', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80964, u'Yo Gabba Gabba', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [255045, u'The L.A. Complex', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [255045, u'The LA Complex', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70726, u'Babylon 5', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70726, u'Babylon5', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [277580, u'30 For 30 Soccer Stories', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [205901, u'Transformers Prime', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [205901, u'Transformers Prime Beast Hunters', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [261202, u'DreamWorks Dragons: Riders of Berk', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [261202, u'Dragons Riders of Berk', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [261202, u'DreamWorks Dragons Riders of Berk', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [261202, u'Dragons Defenders of Berk', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [164951, u'Shit My Dad Says', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80994, u'National Geographic Channel Naked Science', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [80994, u'National Geographic Naked Science', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [156771, u'National Geographic Shark Men', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [78949, u'Thomas The Tank Engine & Friends', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [78949, u'Thomas And Friends', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [261222, u'The Burn With Jeff Ross', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [261222, u'Jeff Ross', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248935, u'Touch (2012)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248935, u'Touch', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70760, u'Celebrity Big Brother', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70760, u'Celebrity Big Brother UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [78956, u'So You Think You Can Dance US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [261240, u'H+', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [261240, u'H', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [76925, u'Dark Shadows The Revival Series 1991', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [248962, u'Transporter The Series', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74897, u'Hells Kitchen US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74897, u'Hells Kitchen', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [265373, u'David Attenboroughs Galapagos', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [120541, u'Russell Howards Good News', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [120541, u'Russell Howards Good News (UK)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83115, u'The Worlds Strictest Parents UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [85168, u'How the Earth Was Made', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [85168, u'History channel How the Earth Was Made', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [265393, u'The Legends of Chima', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83123, u'Merlin', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83123, u'Merlin (2008)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [271902, u'Legend of Shelby The Swamp Man', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [265406, u'Out There 2013', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79040, u'Britains Next Top Model', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79040, u'Britain and Irelands Next Top Model', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [74946, u'C O P S', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [263365, u'Marvels Agents of S H I E L D', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [263365, u'Marvel Agents Of SHIELD', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [263365, u'Agents of S H I E L D', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [212171, u'My Little Pony: Friendship is Magic', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [212171, u'My Little Pony Friendship is Magic', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [273616, u'Pokemon Origins', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [95441, u'NCIS: Los Angeles', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [95441, u'NCIS LA', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70870, u'The Real World Road Rules Challenge', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70870, u'The Challenge Cutthroat', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70870, u'The Challenge Battle Of The Exes', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70870, u'The Challenge Rivals', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70870, u'The Challenge Battle Of The Seasons 2', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70870, u'The Challenge Rivals II', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70870, u'The Challenge Rivals 2', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70870, u'The Challenge Free Agents', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [263387, u'Cedar Cove', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [269538, u'Satisfaction CA', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [279779, u'Sensitive Skin CA', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [284881, u'My Kitchen Rules New Zealand', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [85228, u'Law & Order: UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [85228, u'Law and Order UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [113901, u'The Super Hero Squad Show', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [113901, u'The Super Hero Squad', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [208111, u'Gold Rush', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [208111, u'Gold Rush: Alaska', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [118001, u'Beauty and the Geek Australia', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [118001, u'Beauty and the Geek AU', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [195831, u"Zane Lamprey's Drinking Made Easy", 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [210171, u'The Killing (2011)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [210171, u'The Killing', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [152831, u'Adventure Time with Finn and Jake', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [275723, u'Panic Button US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [269584, u'Rake US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [269586, u'Brooklyn Nine Nine', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [269589, u'Dads', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [267542, u'Naked and Marooned with Ed Stafford', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [267543, u'Hulk and the Agents of S M A S H', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [267543, u'Hulk and the Agents of SMASH', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [75032, u'Cathouse The Series', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [75032, u'CatHouse', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [220441, u'R L Stines The Haunting Hour The Series', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [220441, u'R L Stines The Haunting Hour', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [220441, u"R.L. Stine's The Haunting Hour The Series", 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [193821, u'Iron Man 2010', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [193821, u'Iron Man 2011', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [95521, u'National Geographic Ancient Megastructures', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [77120, u'Aqua Teen Hunger Force', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [77120, u'Aqua Unit Patrol Squad', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [77120, u'Aqua Unit Patrol Squad 1', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [77120, u'Aqua Something You Know Whatever', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [275777, u'Wild Burma', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83268, u'Star Wars The Clone Wars 2008', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83268, u'Star Wars The Clone Wars', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [269637, u'The Michael J Fox Show', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [269641, u'Chicago P D', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [269641, u'Chicago PD', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [268855, u'Turbo FAST', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81230, u'Celebrity Rehab with Dr Drew', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [75088, u'David Letterman', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [269650, u'Resurrection US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [269651, u'Mind Games', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [269653, u'The Goldbergs', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [222551, u'Only in America With Larry the Cable Guy', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [222551, u'Only in America', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [259418, u'David Attenborough Kingdom Of Plants', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [273761, u'Master Chef Canada', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83299, u'Magics Biggest Secrets Finally Revealed', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79212, u'The Dog Whisperer', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79212, u'Dog Whisperer', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [271728, u'Pete Holmes Show', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [253323, u'Ninjago Masters Of Spinjitzu', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [253323, u'LEGO NinjaGo: Masters of Spinjitzu', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [249229, u'A.N.T Farm', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [249229, u'ANT Farm', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [75166, u'The Biggest Loser US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [122281, u"Garrow's Law - Tales from the Old Bailey", 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [122281, u'Garrows Law', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [284076, u'Thats Incredible 2014', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [267709, u'Kesha My Crazy Beautiful Life', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81346, u'Underbelly', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81346, u'The Underbelly Files', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81346, u'Underbelly Files', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81346, u'Underbelly A Tale of Two Cities', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81346, u'Underbelly A Tale Of Two Cities UNCUT', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81346, u'Underbelly Razor', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81346, u'Underbelly The Golden Mile', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81346, u'Underbelly Badness', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81346, u'Underbelly Squizzy', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [97731, u'Tosh.0', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [97731, u'Tosh 0', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [251334, u'Lawless UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [269783, u'Reckless US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73178, u'Two Guys a Girl and a Pizza Place', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [280027, u'Off the Bat from the MLB Fan Cave', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79330, u'Jericho', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [265467, u'Polar Bear Family and Me', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83430, u'National Geographic Banged Up Abroad', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81386, u'Being Human', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81386, u'Being Human (UK)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [189931, u'RBT (AU)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [132591, u'7 Days (2009)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [132591, u'7 Days NZ', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81491, u'Big Brother After Dark', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81491, u'Big Brother US After Dark', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81491, u'Big Brother After Dark US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [259669, u'DaVincis Demons', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [259669, u'Vincis Demons', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [259669, u"Vinci's Demons", 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [138761, u'Arn The Knight Templar', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [77398, u'X-Files', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83462, u'Castle (2009)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83462, u'Castle', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83462, u'Castle 2009', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [128521, u'Million Dollar Listing', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [257550, u'Bellator FC', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [249361, u'Boss (2011)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [249361, u'Boss', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [251418, u'Frozen Planet', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [251418, u'David Attenborough Frozen Planet', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [251418, u'BBC Frozen Planet', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73244, u'The Office (US)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73244, u'The Office', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79389, u'Nightmares and Dreamscapes', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73246, u'30 Minute Meals', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73246, u'30 Minute Meals with Rachel Ray', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [122401, u'Discovery Channel Cool Stuff and How it works', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [122401, u'Cool Stuff and How it works', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73255, u'House', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73255, u'House M D', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [253485, u'The Syndicate 2012', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [253485, u'The Syndicate', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [261690, u'The Americans', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [192061, u'Young Justice', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [192061, u'Young Justice Invasion', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [271936, u'Played CA', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [155201, u'Louie (2010)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [155201, u'Louie', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [273986, u'Breathless UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73290, u'60 Minutes (US)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [204371, u'AuctionHunters', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [247381, u'Superscrimpers', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [271958, u'Arsenio Hall', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [265145, u'David Attenboroughs Africa', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71256, u'The Daily Show', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71256, u'The Daily Show with Jon Stewart', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [212571, u'Come Fly With Me (2010)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [271632, u'Lucas Bros Moving Company', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [253543, u'All American Muslim', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [253543, u'All-American Muslim', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [257645, u'Ultimate Spider-man', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [257645, u'Ultimate Spiderman', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [257645, u'Ultimate Spider man', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [257645, u'Ultimate Spider-Man Web Warriors', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [120431, u'Food Factory', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [271984, u'Wonderland AU', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [75382, u'The Ultimate Fighter Live', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [75382, u'The Ultimate Fighter Fridays', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [75382, u'The Ultimate Fighter', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [75393, u'The X Factor (AU)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [75393, u'The X Factor Australia', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [77444, u'This Old House Program', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [149101, u'A League of Their Own (2010)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [149101, u'A League of Their Own UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [165521, u'Girls Gone Wild The Search for the Hottest Girl in America', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81559, u'The Biggest Loser Australia', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81559, u'The Biggest Loser AU', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [122521, u'The Fresh Beat Band', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [122521, u'Fresh Beat Band', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81563, u'Border Security AU Front Line', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81563, u"Border Security Australia's Frontline", 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73387, u'The Late Late Show with Craig Ferguson', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73387, u'Craig Ferguson', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81580, u'Come Dine With Me UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [274099, u'At Midnight', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [276148, u'Review With Forrest MacNeil', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79565, u'The Real Hustle', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79565, u'The Real Hustle UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [274129, u'Klondike 2014', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [194261, u'PhoneShop', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [194261, u'Phone Shop', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [77526, u'Star Trek: TOS', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [100061, u'Undercover Boss', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [100061, u'Undercover Boss UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72073, u'Star Trek DS9', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79590, u'Dancing With The Stars (US)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [253682, u'Project Runway Allstars', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [253682, u'Project Runway All-Stars', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [196351, u'T.U.F.F. Puppy', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [196351, u'TUFF Puppy', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83714, u'Genius', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83714, u'Genius With Dave Gormand', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81670, u'The Murdoch Mysteries', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81670, u'Murdoch Mysteries', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [81670, u'The Murdoch Mysteries (2008)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72663, u'Accused', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [72663, u'Accused UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [257804, u'Too Cute!', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [280339, u'Food Fighters US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71462, u'Sharpes', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [280361, u'Prey UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [284458, u'The Chair', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [110381, u'Archer', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71470, u'Star Trek: The Next Generation', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71470, u'Star Trek TNG', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [75567, u'The Xtra Factor', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [75567, u'The Xtra Factor UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79668, u'Anthony Bourdain: No Reservations', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79668, u'No Reservations', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83774, u'Antiques Roadshow (UK)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83774, u'Antiques Roadshow UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71489, u'Law and Order CI', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [71489, u'Law & Order: CI', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [221001, u'10 O Clock Live', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [202571, u'The Trip to Italy', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [210771, u'Cake Boss Next Great Baker', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [276312, u'From Dusk Til Dawn', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [276312, u'From Dusk Till Dawn', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [227161, u'Oprah Presents Master Class', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [227161, u"Oprah's Master Class", 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73562, u'Beast Wars Transformers', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [264030, u'Avengers Assemble', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [264030, u'Marvels Avengers Assemble', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [259946, u'Location Location Location AU', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [259047, u'VGHS', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [249708, u'The Car Show', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [249708, u'The Car Show 2011', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73587, u'The Twilight Zone 1959', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73587, u'The Twilight Zone 1960', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73587, u'The Twilight Zone 1961', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73587, u'The Twilight Zone 1962', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73587, u'The Twilight Zone 1963', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73587, u'The Twilight Zone 1964', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [280446, u'The Tom and Jerry Show', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73599, u'Dark Shadows (1966)', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73599, u'Dark Shadows The Beginning', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [89991, u'Out of the Wild: The Alaskan Experiment', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [89991, u'Out of the Wild: Venezuela', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [276360, u'19-2 CA', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [223161, u'CBC Marketplace', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [264085, u'The Bridge US', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79771, u'Air Crash Investigation', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79771, u'Air Crash Investigation Mayday', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79771, u'National Geographic Air Crash Investigation', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [251807, u'Green Lantern: The Animated Series', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [251807, u'Green Lantern TAS', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [251807, u'Green Lantern The Animated Series', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [77733, u'Degrassi: The Next Generation', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [77733, u'Degrassi TNG', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [77733, u'Degrassi', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73641, u'King of Queens', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [75692, u'Law & Order: SVU', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [270261, u'Jimmy Fallon', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [270262, u'Seth Meyers', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79177, u'Life On Mars UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [83897, u'Life After People: The Series', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [92091, u'MasterChef Australia', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [92091, u'MasterChef AU', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [263506, u'Jamies 16 Minute Meals', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [264141, u'Falcon', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79824, u'Naruto Shippuden', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [77780, u'G.I. Joe', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [77780, u'GI Joe', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [77780, u'G I Joe', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79836, u"Dragon's Den (UK)", 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [79836, u'Dragons Den UK', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [178141, u'My Ghost Story', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [73696, u'CSI: New York', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [270307, u'Family SOS with Jo Frost', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [75748, u'The Culture Show Uncut', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [253931, u'Rob', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: INSERT INTO scene_exceptions (tvdb_id,show_name,provider) VALUES (?,?,?); with args [70994, u'MASH', 'sb_tvdb_scene_exceptions']
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: Transaction with 651 query's executed
2014-10-03 11:18:13 INFO     CHECKVERSION :: Clear name cache
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: cache.db: DELETE FROM scene_names WHERE tvdb_id = ? with args [0]
2014-10-03 11:18:13 INFO     CHECKVERSION :: Performing a vacuum on database: cache.db
2014-10-03 11:18:13 DEBUG    CHECKVERSION :: cache.db: VACUUM
2014-10-03 11:18:13 INFO     MAIN :: Waiting for the BACKLOG thread to exit
2014-10-03 11:18:14 INFO     MAIN :: Waiting for the SHOWUPDATER thread to exit
2014-10-03 11:18:15 INFO     MAIN :: Waiting for the VERSIONCHECKER thread to exit
2014-10-03 11:18:16 INFO     MAIN :: Waiting for the SHOWQUEUE thread to exit
2014-10-03 11:18:16 INFO     MAIN :: Waiting for the SEARCHQUEUE thread to exit
2014-10-03 11:18:17 INFO     MAIN :: Waiting for the POSTPROCESSER thread to exit
2014-10-03 11:18:18 INFO     MAIN :: Waiting for the PROPERFINDER thread to exit
2014-10-03 11:18:19 INFO     MAIN :: Saving all shows to the database
2014-10-03 11:18:19 INFO     MAIN :: Saving config file to disk
2014-10-03 11:18:19 INFO     MAIN :: Killing cherrypy
2014-10-03 11:20:08 INFO     MAIN :: Checking database structure...
2014-10-03 11:20:08 DEBUG    MAIN :: Checking Initial Schema database upgrade
2014-10-03 11:20:08 DEBUG    MAIN :: sickbeard.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('tv_shows',)
2014-10-03 11:20:08 DEBUG    MAIN :: sickbeard.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('db_version',)
2014-10-03 11:20:08 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 11:20:08 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 11:20:08 DEBUG    MAIN :: Initial Schema upgrade not required
2014-10-03 11:20:08 DEBUG    MAIN :: Checking Add Size And Scene Name Fields database upgrade
2014-10-03 11:20:08 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 11:20:08 DEBUG    MAIN :: Add Size And Scene Name Fields upgrade not required
2014-10-03 11:20:08 DEBUG    MAIN :: Checking Rename Season Folders database upgrade
2014-10-03 11:20:08 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 11:20:08 DEBUG    MAIN :: Rename Season Folders upgrade not required
2014-10-03 11:20:08 DEBUG    MAIN :: Checking Add1080p And Raw Qualities database upgrade
2014-10-03 11:20:08 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 11:20:08 DEBUG    MAIN :: Add1080p And Raw Qualities upgrade not required
2014-10-03 11:20:08 DEBUG    MAIN :: Checking Add Showid Tvdbid Index database upgrade
2014-10-03 11:20:08 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 11:20:08 DEBUG    MAIN :: Add Showid Tvdbid Index upgrade not required
2014-10-03 11:20:08 DEBUG    MAIN :: Checking Add Last Update database upgrade
2014-10-03 11:20:08 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 11:20:08 DEBUG    MAIN :: Add Last Update upgrade not required
2014-10-03 11:20:08 DEBUG    MAIN :: Checking Add Require And Ignore Words database upgrade
2014-10-03 11:20:08 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 11:20:08 DEBUG    MAIN :: Add Require And Ignore Words upgrade not required
2014-10-03 11:20:08 DEBUG    MAIN :: Checking Cleanup History And Specials database upgrade
2014-10-03 11:20:08 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 11:20:08 DEBUG    MAIN :: Cleanup History And Specials upgrade not required
2014-10-03 11:20:08 DEBUG    MAIN :: Checking Add Skip Notifications database upgrade
2014-10-03 11:20:08 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 11:20:08 DEBUG    MAIN :: Add Skip Notifications upgrade not required
2014-10-03 11:20:08 DEBUG    MAIN :: Checking Add History Source database upgrade
2014-10-03 11:20:08 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 11:20:08 DEBUG    MAIN :: Add History Source upgrade not required
2014-10-03 11:20:08 INFO     MAIN :: Checking database structure...
2014-10-03 11:20:08 DEBUG    MAIN :: Checking Initial Schema database upgrade
2014-10-03 11:20:08 DEBUG    MAIN :: cache.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('lastUpdate',)
2014-10-03 11:20:08 DEBUG    MAIN :: Initial Schema upgrade not required
2014-10-03 11:20:08 DEBUG    MAIN :: Checking Add Scene Exceptions database upgrade
2014-10-03 11:20:08 DEBUG    MAIN :: cache.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('scene_exceptions',)
2014-10-03 11:20:08 DEBUG    MAIN :: Add Scene Exceptions upgrade not required
2014-10-03 11:20:08 DEBUG    MAIN :: Checking Add Scene Name Cache database upgrade
2014-10-03 11:20:08 DEBUG    MAIN :: cache.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('scene_names',)
2014-10-03 11:20:08 DEBUG    MAIN :: Add Scene Name Cache upgrade not required
2014-10-03 11:20:08 DEBUG    MAIN :: Checking Add Scene Exceptions Provider database upgrade
2014-10-03 11:20:08 DEBUG    MAIN :: Add Scene Exceptions Provider upgrade not required
2014-10-03 11:20:08 DEBUG    MAIN :: sickbeard.db: SELECT show_id, tvdb_id, COUNT(tvdb_id) as count FROM tv_shows GROUP BY tvdb_id HAVING count > 1
2014-10-03 11:20:08 INFO     MAIN :: No duplicate show, check passed
2014-10-03 11:20:08 DEBUG    MAIN :: sickbeard.db: SELECT showid, season, episode, COUNT(showid) as count FROM tv_episodes GROUP BY showid, season, episode HAVING count > 1
2014-10-03 11:20:08 INFO     MAIN :: No duplicate episode, check passed
2014-10-03 11:20:08 DEBUG    MAIN :: sickbeard.db: SELECT episode_id, showid, tv_shows.tvdb_id FROM tv_episodes LEFT JOIN tv_shows ON tv_episodes.showid=tv_shows.tvdb_id WHERE tv_shows.tvdb_id is NULL
2014-10-03 11:20:08 INFO     MAIN :: No orphan episodes, check passed
2014-10-03 11:20:08 DEBUG    MAIN :: config_version -> 6
2014-10-03 11:20:08 DEBUG    MAIN :: Checking if we can use git commands: git version
2014-10-03 11:20:08 DEBUG    MAIN :: Executing git version with your shell in /Users/cman/Temp/sickbeard_ynh/sources/Sick-Beard
2014-10-03 11:20:08 DEBUG    MAIN :: git output: git version 2.1.0
2014-10-03 11:20:08 DEBUG    MAIN :: git version : returned successful
2014-10-03 11:20:08 DEBUG    MAIN :: Using: git
2014-10-03 11:20:08 DEBUG    MAIN :: Executing git symbolic-ref -q HEAD with your shell in /Users/cman/Temp/sickbeard_ynh/sources/Sick-Beard
2014-10-03 11:20:08 DEBUG    MAIN :: git output: refs/heads/development
2014-10-03 11:20:08 DEBUG    MAIN :: git symbolic-ref -q HEAD : returned successful
2014-10-03 11:20:08 DEBUG    MAIN :: Retrieving the last check time from the DB
2014-10-03 11:20:08 DEBUG    MAIN :: sickbeard.db: SELECT * FROM info
2014-10-03 11:20:08 INFO     MAIN :: Starting Sick Beard on http://0.0.0.0:7779/
2014-10-03 11:20:08 INFO     MAIN :: Loading initial show list
2014-10-03 11:20:08 DEBUG    MAIN :: sickbeard.db: SELECT * FROM tv_shows
2014-10-03 11:20:08 DEBUG    CHECKVERSION :: Starting new thread: CHECKVERSION
2014-10-03 11:20:08 INFO     CHECKVERSION :: Checking if git needs an update
2014-10-03 11:20:08 DEBUG    CHECKVERSION :: Executing git rev-parse HEAD with your shell in /Users/cman/Temp/sickbeard_ynh/sources/Sick-Beard
2014-10-03 11:20:08 DEBUG    CHECKVERSION :: git output: 9dc20d8d4ef12a2bea75c9fa1f45be962383fe45
2014-10-03 11:20:08 DEBUG    CHECKVERSION :: git rev-parse HEAD : returned successful
2014-10-03 11:20:08 DEBUG    CHECKVERSION :: Executing git fetch origin with your shell in /Users/cman/Temp/sickbeard_ynh/sources/Sick-Beard
2014-10-03 11:20:09 DEBUG    CP Server Thread-4 :: sickbeard.db: SELECT showid, (SELECT COUNT(*) FROM tv_episodes WHERE showid=tv_eps.showid AND season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE showid=tv_eps.showid AND season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE showid=tv_eps.showid AND season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 735509 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total,  (SELECT airdate FROM tv_episodes WHERE showid=tv_eps.showid AND airdate >= 735509 AND status = 1 ORDER BY airdate ASC LIMIT 1) AS ep_airs_next  FROM tv_episodes tv_eps GROUP BY showid
2014-10-03 11:20:09 DEBUG    CP Server Thread-4 :: sickbeard.db: SELECT (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 735509 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total  FROM tv_episodes tv_eps LIMIT 1
2014-10-03 11:20:14 DEBUG    CHECKVERSION :: git output: 
2014-10-03 11:20:14 DEBUG    CHECKVERSION :: git fetch origin : returned successful
2014-10-03 11:20:14 DEBUG    CHECKVERSION :: Executing git rev-parse --verify --quiet "@{upstream}" with your shell in /Users/cman/Temp/sickbeard_ynh/sources/Sick-Beard
2014-10-03 11:20:14 DEBUG    CHECKVERSION :: git output: 9dc20d8d4ef12a2bea75c9fa1f45be962383fe45
2014-10-03 11:20:14 DEBUG    CHECKVERSION :: git rev-parse --verify --quiet "@{upstream}" : returned successful
2014-10-03 11:20:14 DEBUG    CHECKVERSION :: Executing git rev-list --left-right "@{upstream}"...HEAD with your shell in /Users/cman/Temp/sickbeard_ynh/sources/Sick-Beard
2014-10-03 11:20:14 DEBUG    CHECKVERSION :: git output: 
2014-10-03 11:20:14 DEBUG    CHECKVERSION :: git rev-list --left-right "@{upstream}"...HEAD : returned successful
2014-10-03 11:20:14 DEBUG    CHECKVERSION :: cur_commit = 9dc20d8d4ef12a2bea75c9fa1f45be962383fe45, newest_commit = 9dc20d8d4ef12a2bea75c9fa1f45be962383fe45, num_commits_behind = 0, num_commits_ahead = 0
2014-10-03 11:20:14 INFO     CHECKVERSION :: No update needed
2014-10-03 11:20:14 INFO     CHECKVERSION :: Check scene exceptions update
2014-10-03 11:20:14 DEBUG    CHECKVERSION :: cache.db: SELECT tvdb_id, show_name FROM scene_exceptions WHERE provider=?; with args ['sb_tvdb_scene_exceptions']
2014-10-03 11:20:14 INFO     CHECKVERSION :: No scene exceptions update needed
2014-10-03 11:20:17 INFO     MAIN :: Signal 2 caught, saving and exiting...
2014-10-03 11:20:17 INFO     MAIN :: Aborting all threads
2014-10-03 11:20:17 INFO     MAIN :: Waiting for the SEARCH thread to exit
2014-10-03 11:20:17 INFO     MAIN :: Waiting for the BACKLOG thread to exit
2014-10-03 11:20:18 INFO     MAIN :: Waiting for the SHOWUPDATER thread to exit
2014-10-03 11:20:19 INFO     MAIN :: Waiting for the VERSIONCHECKER thread to exit
2014-10-03 11:20:20 INFO     MAIN :: Waiting for the SHOWQUEUE thread to exit
2014-10-03 11:20:20 INFO     MAIN :: Waiting for the SEARCHQUEUE thread to exit
2014-10-03 11:20:21 INFO     MAIN :: Waiting for the POSTPROCESSER thread to exit
2014-10-03 11:20:21 INFO     MAIN :: Waiting for the PROPERFINDER thread to exit
2014-10-03 11:20:22 INFO     MAIN :: Saving all shows to the database
2014-10-03 11:20:22 INFO     MAIN :: Saving config file to disk
2014-10-03 11:20:22 INFO     MAIN :: Killing cherrypy
2014-10-03 13:11:41 INFO     MAIN :: Checking database structure...
2014-10-03 13:11:41 DEBUG    MAIN :: Checking Initial Schema database upgrade
2014-10-03 13:11:41 DEBUG    MAIN :: sickbeard.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('tv_shows',)
2014-10-03 13:11:41 DEBUG    MAIN :: sickbeard.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('db_version',)
2014-10-03 13:11:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:11:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:11:41 DEBUG    MAIN :: Initial Schema upgrade not required
2014-10-03 13:11:41 DEBUG    MAIN :: Checking Add Size And Scene Name Fields database upgrade
2014-10-03 13:11:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:11:41 DEBUG    MAIN :: Add Size And Scene Name Fields upgrade not required
2014-10-03 13:11:41 DEBUG    MAIN :: Checking Rename Season Folders database upgrade
2014-10-03 13:11:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:11:41 DEBUG    MAIN :: Rename Season Folders upgrade not required
2014-10-03 13:11:41 DEBUG    MAIN :: Checking Add1080p And Raw Qualities database upgrade
2014-10-03 13:11:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:11:41 DEBUG    MAIN :: Add1080p And Raw Qualities upgrade not required
2014-10-03 13:11:41 DEBUG    MAIN :: Checking Add Showid Tvdbid Index database upgrade
2014-10-03 13:11:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:11:41 DEBUG    MAIN :: Add Showid Tvdbid Index upgrade not required
2014-10-03 13:11:41 DEBUG    MAIN :: Checking Add Last Update database upgrade
2014-10-03 13:11:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:11:41 DEBUG    MAIN :: Add Last Update upgrade not required
2014-10-03 13:11:41 DEBUG    MAIN :: Checking Add Require And Ignore Words database upgrade
2014-10-03 13:11:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:11:41 DEBUG    MAIN :: Add Require And Ignore Words upgrade not required
2014-10-03 13:11:41 DEBUG    MAIN :: Checking Cleanup History And Specials database upgrade
2014-10-03 13:11:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:11:41 DEBUG    MAIN :: Cleanup History And Specials upgrade not required
2014-10-03 13:11:41 DEBUG    MAIN :: Checking Add Skip Notifications database upgrade
2014-10-03 13:11:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:11:41 DEBUG    MAIN :: Add Skip Notifications upgrade not required
2014-10-03 13:11:41 DEBUG    MAIN :: Checking Add History Source database upgrade
2014-10-03 13:11:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:11:41 DEBUG    MAIN :: Add History Source upgrade not required
2014-10-03 13:11:41 INFO     MAIN :: Checking database structure...
2014-10-03 13:11:41 DEBUG    MAIN :: Checking Initial Schema database upgrade
2014-10-03 13:11:41 DEBUG    MAIN :: cache.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('lastUpdate',)
2014-10-03 13:11:41 DEBUG    MAIN :: Initial Schema upgrade not required
2014-10-03 13:11:41 DEBUG    MAIN :: Checking Add Scene Exceptions database upgrade
2014-10-03 13:11:41 DEBUG    MAIN :: cache.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('scene_exceptions',)
2014-10-03 13:11:41 DEBUG    MAIN :: Add Scene Exceptions upgrade not required
2014-10-03 13:11:41 DEBUG    MAIN :: Checking Add Scene Name Cache database upgrade
2014-10-03 13:11:41 DEBUG    MAIN :: cache.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('scene_names',)
2014-10-03 13:11:41 DEBUG    MAIN :: Add Scene Name Cache upgrade not required
2014-10-03 13:11:41 DEBUG    MAIN :: Checking Add Scene Exceptions Provider database upgrade
2014-10-03 13:11:41 DEBUG    MAIN :: Add Scene Exceptions Provider upgrade not required
2014-10-03 13:11:41 DEBUG    MAIN :: sickbeard.db: SELECT show_id, tvdb_id, COUNT(tvdb_id) as count FROM tv_shows GROUP BY tvdb_id HAVING count > 1
2014-10-03 13:11:41 INFO     MAIN :: No duplicate show, check passed
2014-10-03 13:11:41 DEBUG    MAIN :: sickbeard.db: SELECT showid, season, episode, COUNT(showid) as count FROM tv_episodes GROUP BY showid, season, episode HAVING count > 1
2014-10-03 13:11:41 INFO     MAIN :: No duplicate episode, check passed
2014-10-03 13:11:41 DEBUG    MAIN :: sickbeard.db: SELECT episode_id, showid, tv_shows.tvdb_id FROM tv_episodes LEFT JOIN tv_shows ON tv_episodes.showid=tv_shows.tvdb_id WHERE tv_shows.tvdb_id is NULL
2014-10-03 13:11:41 INFO     MAIN :: No orphan episodes, check passed
2014-10-03 13:11:41 DEBUG    MAIN :: config_version -> 6
2014-10-03 13:11:41 DEBUG    MAIN :: Retrieving the last check time from the DB
2014-10-03 13:11:41 DEBUG    MAIN :: sickbeard.db: SELECT * FROM info
2014-10-03 13:11:41 INFO     MAIN :: Starting Sick Beard on http://0.0.0.0:7779/
2014-10-03 13:11:41 INFO     MAIN :: Loading initial show list
2014-10-03 13:11:41 DEBUG    MAIN :: sickbeard.db: SELECT * FROM tv_shows
2014-10-03 13:11:41 DEBUG    CHECKVERSION :: Starting new thread: CHECKVERSION
2014-10-03 13:11:41 INFO     CHECKVERSION :: Checking if source needs an update
2014-10-03 13:11:42 DEBUG    CP Server Thread-4 :: sickbeard.db: SELECT showid, (SELECT COUNT(*) FROM tv_episodes WHERE showid=tv_eps.showid AND season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE showid=tv_eps.showid AND season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE showid=tv_eps.showid AND season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 735509 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total,  (SELECT airdate FROM tv_episodes WHERE showid=tv_eps.showid AND airdate >= 735509 AND status = 1 ORDER BY airdate ASC LIMIT 1) AS ep_airs_next  FROM tv_episodes tv_eps GROUP BY showid
2014-10-03 13:11:42 DEBUG    CP Server Thread-4 :: sickbeard.db: SELECT (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 735509 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total  FROM tv_episodes tv_eps LIMIT 1
2014-10-03 13:11:43 DEBUG    CHECKVERSION :: cur_commit = None, newest_commit = 630fb45df4843069ab2268d4819432e346904901, num_commits_behind = 0
2014-10-03 13:11:43 DEBUG    CHECKVERSION :: Unknown current version number, don't know if we should update or not
2014-10-03 13:11:43 INFO     CHECKVERSION :: Check scene exceptions update
2014-10-03 13:11:43 DEBUG    CHECKVERSION :: cache.db: SELECT tvdb_id, show_name FROM scene_exceptions WHERE provider=?; with args ['sb_tvdb_scene_exceptions']
2014-10-03 13:11:43 INFO     CHECKVERSION :: No scene exceptions update needed
2014-10-03 13:11:50 DEBUG    CP Server Thread-4 :: sickbeard.db: SELECT *, tv_shows.status as show_status FROM tv_episodes, tv_shows WHERE season > 0 AND airdate >= ? AND airdate < ? AND tv_shows.tvdb_id = tv_episodes.showid AND tv_episodes.status NOT IN (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) with args [735509, 735516, 4, 3276804, 204, 404, 104, 804, 12804, 25604, 1604, 3204, 6404, 2, 3276802, 202, 402, 102, 802, 12802, 25602, 1602, 3202, 6402, 6, 7]
2014-10-03 13:11:50 DEBUG    CP Server Thread-4 :: sickbeard.db: SELECT *, tv_shows.status as show_status FROM tv_episodes outer_eps, tv_shows WHERE season > 0 AND showid NOT IN () AND tv_shows.tvdb_id = outer_eps.showid AND airdate = (SELECT airdate FROM tv_episodes inner_eps WHERE inner_eps.season > 0 AND inner_eps.showid = outer_eps.showid AND inner_eps.airdate >= ? ORDER BY inner_eps.airdate ASC LIMIT 1) AND outer_eps.status NOT IN (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) with args [735516, 4, 3276804, 204, 404, 104, 804, 12804, 25604, 1604, 3204, 6404, 2, 3276802, 202, 402, 102, 802, 12802, 25602, 1602, 3202, 6402]
2014-10-03 13:11:50 DEBUG    CP Server Thread-4 :: sickbeard.db: SELECT *, tv_shows.status as show_status FROM tv_episodes, tv_shows WHERE season > 0 AND tv_shows.tvdb_id = tv_episodes.showid AND airdate < ? AND airdate >= ? AND tv_episodes.status = ? AND tv_episodes.status NOT IN (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) with args [735509, 735506, 3, 4, 3276804, 204, 404, 104, 804, 12804, 25604, 1604, 3204, 6404, 2, 3276802, 202, 402, 102, 802, 12802, 25602, 1602, 3202, 6402, 6, 7]
2014-10-03 13:11:51 DEBUG    CP Server Thread-4 :: sickbeard.db: SELECT (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 735509 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total  FROM tv_episodes tv_eps LIMIT 1
2014-10-03 13:11:59 INFO     MAIN :: Signal 2 caught, saving and exiting...
2014-10-03 13:11:59 INFO     MAIN :: Aborting all threads
2014-10-03 13:11:59 INFO     MAIN :: Waiting for the SEARCH thread to exit
2014-10-03 13:12:00 INFO     MAIN :: Waiting for the BACKLOG thread to exit
2014-10-03 13:12:01 INFO     MAIN :: Waiting for the SHOWUPDATER thread to exit
2014-10-03 13:12:02 INFO     MAIN :: Waiting for the VERSIONCHECKER thread to exit
2014-10-03 13:12:03 INFO     MAIN :: Waiting for the SHOWQUEUE thread to exit
2014-10-03 13:12:03 INFO     MAIN :: Waiting for the SEARCHQUEUE thread to exit
2014-10-03 13:12:04 INFO     MAIN :: Waiting for the POSTPROCESSER thread to exit
2014-10-03 13:12:05 INFO     MAIN :: Waiting for the PROPERFINDER thread to exit
2014-10-03 13:12:06 INFO     MAIN :: Saving all shows to the database
2014-10-03 13:12:06 INFO     MAIN :: Saving config file to disk
2014-10-03 13:12:06 INFO     MAIN :: Killing cherrypy
2014-10-03 13:14:41 INFO     MAIN :: Checking database structure...
2014-10-03 13:14:41 DEBUG    MAIN :: Checking Initial Schema database upgrade
2014-10-03 13:14:41 DEBUG    MAIN :: sickbeard.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('tv_shows',)
2014-10-03 13:14:41 DEBUG    MAIN :: sickbeard.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('db_version',)
2014-10-03 13:14:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:14:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:14:41 DEBUG    MAIN :: Initial Schema upgrade not required
2014-10-03 13:14:41 DEBUG    MAIN :: Checking Add Size And Scene Name Fields database upgrade
2014-10-03 13:14:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:14:41 DEBUG    MAIN :: Add Size And Scene Name Fields upgrade not required
2014-10-03 13:14:41 DEBUG    MAIN :: Checking Rename Season Folders database upgrade
2014-10-03 13:14:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:14:41 DEBUG    MAIN :: Rename Season Folders upgrade not required
2014-10-03 13:14:41 DEBUG    MAIN :: Checking Add1080p And Raw Qualities database upgrade
2014-10-03 13:14:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:14:41 DEBUG    MAIN :: Add1080p And Raw Qualities upgrade not required
2014-10-03 13:14:41 DEBUG    MAIN :: Checking Add Showid Tvdbid Index database upgrade
2014-10-03 13:14:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:14:41 DEBUG    MAIN :: Add Showid Tvdbid Index upgrade not required
2014-10-03 13:14:41 DEBUG    MAIN :: Checking Add Last Update database upgrade
2014-10-03 13:14:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:14:41 DEBUG    MAIN :: Add Last Update upgrade not required
2014-10-03 13:14:41 DEBUG    MAIN :: Checking Add Require And Ignore Words database upgrade
2014-10-03 13:14:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:14:41 DEBUG    MAIN :: Add Require And Ignore Words upgrade not required
2014-10-03 13:14:41 DEBUG    MAIN :: Checking Cleanup History And Specials database upgrade
2014-10-03 13:14:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:14:41 DEBUG    MAIN :: Cleanup History And Specials upgrade not required
2014-10-03 13:14:41 DEBUG    MAIN :: Checking Add Skip Notifications database upgrade
2014-10-03 13:14:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:14:41 DEBUG    MAIN :: Add Skip Notifications upgrade not required
2014-10-03 13:14:41 DEBUG    MAIN :: Checking Add History Source database upgrade
2014-10-03 13:14:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:14:41 DEBUG    MAIN :: Add History Source upgrade not required
2014-10-03 13:14:41 INFO     MAIN :: Checking database structure...
2014-10-03 13:14:41 DEBUG    MAIN :: Checking Initial Schema database upgrade
2014-10-03 13:14:41 DEBUG    MAIN :: cache.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('lastUpdate',)
2014-10-03 13:14:41 DEBUG    MAIN :: Initial Schema upgrade not required
2014-10-03 13:14:41 DEBUG    MAIN :: Checking Add Scene Exceptions database upgrade
2014-10-03 13:14:41 DEBUG    MAIN :: cache.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('scene_exceptions',)
2014-10-03 13:14:41 DEBUG    MAIN :: Add Scene Exceptions upgrade not required
2014-10-03 13:14:41 DEBUG    MAIN :: Checking Add Scene Name Cache database upgrade
2014-10-03 13:14:41 DEBUG    MAIN :: cache.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('scene_names',)
2014-10-03 13:14:41 DEBUG    MAIN :: Add Scene Name Cache upgrade not required
2014-10-03 13:14:41 DEBUG    MAIN :: Checking Add Scene Exceptions Provider database upgrade
2014-10-03 13:14:41 DEBUG    MAIN :: Add Scene Exceptions Provider upgrade not required
2014-10-03 13:14:41 DEBUG    MAIN :: sickbeard.db: SELECT show_id, tvdb_id, COUNT(tvdb_id) as count FROM tv_shows GROUP BY tvdb_id HAVING count > 1
2014-10-03 13:14:41 INFO     MAIN :: No duplicate show, check passed
2014-10-03 13:14:41 DEBUG    MAIN :: sickbeard.db: SELECT showid, season, episode, COUNT(showid) as count FROM tv_episodes GROUP BY showid, season, episode HAVING count > 1
2014-10-03 13:14:41 INFO     MAIN :: No duplicate episode, check passed
2014-10-03 13:14:41 DEBUG    MAIN :: sickbeard.db: SELECT episode_id, showid, tv_shows.tvdb_id FROM tv_episodes LEFT JOIN tv_shows ON tv_episodes.showid=tv_shows.tvdb_id WHERE tv_shows.tvdb_id is NULL
2014-10-03 13:14:41 INFO     MAIN :: No orphan episodes, check passed
2014-10-03 13:14:41 DEBUG    MAIN :: config_version -> 6
2014-10-03 13:14:41 DEBUG    MAIN :: Retrieving the last check time from the DB
2014-10-03 13:14:41 DEBUG    MAIN :: sickbeard.db: SELECT * FROM info
2014-10-03 13:14:41 INFO     MAIN :: Starting Sick Beard on http://0.0.0.0:7779/
2014-10-03 13:14:41 INFO     MAIN :: Loading initial show list
2014-10-03 13:14:41 DEBUG    MAIN :: sickbeard.db: SELECT * FROM tv_shows
2014-10-03 13:14:41 DEBUG    CHECKVERSION :: Starting new thread: CHECKVERSION
2014-10-03 13:14:41 INFO     CHECKVERSION :: Checking if source needs an update
2014-10-03 13:14:42 DEBUG    CP Server Thread-4 :: sickbeard.db: SELECT showid, (SELECT COUNT(*) FROM tv_episodes WHERE showid=tv_eps.showid AND season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE showid=tv_eps.showid AND season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE showid=tv_eps.showid AND season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 735509 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total,  (SELECT airdate FROM tv_episodes WHERE showid=tv_eps.showid AND airdate >= 735509 AND status = 1 ORDER BY airdate ASC LIMIT 1) AS ep_airs_next  FROM tv_episodes tv_eps GROUP BY showid
2014-10-03 13:14:42 DEBUG    CP Server Thread-4 :: sickbeard.db: SELECT (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 735509 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total  FROM tv_episodes tv_eps LIMIT 1
2014-10-03 13:14:43 DEBUG    CHECKVERSION :: cur_commit = None, newest_commit = 630fb45df4843069ab2268d4819432e346904901, num_commits_behind = 0
2014-10-03 13:14:43 DEBUG    CHECKVERSION :: Unknown current version number, don't know if we should update or not
2014-10-03 13:14:43 INFO     CHECKVERSION :: Check scene exceptions update
2014-10-03 13:14:43 DEBUG    CHECKVERSION :: cache.db: SELECT tvdb_id, show_name FROM scene_exceptions WHERE provider=?; with args ['sb_tvdb_scene_exceptions']
2014-10-03 13:14:43 INFO     CHECKVERSION :: No scene exceptions update needed
2014-10-03 13:14:45 DEBUG    CP Server Thread-4 :: sickbeard.db: SELECT (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 735509 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total  FROM tv_episodes tv_eps LIMIT 1
2014-10-03 13:14:52 DEBUG    CP Server Thread-4 :: sickbeard.db: SELECT (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 735509 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total  FROM tv_episodes tv_eps LIMIT 1
2014-10-03 13:15:41 DEBUG    SEARCH :: Starting new thread: SEARCH
2014-10-03 13:15:41 INFO     SEARCHQUEUE-RSS-SEARCH :: Changing all old missing episodes to status WANTED
2014-10-03 13:15:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_episodes WHERE status = ? AND season > 0 AND airdate < ? with args [1, 735509]
2014-10-03 13:15:41 INFO     SEARCHQUEUE-RSS-SEARCH :: Beginning search for new episodes on RSS
2014-10-03 13:15:41 INFO     SEARCHQUEUE-RSS-SEARCH :: Searching all providers for any needed episodes
2014-10-03 13:15:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT time FROM lastUpdate WHERE provider = ? with args ['womble_s_index']
2014-10-03 13:15:41 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Womble's Index cache update URL: http://newshost.co.za/rss/?sec=tv-sd&fr=false
2014-10-03 13:15:43 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Womble's Index cache update URL: http://newshost.co.za/rss/?sec=tv-hd&fr=false
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: UPDATE lastUpdate SET time = ? WHERE provider = ? with args [1412306144, 'womble_s_index']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO lastUpdate (time, provider) VALUES (?, ?) with args [1412306144, 'womble_s_index']
2014-10-03 13:15:44 INFO     SEARCHQUEUE-RSS-SEARCH :: Clearing Womble's Index cache and updating with new information
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: DELETE FROM [womble_s_index] WHERE 1
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: National.Geographic.Wild.Namibia.HDTV.x264-MoTv
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename National.Geographic.Wild.Namibia.HDTV.x264-MoTv into a valid episode
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: National.Geographic.Wild.Namibia.HDTV.x264-MoTv
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bad.Education.S03E03.HDTV.x264-RiVER
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bad Education
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bad.Education']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Bad Education', u'Bad Education']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Bad Education
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Bad.Education']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bad.Education.S03E03.HDTV.x264-RiVER', 3, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/faa/Bad.Education.S03E03.HDTV.x264-RiVER.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Ramsays.Costa.Del.Nightmares.S01E02.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Ramsays Costa Del Nightmares
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Ramsays.Costa.Del.Nightmares']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Ramsays Costa Del Nightmares', u'Ramsays Costa Del Nightmares']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Ramsays Costa Del Nightmares
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Ramsays.Costa.Del.Nightmares']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Ramsays.Costa.Del.Nightmares.S01E02.HDTV.x264-BARGE', 1, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/acc/Ramsays.Costa.Del.Nightmares.S01E02.HDTV.x264-BARGE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Rip.Off.Britain.S06E12.PDTV.x264-DOCERE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Rip Off Britain
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Rip.Off.Britain']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Rip Off Britain', u'Rip Off Britain']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Rip Off Britain
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Rip.Off.Britain']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Rip.Off.Britain.S06E12.PDTV.x264-DOCERE', 6, '|12|', 0, 0, 'http://www.newshost.co.za/nzb/1e0/Rip.Off.Britain.S06E12.PDTV.x264-DOCERE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Perfection.S05E07.PDTV.x264-DOCERE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Perfection
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Perfection']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Perfection', u'Perfection']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Perfection
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Perfection']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Perfection.S05E07.PDTV.x264-DOCERE', 5, '|7|', 0, 0, 'http://www.newshost.co.za/nzb/5f3/Perfection.S05E07.PDTV.x264-DOCERE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Monster.Fish.S05E03.Amazon.Shocker.HDTV.x264-ASCENDANCE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Monster Fish
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Monster.Fish']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Monster Fish', u'Monster Fish']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Monster Fish
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Monster.Fish']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Monster.Fish.S05E03.Amazon.Shocker.HDTV.x264-ASCENDANCE', 5, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/aff/Monster.Fish.S05E03.Amazon.Shocker.HDTV.x264-ASCENDANCE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Eggheads.S15E50.PDTV.x264-DOCERE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Eggheads
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Eggheads']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Eggheads', u'Eggheads']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Eggheads
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Eggheads']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Eggheads.S15E50.PDTV.x264-DOCERE', 15, '|50|', 0, 0, 'http://www.newshost.co.za/nzb/a40/Eggheads.S15E50.PDTV.x264-DOCERE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.100k.House.Tricks.Of.The.Trade.S01E05.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The 100k House Tricks Of The Trade
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.100k.House.Tricks.Of.The.Trade']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'The 100k House Tricks Of The Trade', u'The 100k House Tricks Of The Trade']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for The 100k House Tricks Of The Trade
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'The.100k.House.Tricks.Of.The.Trade']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.100k.House.Tricks.Of.The.Trade.S01E05.HDTV.x264-BARGE', 1, '|5|', 0, 0, 'http://www.newshost.co.za/nzb/6b4/The.100k.House.Tricks.Of.The.Trade.S01E05.HDTV.x264-BARGE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bargain.Hunt.S30E13.PDTV.x264-DOCERE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bargain Hunt
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bargain.Hunt']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Bargain Hunt', u'Bargain Hunt']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Bargain Hunt
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Bargain.Hunt']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bargain.Hunt.S30E13.PDTV.x264-DOCERE', 30, '|13|', 0, 0, 'http://www.newshost.co.za/nzb/b4f/Bargain.Hunt.S30E13.PDTV.x264-DOCERE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Holby.City.S16E51.HDTV.x264-FTP
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Holby City
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Holby.City']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Holby City', u'Holby City']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Holby City
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Holby.City']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Holby.City.S16E51.HDTV.x264-FTP', 16, '|51|', 0, 0, 'http://www.newshost.co.za/nzb/1c3/Holby.City.S16E51.HDTV.x264-FTP.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Shortland.Street.S23E168.HDTV.x264-FiHTV
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Shortland Street
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Shortland.Street']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Shortland Street', u'Shortland Street']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Shortland Street
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Shortland.Street']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Shortland.Street.S23E168.HDTV.x264-FiHTV', 23, '|168|', 0, 0, 'http://www.newshost.co.za/nzb/7ba/Shortland.Street.S23E168.HDTV.x264-FiHTV.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Block.NZ.S03E20.HDTV.x264-FiHTV
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Block NZ
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Block.NZ']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'The Block NZ', u'The Block NZ']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for The Block NZ
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'The.Block.NZ']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Block.NZ.S03E20.HDTV.x264-FiHTV', 3, '|20|', 0, 0, 'http://www.newshost.co.za/nzb/e0c/The.Block.NZ.S03E20.HDTV.x264-FiHTV.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.X.Factor.AU.S06E24.PDTV.x264-FiHTV
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The X Factor AU
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.X.Factor.AU']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'The X Factor AU', u'The X Factor AU']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for The X Factor AU
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'The.X.Factor.AU']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.X.Factor.AU.S06E24.PDTV.x264-FiHTV', 6, '|24|', 0, 0, 'http://www.newshost.co.za/nzb/fd9/The.X.Factor.AU.S06E24.PDTV.x264-FiHTV.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Jimmy.Fallon.2014.09.29.Ben.Affleck.HDTV.x264-CROOKS
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Jimmy Fallon
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Jimmy.Fallon']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Jimmy Fallon', u'Jimmy Fallon']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Jimmy Fallon
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Jimmy.Fallon']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Jimmy.Fallon.2014.09.29.Ben.Affleck.HDTV.x264-CROOKS', 1, '||', 0, 0, 'http://www.newshost.co.za/nzb/174/Jimmy.Fallon.2014.09.29.Ben.Affleck.HDTV.x264-CROOKS.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Special.Forces.S01E05.HDTV.x264-DOCERE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Special Forces
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Special.Forces']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Special Forces', u'Special Forces']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Special Forces
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Special.Forces']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Special.Forces.S01E05.HDTV.x264-DOCERE', 1, '|5|', 0, 0, 'http://www.newshost.co.za/nzb/7a3/Special.Forces.S01E05.HDTV.x264-DOCERE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E15.BDRip.X264-REWARD
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'The Following', u'The Following']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for The Following
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'The.Following']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E15.BDRip.X264-REWARD', 2, '|15|', 0, 0, 'http://www.newshost.co.za/nzb/f2c/The.Following.S02E15.BDRip.X264-REWARD.nzb', 1412306144, 2]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E14.BDRip.X264-REWARD
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E14.BDRip.X264-REWARD', 2, '|14|', 0, 0, 'http://www.newshost.co.za/nzb/6b1/The.Following.S02E14.BDRip.X264-REWARD.nzb', 1412306144, 2]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E13.BDRip.X264-REWARD
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E13.BDRip.X264-REWARD', 2, '|13|', 0, 0, 'http://www.newshost.co.za/nzb/afd/The.Following.S02E13.BDRip.X264-REWARD.nzb', 1412306144, 2]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E12.BDRip.X264-REWARD
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E12.BDRip.X264-REWARD', 2, '|12|', 0, 0, 'http://www.newshost.co.za/nzb/d3a/The.Following.S02E12.BDRip.X264-REWARD.nzb', 1412306144, 2]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E11.BDRip.X264-REWARD
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E11.BDRip.X264-REWARD', 2, '|11|', 0, 0, 'http://www.newshost.co.za/nzb/cef/The.Following.S02E11.BDRip.X264-REWARD.nzb', 1412306144, 2]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E10.BDRip.X264-REWARD
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E10.BDRip.X264-REWARD', 2, '|10|', 0, 0, 'http://www.newshost.co.za/nzb/39e/The.Following.S02E10.BDRip.X264-REWARD.nzb', 1412306144, 2]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E09.BDRip.X264-REWARD
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E09.BDRip.X264-REWARD', 2, '|9|', 0, 0, 'http://www.newshost.co.za/nzb/299/The.Following.S02E09.BDRip.X264-REWARD.nzb', 1412306144, 2]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E08.BDRip.X264-REWARD
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E08.BDRip.X264-REWARD', 2, '|8|', 0, 0, 'http://www.newshost.co.za/nzb/49f/The.Following.S02E08.BDRip.X264-REWARD.nzb', 1412306144, 2]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E07.BDRip.X264-REWARD
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E07.BDRip.X264-REWARD', 2, '|7|', 0, 0, 'http://www.newshost.co.za/nzb/992/The.Following.S02E07.BDRip.X264-REWARD.nzb', 1412306144, 2]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E06.BDRip.X264-REWARD
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E06.BDRip.X264-REWARD', 2, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/f4a/The.Following.S02E06.BDRip.X264-REWARD.nzb', 1412306144, 2]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E05.BDRip.X264-REWARD
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E05.BDRip.X264-REWARD', 2, '|5|', 0, 0, 'http://www.newshost.co.za/nzb/bf1/The.Following.S02E05.BDRip.X264-REWARD.nzb', 1412306144, 2]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E04.BDRip.X264-REWARD
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E04.BDRip.X264-REWARD', 2, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/abd/The.Following.S02E04.BDRip.X264-REWARD.nzb', 1412306144, 2]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E03.BDRip.X264-REWARD
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E03.BDRip.X264-REWARD', 2, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/31a/The.Following.S02E03.BDRip.X264-REWARD.nzb', 1412306144, 2]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E02.BDRip.X264-REWARD
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E02.BDRip.X264-REWARD', 2, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/70e/The.Following.S02E02.BDRip.X264-REWARD.nzb', 1412306144, 2]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E01.BDRip.X264-REWARD
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E01.BDRip.X264-REWARD', 2, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/95e/The.Following.S02E01.BDRip.X264-REWARD.nzb', 1412306144, 2]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: At.Midnight.2014.09.29.HDTV.x264-YesTV
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of At Midnight
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'At.Midnight']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'At Midnight', u'At Midnight']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for At Midnight
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'At.Midnight']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['At.Midnight.2014.09.29.HDTV.x264-YesTV', 1, '||', 0, 0, 'http://www.newshost.co.za/nzb/d3f/At.Midnight.2014.09.29.HDTV.x264-YesTV.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Seth.Meyers.2014.09.29.Rosamund.Pike.HDTV.x264-CROOKS
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Seth Meyers
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Seth.Meyers']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Seth Meyers', u'Seth Meyers']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Seth Meyers
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Seth.Meyers']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Seth.Meyers.2014.09.29.Rosamund.Pike.HDTV.x264-CROOKS', 1, '||', 0, 0, 'http://www.newshost.co.za/nzb/d66/Seth.Meyers.2014.09.29.Rosamund.Pike.HDTV.x264-CROOKS.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Lambing.Live.S03E03.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Lambing Live
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Lambing.Live']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Lambing Live', u'Lambing Live']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Lambing Live
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Lambing.Live']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Lambing.Live.S03E03.HDTV.x264-BARGE', 3, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/c3e/Lambing.Live.S03E03.HDTV.x264-BARGE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Love.Your.Garden.S05E04.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Love Your Garden
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Love.Your.Garden']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Love Your Garden', u'Love Your Garden']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Love Your Garden
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Love.Your.Garden']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Love.Your.Garden.S05E04.HDTV.x264-BARGE', 5, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/d30/Love.Your.Garden.S05E04.HDTV.x264-BARGE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Long.Lost.Family.S04E04.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Long Lost Family
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Long.Lost.Family']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Long Lost Family', u'Long Lost Family']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Long Lost Family
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Long.Lost.Family']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Long.Lost.Family.S04E04.HDTV.x264-BARGE', 4, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/681/Long.Lost.Family.S04E04.HDTV.x264-BARGE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Long.Lost.Family.S04E03.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Long Lost Family
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Long.Lost.Family']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Long.Lost.Family.S04E03.HDTV.x264-BARGE', 4, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/b7f/Long.Lost.Family.S04E03.HDTV.x264-BARGE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Dancing.With.The.Stars.AU.S14E01.PDTV.x264-W4F
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Dancing With The Stars AU
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Dancing.With.The.Stars.AU']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Dancing With The Stars AU', u'Dancing With The Stars AU']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Dancing With The Stars AU
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Dancing.With.The.Stars.AU']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Dancing.With.The.Stars.AU.S14E01.PDTV.x264-W4F', 14, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/583/Dancing.With.The.Stars.AU.S14E01.PDTV.x264-W4F.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Long.Lost.Family.S04E02.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Long Lost Family
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Long.Lost.Family']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Long.Lost.Family.S04E02.HDTV.x264-BARGE', 4, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/fdd/Long.Lost.Family.S04E02.HDTV.x264-BARGE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Long.Lost.Family.S04E01.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Long Lost Family
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Long.Lost.Family']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Long.Lost.Family.S04E01.HDTV.x264-BARGE', 4, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/a31/Long.Lost.Family.S04E01.HDTV.x264-BARGE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Location.Location.Location.S20E05.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Location Location Location
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Location.Location.Location']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Location Location Location', u'Location Location Location']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Location Location Location
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Location.Location.Location']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Location.Location.Location.S20E05.HDTV.x264-BARGE', 20, '|5|', 0, 0, 'http://www.newshost.co.za/nzb/446/Location.Location.Location.S20E05.HDTV.x264-BARGE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Big.Brother.AU.S11E20.PDTV.x264-W4F
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Big Brother AU
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Big.Brother.AU']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Big Brother AU', u'Big Brother AU']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Big Brother AU
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Big.Brother.AU']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Big.Brother.AU.S11E20.PDTV.x264-W4F', 11, '|20|', 0, 0, 'http://www.newshost.co.za/nzb/958/Big.Brother.AU.S11E20.PDTV.x264-W4F.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Hotel.Of.Mum.And.Dad.S02E01.HDTV.x264-C4TV
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Hotel Of Mum And Dad
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Hotel.Of.Mum.And.Dad']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Hotel Of Mum And Dad', u'Hotel Of Mum And Dad']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Hotel Of Mum And Dad
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Hotel.Of.Mum.And.Dad']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Hotel.Of.Mum.And.Dad.S02E01.HDTV.x264-C4TV', 2, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/392/Hotel.Of.Mum.And.Dad.S02E01.HDTV.x264-C4TV.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Law.And.Discorder.Catching.Criminals.Live.S01E01.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Law And Discorder Catching Criminals Live
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Law.And.Discorder.Catching.Criminals.Live']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Law And Discorder Catching Criminals Live', u'Law And Discorder Catching Criminals Live']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Law And Discorder Catching Criminals Live
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Law.And.Discorder.Catching.Criminals.Live']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Law.And.Discorder.Catching.Criminals.Live.S01E01.HDTV.x264-BARGE', 1, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/fde/Law.And.Discorder.Catching.Criminals.Live.S01E01.HDTV.x264-BARGE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Never.Mind.The.Buzzcocks.UK.S28E01.HDTV.x264-C4TV
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Never Mind The Buzzcocks UK
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Never.Mind.The.Buzzcocks.UK']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Never Mind The Buzzcocks UK', u'Never Mind The Buzzcocks UK']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Never Mind The Buzzcocks UK
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Never.Mind.The.Buzzcocks.UK']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Never.Mind.The.Buzzcocks.UK.S28E01.HDTV.x264-C4TV', 28, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/388/Never.Mind.The.Buzzcocks.UK.S28E01.HDTV.x264-C4TV.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Gadget.Man.S03E06.HDTV.x264-C4TV
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Gadget Man
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Gadget.Man']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Gadget Man', u'Gadget Man']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Gadget Man
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Gadget.Man']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Gadget.Man.S03E06.HDTV.x264-C4TV', 3, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/2e8/Gadget.Man.S03E06.HDTV.x264-C4TV.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Conan.2014.09.29.Ben.Kingsley.HDTV.x264-CROOKS
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Conan
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Conan']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Conan', u'Conan']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Conan
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Conan']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Conan.2014.09.29.Ben.Kingsley.HDTV.x264-CROOKS', 1, '||', 0, 0, 'http://www.newshost.co.za/nzb/601/Conan.2014.09.29.Ben.Kingsley.HDTV.x264-CROOKS.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Jamies.Comfort.Food.S01E05.HDTV.x264-C4TV
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Jamies Comfort Food
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Jamies.Comfort.Food']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Jamies Comfort Food', u'Jamies Comfort Food']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Jamies Comfort Food
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Jamies.Comfort.Food']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Jamies.Comfort.Food.S01E05.HDTV.x264-C4TV', 1, '|5|', 0, 0, 'http://www.newshost.co.za/nzb/d55/Jamies.Comfort.Food.S01E05.HDTV.x264-C4TV.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: WWE.Monday.Night.RAW.2014.09.29.HDTV.x264-KYR
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of WWE Monday Night RAW
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'WWE.Monday.Night.RAW']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'WWE Monday Night RAW', u'WWE Monday Night RAW']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for WWE Monday Night RAW
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'WWE.Monday.Night.RAW']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['WWE.Monday.Night.RAW.2014.09.29.HDTV.x264-KYR', 1, '||', 0, 0, 'http://www.newshost.co.za/nzb/fa2/WWE.Monday.Night.RAW.2014.09.29.HDTV.x264-KYR.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Lambing.Live.S03E04.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Lambing Live
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Lambing.Live']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Lambing.Live.S03E04.HDTV.x264-BARGE', 3, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/69a/Lambing.Live.S03E04.HDTV.x264-BARGE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Globe.Trekker.S13E06.HDTV.x264-DOCERE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Globe Trekker
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Globe.Trekker']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Globe Trekker', u'Globe Trekker']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Globe Trekker
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Globe.Trekker']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Globe.Trekker.S13E06.HDTV.x264-DOCERE', 13, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/1dc/Globe.Trekker.S13E06.HDTV.x264-DOCERE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Block.AU.S09E56.PDTV.x264-FQM
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Block AU
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Block.AU']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'The Block AU', u'The Block AU']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for The Block AU
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'The.Block.AU']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Block.AU.S09E56.PDTV.x264-FQM', 9, '|56|', 0, 0, 'http://www.newshost.co.za/nzb/e19/The.Block.AU.S09E56.PDTV.x264-FQM.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Lambing.Live.S03E02.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Lambing Live
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Lambing.Live']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Lambing.Live.S03E02.HDTV.x264-BARGE', 3, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/2d9/Lambing.Live.S03E02.HDTV.x264-BARGE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Perfection.S05E06.PDTV.x264-DOCERE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Perfection
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Perfection']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Perfection.S05E06.PDTV.x264-DOCERE', 5, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/35f/Perfection.S05E06.PDTV.x264-DOCERE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Lambing.Live.S03E01.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Lambing Live
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Lambing.Live']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Lambing.Live.S03E01.HDTV.x264-BARGE', 3, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/574/Lambing.Live.S03E01.HDTV.x264-BARGE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Dont.Drive.Here.S02E06.Sao.Paulo.HDTV.x264-CROOKS
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Dont Drive Here
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Dont.Drive.Here']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Dont Drive Here', u'Dont Drive Here']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Dont Drive Here
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Dont.Drive.Here']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Dont.Drive.Here.S02E06.Sao.Paulo.HDTV.x264-CROOKS', 2, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/d96/Dont.Drive.Here.S02E06.Sao.Paulo.HDTV.x264-CROOKS.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Globe.Trekker.Special.Planet.Of.The.Apes.HDTV.x264-DOCERE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename Globe.Trekker.Special.Planet.Of.The.Apes.HDTV.x264-DOCERE into a valid episode
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: Globe.Trekker.Special.Planet.Of.The.Apes.HDTV.x264-DOCERE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Lambing.Live.Farming.Families.Special.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename Lambing.Live.Farming.Families.Special.HDTV.x264-BARGE into a valid episode
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: Lambing.Live.Farming.Families.Special.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Killing.Me.Softly.The.Roberta.Flack.Story.S01E01.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Killing Me Softly The Roberta Flack Story
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Killing.Me.Softly.The.Roberta.Flack.Story']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Killing Me Softly The Roberta Flack Story', u'Killing Me Softly The Roberta Flack Story']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Killing Me Softly The Roberta Flack Story
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Killing.Me.Softly.The.Roberta.Flack.Story']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Killing.Me.Softly.The.Roberta.Flack.Story.S01E01.HDTV.x264-BARGE', 1, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/35e/Killing.Me.Softly.The.Roberta.Flack.Story.S01E01.HDTV.x264-BARGE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Colbert.Report.2014.09.29.Jamie.Oliver.HDTV.x264-MOMENTUM
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Colbert Report
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Colbert.Report']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'The Colbert Report', u'The Colbert Report']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for The Colbert Report
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'The.Colbert.Report']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Colbert.Report.2014.09.29.Jamie.Oliver.HDTV.x264-MOMENTUM', 1, '||', 0, 0, 'http://www.newshost.co.za/nzb/98b/The.Colbert.Report.2014.09.29.Jamie.Oliver.HDTV.x264-MOMENTUM.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Daily.Show.2014.09.29.Hadi.al.Bahra.HDTV.x264-MOMENTUM
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Daily Show
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Daily.Show']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'The Daily Show', u'The Daily Show']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for The Daily Show
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'The.Daily.Show']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Daily.Show.2014.09.29.Hadi.al.Bahra.HDTV.x264-MOMENTUM', 1, '||', 0, 0, 'http://www.newshost.co.za/nzb/d88/The.Daily.Show.2014.09.29.Hadi.al.Bahra.HDTV.x264-MOMENTUM.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Zoo.Juniors.S03E02.HDTV.x264-NORiTE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Zoo Juniors
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Zoo.Juniors']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Zoo Juniors', u'Zoo Juniors']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Zoo Juniors
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Zoo.Juniors']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Zoo.Juniors.S03E02.HDTV.x264-NORiTE', 3, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/356/Zoo.Juniors.S03E02.HDTV.x264-NORiTE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Zoo.Juniors.S03E01.HDTV.x264-NORiTE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Zoo Juniors
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Zoo.Juniors']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Zoo.Juniors.S03E01.HDTV.x264-NORiTE', 3, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/542/Zoo.Juniors.S03E01.HDTV.x264-NORiTE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Cheetah.Diaries.S03E08.HDTV.x264-DOCERE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Cheetah Diaries
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Cheetah.Diaries']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Cheetah Diaries', u'Cheetah Diaries']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Cheetah Diaries
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Cheetah.Diaries']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Cheetah.Diaries.S03E08.HDTV.x264-DOCERE', 3, '|8|', 0, 0, 'http://www.newshost.co.za/nzb/4e7/Cheetah.Diaries.S03E08.HDTV.x264-DOCERE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Graveyard.Carz.S03E04.HDTV.x264-DOCERE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Graveyard Carz
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Graveyard.Carz']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Graveyard Carz', u'Graveyard Carz']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Graveyard Carz
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Graveyard.Carz']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Graveyard.Carz.S03E04.HDTV.x264-DOCERE', 3, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/ff7/Graveyard.Carz.S03E04.HDTV.x264-DOCERE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Antiques.Road.Trip.S09E06.PDTV.x264-DOCERE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Antiques Road Trip
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Antiques.Road.Trip']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Antiques Road Trip', u'Antiques Road Trip']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Antiques Road Trip
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Antiques.Road.Trip']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Antiques.Road.Trip.S09E06.PDTV.x264-DOCERE', 9, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/e43/Antiques.Road.Trip.S09E06.PDTV.x264-DOCERE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Homes.Under.The.Hammer.S15E77.PDTV.x264-DOCERE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Homes Under The Hammer
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Homes.Under.The.Hammer']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Homes Under The Hammer', u'Homes Under The Hammer']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Homes Under The Hammer
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Homes.Under.The.Hammer']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Homes.Under.The.Hammer.S15E77.PDTV.x264-DOCERE', 15, '|77|', 0, 0, 'http://www.newshost.co.za/nzb/75a/Homes.Under.The.Hammer.S15E77.PDTV.x264-DOCERE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bargain.Hunt.S39E03.PDTV.x264-DOCERE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bargain Hunt
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bargain.Hunt']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bargain.Hunt.S39E03.PDTV.x264-DOCERE', 39, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/ca1/Bargain.Hunt.S39E03.PDTV.x264-DOCERE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: NFL.2014.09.29.Patriots.vs.Chiefs.HDTV.x264-MOMENTUM
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of NFL
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'NFL']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'NFL', u'NFL']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for NFL
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'NFL']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['NFL.2014.09.29.Patriots.vs.Chiefs.HDTV.x264-MOMENTUM', 1, '||', 0, 0, 'http://www.newshost.co.za/nzb/b99/NFL.2014.09.29.Patriots.vs.Chiefs.HDTV.x264-MOMENTUM.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Imagine.UK.S25E03.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Imagine UK
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Imagine.UK']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Imagine UK', u'Imagine UK']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Imagine UK
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Imagine.UK']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Imagine.UK.S25E03.HDTV.x264-BARGE', 25, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/d83/Imagine.UK.S25E03.HDTV.x264-BARGE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Territory.Cops.2014.S01E01.PDTV.x264-CBFM
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Territory Cops 2014
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Territory.Cops.2014']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Territory Cops 2014', u'Territory Cops 2014']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match original name but trying to manually strip and specify show year
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE (show_name LIKE ? OR tvr_name LIKE ?) AND startyear = ? with args [u'Territory Cops%', u'Territory Cops%', u'2014']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Territory Cops 2014
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Territory.Cops.2014']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Territory.Cops.2014.S01E01.PDTV.x264-CBFM', 1, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/b2d/Territory.Cops.2014.S01E01.PDTV.x264-CBFM.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Pit.Crews.S02E03.HDTV.x264-NORiTE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Pit Crews
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Pit.Crews']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Pit Crews', u'Pit Crews']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Pit Crews
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Pit.Crews']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Pit.Crews.S02E03.HDTV.x264-NORiTE', 2, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/445/Pit.Crews.S02E03.HDTV.x264-NORiTE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Pit.Crews.S02E02.HDTV.x264-NORiTE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Pit Crews
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Pit.Crews']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Pit.Crews.S02E02.HDTV.x264-NORiTE', 2, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/b4a/Pit.Crews.S02E02.HDTV.x264-NORiTE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Imagine.UK.S25E01.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Imagine UK
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Imagine.UK']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Imagine.UK.S25E01.HDTV.x264-BARGE', 25, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/682/Imagine.UK.S25E01.HDTV.x264-BARGE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Coast.Guard.Alaska.S01E11.HDTV.x264-DOCERE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Coast Guard Alaska
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Coast.Guard.Alaska']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Coast Guard Alaska', u'Coast Guard Alaska']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Coast Guard Alaska
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Coast.Guard.Alaska']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Coast.Guard.Alaska.S01E11.HDTV.x264-DOCERE', 1, '|11|', 0, 0, 'http://www.newshost.co.za/nzb/865/Coast.Guard.Alaska.S01E11.HDTV.x264-DOCERE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: I.Never.Knew.That.About.Britain.S01E08.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of I Never Knew That About Britain
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'I.Never.Knew.That.About.Britain']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'I Never Knew That About Britain', u'I Never Knew That About Britain']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for I Never Knew That About Britain
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'I.Never.Knew.That.About.Britain']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['I.Never.Knew.That.About.Britain.S01E08.HDTV.x264-BARGE', 1, '|8|', 0, 0, 'http://www.newshost.co.za/nzb/a33/I.Never.Knew.That.About.Britain.S01E08.HDTV.x264-BARGE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: I.Never.Knew.That.About.Britain.S01E07.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of I Never Knew That About Britain
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'I.Never.Knew.That.About.Britain']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['I.Never.Knew.That.About.Britain.S01E07.HDTV.x264-BARGE', 1, '|7|', 0, 0, 'http://www.newshost.co.za/nzb/1db/I.Never.Knew.That.About.Britain.S01E07.HDTV.x264-BARGE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: I.Never.Knew.That.About.Britain.S01E06.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of I Never Knew That About Britain
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'I.Never.Knew.That.About.Britain']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['I.Never.Knew.That.About.Britain.S01E06.HDTV.x264-BARGE', 1, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/718/I.Never.Knew.That.About.Britain.S01E06.HDTV.x264-BARGE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: I.Never.Knew.That.About.Britain.S01E04.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of I Never Knew That About Britain
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'I.Never.Knew.That.About.Britain']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['I.Never.Knew.That.About.Britain.S01E04.HDTV.x264-BARGE', 1, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/c54/I.Never.Knew.That.About.Britain.S01E04.HDTV.x264-BARGE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Atlanta.Exes.S01E08.HDTV.x264-CRiMSON
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Atlanta Exes
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Atlanta.Exes']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Atlanta Exes', u'Atlanta Exes']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Atlanta Exes
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Atlanta.Exes']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Atlanta.Exes.S01E08.HDTV.x264-CRiMSON', 1, '|8|', 0, 0, 'http://www.newshost.co.za/nzb/667/Atlanta.Exes.S01E08.HDTV.x264-CRiMSON.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: I.Never.Knew.That.About.Britain.S01E03.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of I Never Knew That About Britain
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'I.Never.Knew.That.About.Britain']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['I.Never.Knew.That.About.Britain.S01E03.HDTV.x264-BARGE', 1, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/ef2/I.Never.Knew.That.About.Britain.S01E03.HDTV.x264-BARGE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Baggage.Battles.S01E23.HDTV.x264-NORiTE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Baggage Battles
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Baggage.Battles']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Baggage Battles', u'Baggage Battles']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Baggage Battles
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Baggage.Battles']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Baggage.Battles.S01E23.HDTV.x264-NORiTE', 1, '|23|', 0, 0, 'http://www.newshost.co.za/nzb/4f5/Baggage.Battles.S01E23.HDTV.x264-NORiTE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Baggage.Battles.S01E18.HDTV.x264-NORiTE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Baggage Battles
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Baggage.Battles']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Baggage.Battles.S01E18.HDTV.x264-NORiTE', 1, '|18|', 0, 0, 'http://www.newshost.co.za/nzb/282/Baggage.Battles.S01E18.HDTV.x264-NORiTE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Baggage.Battles.S01E22.HDTV.x264-NORiTE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Baggage Battles
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Baggage.Battles']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Baggage.Battles.S01E22.HDTV.x264-NORiTE', 1, '|22|', 0, 0, 'http://www.newshost.co.za/nzb/c48/Baggage.Battles.S01E22.HDTV.x264-NORiTE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: I.Never.Knew.That.About.Britain.S01E02.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of I Never Knew That About Britain
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'I.Never.Knew.That.About.Britain']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['I.Never.Knew.That.About.Britain.S01E02.HDTV.x264-BARGE', 1, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/e39/I.Never.Knew.That.About.Britain.S01E02.HDTV.x264-BARGE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Chris.Humfreys.Wild.Life.S01E01.PDTV.x264-CBFM
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Chris Humfreys Wild Life
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Chris.Humfreys.Wild.Life']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Chris Humfreys Wild Life', u'Chris Humfreys Wild Life']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Chris Humfreys Wild Life
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Chris.Humfreys.Wild.Life']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Chris.Humfreys.Wild.Life.S01E01.PDTV.x264-CBFM', 1, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/fd9/Chris.Humfreys.Wild.Life.S01E01.PDTV.x264-CBFM.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Q.And.A.AU.2014.09.29.PDTV.x264-CBFM
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Q And A AU
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Q.And.A.AU']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Q And A AU', u'Q And A AU']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Q And A AU
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Q.And.A.AU']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Q.And.A.AU.2014.09.29.PDTV.x264-CBFM', 1, '||', 0, 0, 'http://www.newshost.co.za/nzb/9d6/Q.And.A.AU.2014.09.29.PDTV.x264-CBFM.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Media.Watch.2014.09.29.PDTV.x264-CBFM
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Media Watch
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Media.Watch']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Media Watch', u'Media Watch']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Media Watch
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Media.Watch']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Media.Watch.2014.09.29.PDTV.x264-CBFM', 1, '||', 0, 0, 'http://www.newshost.co.za/nzb/a76/Media.Watch.2014.09.29.PDTV.x264-CBFM.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Four.Corners.S54E35.The.Seduction.Of.Smoking.Part.1.iNTERNAL.PDTV.x264-CBFM
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Four Corners
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Four.Corners']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Four Corners', u'Four Corners']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Four Corners
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Four.Corners']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Four.Corners.S54E35.The.Seduction.Of.Smoking.Part.1.iNTERNAL.PDTV.x264-CBFM', 54, '|35|', 0, 0, 'http://www.newshost.co.za/nzb/13e/Four.Corners.S54E35.The.Seduction.Of.Smoking.Part.1.iNTERNAL.PDTV.x264-CBFM.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: I.Never.Knew.That.About.Britain.S01E01.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of I Never Knew That About Britain
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'I.Never.Knew.That.About.Britain']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['I.Never.Knew.That.About.Britain.S01E01.HDTV.x264-BARGE', 1, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/674/I.Never.Knew.That.About.Britain.S01E01.HDTV.x264-BARGE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Australian.Story.S19E35.The.Pursuit.Of.Happiness.PDTV.x264-CBFM
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Australian Story
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Australian.Story']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Australian Story', u'Australian Story']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Australian Story
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Australian.Story']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Australian.Story.S19E35.The.Pursuit.Of.Happiness.PDTV.x264-CBFM', 19, '|35|', 0, 0, 'http://www.newshost.co.za/nzb/92f/Australian.Story.S19E35.The.Pursuit.Of.Happiness.PDTV.x264-CBFM.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Epic.Ink.S01E05.Friday.the.Thirteenth.HDTV.x264-W4F
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Epic Ink
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Epic.Ink']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Epic Ink', u'Epic Ink']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Epic Ink
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Epic.Ink']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Epic.Ink.S01E05.Friday.the.Thirteenth.HDTV.x264-W4F', 1, '|5|', 0, 0, 'http://www.newshost.co.za/nzb/185/Epic.Ink.S01E05.Friday.the.Thirteenth.HDTV.x264-W4F.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.To.Get.Ahead.S01E03.At.Versailles.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How To Get Ahead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.To.Get.Ahead']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'How To Get Ahead', u'How To Get Ahead']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for How To Get Ahead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'How.To.Get.Ahead']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.To.Get.Ahead.S01E03.At.Versailles.HDTV.x264-BARGE', 1, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/69a/How.To.Get.Ahead.S01E03.At.Versailles.HDTV.x264-BARGE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Wahlburgers.S02E06.A.Cut.Above.HDTV.x264-W4F
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Wahlburgers
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Wahlburgers']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Wahlburgers', u'Wahlburgers']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Wahlburgers
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Wahlburgers']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Wahlburgers.S02E06.A.Cut.Above.HDTV.x264-W4F', 2, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/752/Wahlburgers.S02E06.A.Cut.Above.HDTV.x264-W4F.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Wahlburgers.S02E07.Guarding.Alma.HDTV.x264-W4F
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Wahlburgers
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Wahlburgers']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Wahlburgers.S02E07.Guarding.Alma.HDTV.x264-W4F', 2, '|7|', 0, 0, 'http://www.newshost.co.za/nzb/c11/Wahlburgers.S02E07.Guarding.Alma.HDTV.x264-W4F.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Avengers.Assemble.S02E01.The.Arsenal.HDTV.x264-W4F
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Avengers Assemble
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Avengers.Assemble']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Avengers Assemble', u'Avengers Assemble']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Avengers Assemble
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Avengers.Assemble']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Avengers.Assemble.S02E01.The.Arsenal.HDTV.x264-W4F', 2, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/584/Avengers.Assemble.S02E01.The.Arsenal.HDTV.x264-W4F.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: T.I.and.Tiny.The.Family.Hustle.S04E16.HDTV.x264-CRiMSON
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of T I and Tiny The Family Hustle
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'T.I.and.Tiny.The.Family.Hustle']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'T I and Tiny The Family Hustle', u'T I and Tiny The Family Hustle']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for T I and Tiny The Family Hustle
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'T.I.and.Tiny.The.Family.Hustle']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['T.I.and.Tiny.The.Family.Hustle.S04E16.HDTV.x264-CRiMSON', 4, '|16|', 0, 0, 'http://www.newshost.co.za/nzb/bd1/T.I.and.Tiny.The.Family.Hustle.S04E16.HDTV.x264-CRiMSON.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: 19.Kids.and.Counting.S08E19.Jill.Says.Yes.to.the.Dress.HDTV.x264-W4F
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of 19 Kids and Counting
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'19.Kids.and.Counting']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'19 Kids and Counting', u'19 Kids and Counting']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for 19 Kids and Counting
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'19.Kids.and.Counting']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['19.Kids.and.Counting.S08E19.Jill.Says.Yes.to.the.Dress.HDTV.x264-W4F', 8, '|19|', 0, 0, 'http://www.newshost.co.za/nzb/d23/19.Kids.and.Counting.S08E19.Jill.Says.Yes.to.the.Dress.HDTV.x264-W4F.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.To.Get.Ahead.S01E02.At.Renaissance.Court.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How To Get Ahead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.To.Get.Ahead']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.To.Get.Ahead.S01E02.At.Renaissance.Court.HDTV.x264-BARGE', 1, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/2c4/How.To.Get.Ahead.S01E02.At.Renaissance.Court.HDTV.x264-BARGE.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Epic.Ink.S01E03.The.Duel.and.the.Dark.Knight.HDTV.x264-OMiCRON
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Epic Ink
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Epic.Ink']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Epic.Ink.S01E03.The.Duel.and.the.Dark.Knight.HDTV.x264-OMiCRON', 1, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/356/Epic.Ink.S01E03.The.Duel.and.the.Dark.Knight.HDTV.x264-OMiCRON.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Epic.Ink.S01E04.Its.Chi.Town.Baby.HDTV.x264-OMiCRON
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Epic Ink
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Epic.Ink']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Epic.Ink.S01E04.Its.Chi.Town.Baby.HDTV.x264-OMiCRON', 1, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/8b5/Epic.Ink.S01E04.Its.Chi.Town.Baby.HDTV.x264-OMiCRON.nzb', 1412306144, 1]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bad.Education.S03E03.PROPER.720p.HDTV.x264-RiVER
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bad Education
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bad.Education']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bad.Education.S03E03.PROPER.720p.HDTV.x264-RiVER', 3, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/88b/Bad.Education.S03E03.PROPER.720p.HDTV.x264-RiVER.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: National.Geographic.Wild.Namibia.720p.HDTV.x264-MoTv
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename National.Geographic.Wild.Namibia.720p.HDTV.x264-MoTv into a valid episode
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: National.Geographic.Wild.Namibia.720p.HDTV.x264-MoTv
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Jimmy.Fallon.2014.09.29.Ben.Affleck.720p.HDTV.x264-CROOKS
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Jimmy Fallon
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Jimmy.Fallon']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Jimmy.Fallon.2014.09.29.Ben.Affleck.720p.HDTV.x264-CROOKS', 1, '||', 0, 0, 'http://www.newshost.co.za/nzb/599/Jimmy.Fallon.2014.09.29.Ben.Affleck.720p.HDTV.x264-CROOKS.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bad_Education.3x03.Sports_Day.720p_HDTV_x264-FoV
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bad Education
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bad.Education']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bad_Education.3x03.Sports_Day.720p_HDTV_x264-FoV', 3, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/61d/Bad_Education.3x03.Sports_Day.720p_HDTV_x264-FoV.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Monster.Fish.S05E03.Amazon.Shocker.720p.HDTV.x264-ASCENDANCE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Monster Fish
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Monster.Fish']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Monster.Fish.S05E03.Amazon.Shocker.720p.HDTV.x264-ASCENDANCE', 5, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/d4e/Monster.Fish.S05E03.Amazon.Shocker.720p.HDTV.x264-ASCENDANCE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The_Driver.1x02.720p_HDTV_x264-FoV
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Driver
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Driver']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'The Driver', u'The Driver']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for The Driver
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'The.Driver']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The_Driver.1x02.720p_HDTV_x264-FoV', 1, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/48c/The_Driver.1x02.720p_HDTV_x264-FoV.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Holby.City.S16E51.720p.HDTV.x264-ANGELiC
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Holby City
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Holby.City']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Holby.City.S16E51.720p.HDTV.x264-ANGELiC', 16, '|51|', 0, 0, 'http://www.newshost.co.za/nzb/a4e/Holby.City.S16E51.720p.HDTV.x264-ANGELiC.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Block.NZ.S03E20.720p.HDTV.x264-FiHTV
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Block NZ
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Block.NZ']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Block.NZ.S03E20.720p.HDTV.x264-FiHTV', 3, '|20|', 0, 0, 'http://www.newshost.co.za/nzb/8e7/The.Block.NZ.S03E20.720p.HDTV.x264-FiHTV.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Shortland.Street.S23E168.720p.HDTV.x264-FiHTV
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Shortland Street
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Shortland.Street']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Shortland.Street.S23E168.720p.HDTV.x264-FiHTV', 23, '|168|', 0, 0, 'http://www.newshost.co.za/nzb/d50/Shortland.Street.S23E168.720p.HDTV.x264-FiHTV.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Special.Forces.S01E05.720p.HDTV.x264-DOCERE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Special Forces
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Special.Forces']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Special.Forces.S01E05.720p.HDTV.x264-DOCERE', 1, '|5|', 0, 0, 'http://www.newshost.co.za/nzb/bdd/Special.Forces.S01E05.720p.HDTV.x264-DOCERE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Twisted.S06E03.Red.Light.Regular.720p.HDTV.x264-TERRA
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Twisted
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Twisted']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Twisted', u'Twisted']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Twisted
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Twisted']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Twisted.S06E03.Red.Light.Regular.720p.HDTV.x264-TERRA', 6, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/e5b/Twisted.S06E03.Red.Light.Regular.720p.HDTV.x264-TERRA.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.First.Kill.S01E02.Son.of.Sam.720p.HDTV.x264-TERRA
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The First Kill
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.First.Kill']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'The First Kill', u'The First Kill']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for The First Kill
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'The.First.Kill']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.First.Kill.S01E02.Son.of.Sam.720p.HDTV.x264-TERRA', 1, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/d37/The.First.Kill.S01E02.Son.of.Sam.720p.HDTV.x264-TERRA.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.First.Kill.S01E01.Beauty.Queen.Killer.720p.HDTV.x264-TERRA
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The First Kill
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.First.Kill']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.First.Kill.S01E01.Beauty.Queen.Killer.720p.HDTV.x264-TERRA', 1, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/971/The.First.Kill.S01E01.Beauty.Queen.Killer.720p.HDTV.x264-TERRA.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Seth.Meyers.2014.09.29.Rosamund.Pike.720p.HDTV.x264-CROOKS
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Seth Meyers
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Seth.Meyers']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Seth.Meyers.2014.09.29.Rosamund.Pike.720p.HDTV.x264-CROOKS', 1, '||', 0, 0, 'http://www.newshost.co.za/nzb/9b8/Seth.Meyers.2014.09.29.Rosamund.Pike.720p.HDTV.x264-CROOKS.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Teen.Titans.Go.S02E14.Sandwich.Thief.PROPER.720p.HDTV.x264-W4F
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Teen Titans Go
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Teen.Titans.Go']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Teen Titans Go', u'Teen Titans Go']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Teen Titans Go
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Teen.Titans.Go']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Teen.Titans.Go.S02E14.Sandwich.Thief.PROPER.720p.HDTV.x264-W4F', 2, '|14|', 0, 0, 'http://www.newshost.co.za/nzb/519/Teen.Titans.Go.S02E14.Sandwich.Thief.PROPER.720p.HDTV.x264-W4F.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Antiques.Roadshow.US.S18E27.720p.HDTV.x264-BAJSKORV
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Antiques Roadshow US
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Antiques.Roadshow.US']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Antiques Roadshow US', u'Antiques Roadshow US']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Antiques Roadshow US
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Antiques.Roadshow.US']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Antiques.Roadshow.US.S18E27.720p.HDTV.x264-BAJSKORV', 18, '|27|', 0, 0, 'http://www.newshost.co.za/nzb/4b6/Antiques.Roadshow.US.S18E27.720p.HDTV.x264-BAJSKORV.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: At.Midnight.2014.09.29.720p.HDTV.x264-YesTV
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of At Midnight
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'At.Midnight']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['At.Midnight.2014.09.29.720p.HDTV.x264-YesTV', 1, '||', 0, 0, 'http://www.newshost.co.za/nzb/3ae/At.Midnight.2014.09.29.720p.HDTV.x264-YesTV.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Conan.2014.09.29.Ben.Kingsley.720p.HDTV.x264-CROOKS
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Conan
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Conan']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Conan.2014.09.29.Ben.Kingsley.720p.HDTV.x264-CROOKS', 1, '||', 0, 0, 'http://www.newshost.co.za/nzb/6a2/Conan.2014.09.29.Ben.Kingsley.720p.HDTV.x264-CROOKS.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Love.Your.Garden.S05E04.720p.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Love Your Garden
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Love.Your.Garden']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Love.Your.Garden.S05E04.720p.HDTV.x264-BARGE', 5, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/86c/Love.Your.Garden.S05E04.720p.HDTV.x264-BARGE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Lambing.Live.S03E04.720p.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Lambing Live
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Lambing.Live']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Lambing.Live.S03E04.720p.HDTV.x264-BARGE', 3, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/d78/Lambing.Live.S03E04.720p.HDTV.x264-BARGE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Long.Lost.Family.S04E04.720p.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Long Lost Family
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Long.Lost.Family']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Long.Lost.Family.S04E04.720p.HDTV.x264-BARGE', 4, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/de4/Long.Lost.Family.S04E04.720p.HDTV.x264-BARGE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Long.Lost.Family.S04E03.720p.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Long Lost Family
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Long.Lost.Family']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Long.Lost.Family.S04E03.720p.HDTV.x264-BARGE', 4, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/936/Long.Lost.Family.S04E03.720p.HDTV.x264-BARGE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Long.Lost.Family.S04E02.720p.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Long Lost Family
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Long.Lost.Family']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Long.Lost.Family.S04E02.720p.HDTV.x264-BARGE', 4, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/7ce/Long.Lost.Family.S04E02.720p.HDTV.x264-BARGE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Long.Lost.Family.S04E01.720p.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Long Lost Family
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Long.Lost.Family']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Long.Lost.Family.S04E01.720p.HDTV.x264-BARGE', 4, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/36a/Long.Lost.Family.S04E01.720p.HDTV.x264-BARGE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Location.Location.Location.S20E05.720p.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Location Location Location
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Location.Location.Location']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Location.Location.Location.S20E05.720p.HDTV.x264-BARGE', 20, '|5|', 0, 0, 'http://www.newshost.co.za/nzb/cac/Location.Location.Location.S20E05.720p.HDTV.x264-BARGE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Hotel.Of.Mum.And.Dad.S02E01.720p.HDTV.x264-C4TV
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Hotel Of Mum And Dad
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Hotel.Of.Mum.And.Dad']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Hotel.Of.Mum.And.Dad.S02E01.720p.HDTV.x264-C4TV', 2, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/4fc/Hotel.Of.Mum.And.Dad.S02E01.720p.HDTV.x264-C4TV.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Globe.Trekker.S13E06.720p.HDTV.x264-DOCERE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Globe Trekker
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Globe.Trekker']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Globe.Trekker.S13E06.720p.HDTV.x264-DOCERE', 13, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/773/Globe.Trekker.S13E06.720p.HDTV.x264-DOCERE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Never.Mind.The.Buzzcocks.UK.S28E01.720p.HDTV.x264-C4TV
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Never Mind The Buzzcocks UK
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Never.Mind.The.Buzzcocks.UK']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Never.Mind.The.Buzzcocks.UK.S28E01.720p.HDTV.x264-C4TV', 28, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/a90/Never.Mind.The.Buzzcocks.UK.S28E01.720p.HDTV.x264-C4TV.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Law.And.Discorder.Catching.Criminals.Live.S01E01.720p.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Law And Discorder Catching Criminals Live
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Law.And.Discorder.Catching.Criminals.Live']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Law.And.Discorder.Catching.Criminals.Live.S01E01.720p.HDTV.x264-BARGE', 1, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/816/Law.And.Discorder.Catching.Criminals.Live.S01E01.720p.HDTV.x264-BARGE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Gadget.Man.S03E06.720p.HDTV.x264-C4TV
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Gadget Man
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Gadget.Man']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Gadget.Man.S03E06.720p.HDTV.x264-C4TV', 3, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/a3f/Gadget.Man.S03E06.720p.HDTV.x264-C4TV.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E15.720p.BluRay.X264-REWARD
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E15.720p.BluRay.X264-REWARD', 2, '|15|', 0, 0, 'http://www.newshost.co.za/nzb/473/The.Following.S02E15.720p.BluRay.X264-REWARD.nzb', 1412306144, 128]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Jamies.Comfort.Food.S01E05.720p.HDTV.x264-C4TV
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Jamies Comfort Food
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Jamies.Comfort.Food']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Jamies.Comfort.Food.S01E05.720p.HDTV.x264-C4TV', 1, '|5|', 0, 0, 'http://www.newshost.co.za/nzb/4f8/Jamies.Comfort.Food.S01E05.720p.HDTV.x264-C4TV.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E13.720p.BluRay.X264-REWARD
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E13.720p.BluRay.X264-REWARD', 2, '|13|', 0, 0, 'http://www.newshost.co.za/nzb/42e/The.Following.S02E13.720p.BluRay.X264-REWARD.nzb', 1412306144, 128]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: WWE.Monday.Night.RAW.2014.09.29.720p.HDTV.x264-KYR
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of WWE Monday Night RAW
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'WWE.Monday.Night.RAW']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['WWE.Monday.Night.RAW.2014.09.29.720p.HDTV.x264-KYR', 1, '||', 0, 0, 'http://www.newshost.co.za/nzb/e49/WWE.Monday.Night.RAW.2014.09.29.720p.HDTV.x264-KYR.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Lambing.Live.S03E03.720p.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Lambing Live
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Lambing.Live']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Lambing.Live.S03E03.720p.HDTV.x264-BARGE', 3, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/5d4/Lambing.Live.S03E03.720p.HDTV.x264-BARGE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Globe.Trekker.Special.Planet.Of.The.Apes.720p.HDTV.x264-DOCERE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename Globe.Trekker.Special.Planet.Of.The.Apes.720p.HDTV.x264-DOCERE into a valid episode
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: Globe.Trekker.Special.Planet.Of.The.Apes.720p.HDTV.x264-DOCERE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Dont.Drive.Here.S02E06.Sao.Paulo.720p.HDTV.x264-CROOKS
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Dont Drive Here
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Dont.Drive.Here']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Dont.Drive.Here.S02E06.Sao.Paulo.720p.HDTV.x264-CROOKS', 2, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/7cc/Dont.Drive.Here.S02E06.Sao.Paulo.720p.HDTV.x264-CROOKS.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Lambing.Live.Farming.Families.Special.720p.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename Lambing.Live.Farming.Families.Special.720p.HDTV.x264-BARGE into a valid episode
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: Lambing.Live.Farming.Families.Special.720p.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Zoo.Juniors.S03E02.720p.HDTV.x264-NORiTE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Zoo Juniors
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Zoo.Juniors']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Zoo.Juniors.S03E02.720p.HDTV.x264-NORiTE', 3, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/6cd/Zoo.Juniors.S03E02.720p.HDTV.x264-NORiTE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Colbert.Report.2014.09.29.Jamie.Oliver.720p.HDTV.x264-MOMENTUM
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Colbert Report
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Colbert.Report']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Colbert.Report.2014.09.29.Jamie.Oliver.720p.HDTV.x264-MOMENTUM', 1, '||', 0, 0, 'http://www.newshost.co.za/nzb/449/The.Colbert.Report.2014.09.29.Jamie.Oliver.720p.HDTV.x264-MOMENTUM.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Zoo.Juniors.S03E01.720p.HDTV.x264-NORiTE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Zoo Juniors
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Zoo.Juniors']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Zoo.Juniors.S03E01.720p.HDTV.x264-NORiTE', 3, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/ad2/Zoo.Juniors.S03E01.720p.HDTV.x264-NORiTE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E12.720p.BluRay.X264-REWARD
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E12.720p.BluRay.X264-REWARD', 2, '|12|', 0, 0, 'http://www.newshost.co.za/nzb/7d3/The.Following.S02E12.720p.BluRay.X264-REWARD.nzb', 1412306144, 128]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Cheetah.Diaries.S03E08.720p.HDTV.x264-DOCERE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Cheetah Diaries
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Cheetah.Diaries']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Cheetah.Diaries.S03E08.720p.HDTV.x264-DOCERE', 3, '|8|', 0, 0, 'http://www.newshost.co.za/nzb/501/Cheetah.Diaries.S03E08.720p.HDTV.x264-DOCERE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E11.720p.BluRay.X264-REWARD
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E11.720p.BluRay.X264-REWARD', 2, '|11|', 0, 0, 'http://www.newshost.co.za/nzb/fba/The.Following.S02E11.720p.BluRay.X264-REWARD.nzb', 1412306144, 128]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Daily.Show.2014.09.29.Hadi.al.Bahra.720p.HDTV.x264-MOMENTUM
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Daily Show
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Daily.Show']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Daily.Show.2014.09.29.Hadi.al.Bahra.720p.HDTV.x264-MOMENTUM', 1, '||', 0, 0, 'http://www.newshost.co.za/nzb/eff/The.Daily.Show.2014.09.29.Hadi.al.Bahra.720p.HDTV.x264-MOMENTUM.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Puppy.SOS.S01E07.720p.HDTV.x264-NORiTE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Puppy SOS
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Puppy.SOS']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Puppy SOS', u'Puppy SOS']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Puppy SOS
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Puppy.SOS']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Puppy.SOS.S01E07.720p.HDTV.x264-NORiTE', 1, '|7|', 0, 0, 'http://www.newshost.co.za/nzb/ae0/Puppy.SOS.S01E07.720p.HDTV.x264-NORiTE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Russias.History.Revealed.S01E03.720p.HDTV.x264-TViLLAGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Russias History Revealed
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Russias.History.Revealed']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Russias History Revealed', u'Russias History Revealed']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Russias History Revealed
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Russias.History.Revealed']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Russias.History.Revealed.S01E03.720p.HDTV.x264-TViLLAGE', 1, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/201/Russias.History.Revealed.S01E03.720p.HDTV.x264-TViLLAGE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Rabbit.Fall.S02E03.720p.HDTV.x264-DOCERE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Rabbit Fall
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Rabbit.Fall']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Rabbit Fall', u'Rabbit Fall']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Rabbit Fall
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Rabbit.Fall']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Rabbit.Fall.S02E03.720p.HDTV.x264-DOCERE', 2, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/2cf/Rabbit.Fall.S02E03.720p.HDTV.x264-DOCERE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Annas.Wild.Life.S01E01.720p.HDTV.x264-NORiTE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Annas Wild Life
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Annas.Wild.Life']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Annas Wild Life', u'Annas Wild Life']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Annas Wild Life
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Annas.Wild.Life']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Annas.Wild.Life.S01E01.720p.HDTV.x264-NORiTE', 1, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/4dc/Annas.Wild.Life.S01E01.720p.HDTV.x264-NORiTE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Imagine.UK.S25E03.720p.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Imagine UK
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Imagine.UK']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Imagine.UK.S25E03.720p.HDTV.x264-BARGE', 25, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/cbf/Imagine.UK.S25E03.720p.HDTV.x264-BARGE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: NFL.2014.09.29.Patriots.vs.Chiefs.720p.HDTV.x264-MOMENTUM
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of NFL
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'NFL']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['NFL.2014.09.29.Patriots.vs.Chiefs.720p.HDTV.x264-MOMENTUM', 1, '||', 0, 0, 'http://www.newshost.co.za/nzb/cc7/NFL.2014.09.29.Patriots.vs.Chiefs.720p.HDTV.x264-MOMENTUM.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E10.720p.BluRay.X264-REWARD
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E10.720p.BluRay.X264-REWARD', 2, '|10|', 0, 0, 'http://www.newshost.co.za/nzb/8a9/The.Following.S02E10.720p.BluRay.X264-REWARD.nzb', 1412306144, 128]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E09.720p.BluRay.X264-REWARD
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E09.720p.BluRay.X264-REWARD', 2, '|9|', 0, 0, 'http://www.newshost.co.za/nzb/254/The.Following.S02E09.720p.BluRay.X264-REWARD.nzb', 1412306144, 128]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Imagine.UK.S25E01.720p.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Imagine UK
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Imagine.UK']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Imagine.UK.S25E01.720p.HDTV.x264-BARGE', 25, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/d45/Imagine.UK.S25E01.720p.HDTV.x264-BARGE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: East.Meets.West.S01E01.The.Birth.of.Civilization.720p.HDTV.x264-TERRA
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of East Meets West
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'East.Meets.West']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'East Meets West', u'East Meets West']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for East Meets West
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'East.Meets.West']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['East.Meets.West.S01E01.The.Birth.of.Civilization.720p.HDTV.x264-TERRA', 1, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/501/East.Meets.West.S01E01.The.Birth.of.Civilization.720p.HDTV.x264-TERRA.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Coast.Guard.Alaska.S01E11.720p.HDTV.x264-DOCERE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Coast Guard Alaska
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Coast.Guard.Alaska']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Coast.Guard.Alaska.S01E11.720p.HDTV.x264-DOCERE', 1, '|11|', 0, 0, 'http://www.newshost.co.za/nzb/be5/Coast.Guard.Alaska.S01E11.720p.HDTV.x264-DOCERE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Highway.to.Sell.S01E05.Recipe.for.Disaster.720p.HDTV.x264-DHD
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Highway to Sell
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Highway.to.Sell']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Highway to Sell', u'Highway to Sell']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Highway to Sell
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Highway.to.Sell']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Highway.to.Sell.S01E05.Recipe.for.Disaster.720p.HDTV.x264-DHD', 1, '|5|', 0, 0, 'http://www.newshost.co.za/nzb/cc9/Highway.to.Sell.S01E05.Recipe.for.Disaster.720p.HDTV.x264-DHD.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E08.720p.BluRay.X264-REWARD
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E08.720p.BluRay.X264-REWARD', 2, '|8|', 0, 0, 'http://www.newshost.co.za/nzb/d39/The.Following.S02E08.720p.BluRay.X264-REWARD.nzb', 1412306144, 128]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E07.720p.BluRay.X264-REWARD
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E07.720p.BluRay.X264-REWARD', 2, '|7|', 0, 0, 'http://www.newshost.co.za/nzb/655/The.Following.S02E07.720p.BluRay.X264-REWARD.nzb', 1412306144, 128]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: I.Never.Knew.That.About.Britain.S01E07.720p.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of I Never Knew That About Britain
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'I.Never.Knew.That.About.Britain']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['I.Never.Knew.That.About.Britain.S01E07.720p.HDTV.x264-BARGE', 1, '|7|', 0, 0, 'http://www.newshost.co.za/nzb/438/I.Never.Knew.That.About.Britain.S01E07.720p.HDTV.x264-BARGE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E06.720p.BluRay.X264-REWARD
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E06.720p.BluRay.X264-REWARD', 2, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/e4b/The.Following.S02E06.720p.BluRay.X264-REWARD.nzb', 1412306144, 128]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: I.Never.Knew.That.About.Britain.S01E06.720p.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of I Never Knew That About Britain
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'I.Never.Knew.That.About.Britain']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['I.Never.Knew.That.About.Britain.S01E06.720p.HDTV.x264-BARGE', 1, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/6cb/I.Never.Knew.That.About.Britain.S01E06.720p.HDTV.x264-BARGE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Baggage.Battles.S01E23.720p.HDTV.x264-NORiTE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Baggage Battles
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Baggage.Battles']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Baggage.Battles.S01E23.720p.HDTV.x264-NORiTE', 1, '|23|', 0, 0, 'http://www.newshost.co.za/nzb/4d9/Baggage.Battles.S01E23.720p.HDTV.x264-NORiTE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: I.Never.Knew.That.About.Britain.S01E04.720p.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of I Never Knew That About Britain
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'I.Never.Knew.That.About.Britain']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['I.Never.Knew.That.About.Britain.S01E04.720p.HDTV.x264-BARGE', 1, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/637/I.Never.Knew.That.About.Britain.S01E04.720p.HDTV.x264-BARGE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Baggage.Battles.S01E18.720p.HDTV.x264-NORiTE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Baggage Battles
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Baggage.Battles']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Baggage.Battles.S01E18.720p.HDTV.x264-NORiTE', 1, '|18|', 0, 0, 'http://www.newshost.co.za/nzb/f97/Baggage.Battles.S01E18.720p.HDTV.x264-NORiTE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Baggage.Battles.S01E22.720p.HDTV.x264-NORiTE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Baggage Battles
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Baggage.Battles']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Baggage.Battles.S01E22.720p.HDTV.x264-NORiTE', 1, '|22|', 0, 0, 'http://www.newshost.co.za/nzb/3eb/Baggage.Battles.S01E22.720p.HDTV.x264-NORiTE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: I.Never.Knew.That.About.Britain.S01E03.720p.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of I Never Knew That About Britain
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'I.Never.Knew.That.About.Britain']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['I.Never.Knew.That.About.Britain.S01E03.720p.HDTV.x264-BARGE', 1, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/bd2/I.Never.Knew.That.About.Britain.S01E03.720p.HDTV.x264-BARGE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Fast.N.Loud-Demolition.Theater.S01E02.Cars.Concrete.and.Crashes.720p.HDTV.x264-DHD
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Fast N Loud-Demolition Theater
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Fast.N.Loud-Demolition.Theater']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Fast N Loud Demolition Theater', u'Fast N Loud Demolition Theater']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Fast N Loud Demolition Theater
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Fast.N.Loud-Demolition.Theater']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Fast.N.Loud-Demolition.Theater.S01E02.Cars.Concrete.and.Crashes.720p.HDTV.x264-DHD', 1, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/f67/Fast.N.Loud-Demolition.Theater.S01E02.Cars.Concrete.and.Crashes.720p.HDTV.x264-DHD.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: I.Never.Knew.That.About.Britain.S01E02.720p.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of I Never Knew That About Britain
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'I.Never.Knew.That.About.Britain']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['I.Never.Knew.That.About.Britain.S01E02.720p.HDTV.x264-BARGE', 1, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/c6b/I.Never.Knew.That.About.Britain.S01E02.720p.HDTV.x264-BARGE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: I.Never.Knew.That.About.Britain.S01E01.720p.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of I Never Knew That About Britain
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'I.Never.Knew.That.About.Britain']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['I.Never.Knew.That.About.Britain.S01E01.720p.HDTV.x264-BARGE', 1, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/e83/I.Never.Knew.That.About.Britain.S01E01.720p.HDTV.x264-BARGE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.To.Get.Ahead.S01E03.At.Versailles.720p.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How To Get Ahead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.To.Get.Ahead']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.To.Get.Ahead.S01E03.At.Versailles.720p.HDTV.x264-BARGE', 1, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/1dc/How.To.Get.Ahead.S01E03.At.Versailles.720p.HDTV.x264-BARGE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.To.Get.Ahead.S01E02.At.Renaissance.Court.720p.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How To Get Ahead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.To.Get.Ahead']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.To.Get.Ahead.S01E02.At.Renaissance.Court.720p.HDTV.x264-BARGE', 1, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/7e0/How.To.Get.Ahead.S01E02.At.Renaissance.Court.720p.HDTV.x264-BARGE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.To.Get.Ahead.S01E01.At.Medieval.Court.720p.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How To Get Ahead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.To.Get.Ahead']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.To.Get.Ahead.S01E01.At.Medieval.Court.720p.HDTV.x264-BARGE', 1, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/1ab/How.To.Get.Ahead.S01E01.At.Medieval.Court.720p.HDTV.x264-BARGE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Hidden.Histories.Britains.Oldest.Family.Businesses.S01E03.720p.HDTV.x264-BARGE
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Hidden Histories Britains Oldest Family Businesses
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Hidden.Histories.Britains.Oldest.Family.Businesses']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Hidden Histories Britains Oldest Family Businesses', u'Hidden Histories Britains Oldest Family Businesses']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Hidden Histories Britains Oldest Family Businesses
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Hidden.Histories.Britains.Oldest.Family.Businesses']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Hidden.Histories.Britains.Oldest.Family.Businesses.S01E03.720p.HDTV.x264-BARGE', 1, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/25d/Hidden.Histories.Britains.Oldest.Family.Businesses.S01E03.720p.HDTV.x264-BARGE.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.Its.Made.S23E16.720p.HDTV.x264-DHD
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How Its Made
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.Its.Made']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'How Its Made', u'How Its Made']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for How Its Made
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'How.Its.Made']
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.Its.Made.S23E16.720p.HDTV.x264-DHD', 23, '|16|', 0, 0, 'http://www.newshost.co.za/nzb/6be/How.Its.Made.S23E16.720p.HDTV.x264-DHD.nzb', 1412306144, 4]
2014-10-03 13:15:44 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Hair.S01E06.720p.HDTV.x264-BARGE
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Hair
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Hair']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Hair', u'Hair']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Hair
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Hair']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Hair.S01E06.720p.HDTV.x264-BARGE', 1, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/26e/Hair.S01E06.720p.HDTV.x264-BARGE.nzb', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Sleepy.Hollow.S02E02.720p.HDTV.X264-DIMENSION
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Sleepy Hollow
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Sleepy.Hollow']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Sleepy Hollow', u'Sleepy Hollow']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Sleepy Hollow
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Sleepy.Hollow']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Sleepy.Hollow.S02E02.720p.HDTV.X264-DIMENSION', 2, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/9de/Sleepy.Hollow.S02E02.720p.HDTV.X264-DIMENSION.nzb', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E05.720p.BluRay.X264-REWARD
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E05.720p.BluRay.X264-REWARD', 2, '|5|', 0, 0, 'http://www.newshost.co.za/nzb/7ff/The.Following.S02E05.720p.BluRay.X264-REWARD.nzb', 1412306145, 128]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E04.720p.BluRay.X264-REWARD
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E04.720p.BluRay.X264-REWARD', 2, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/6ea/The.Following.S02E04.720p.BluRay.X264-REWARD.nzb', 1412306145, 128]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E03.720p.BluRay.X264-REWARD
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E03.720p.BluRay.X264-REWARD', 2, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/428/The.Following.S02E03.720p.BluRay.X264-REWARD.nzb', 1412306145, 128]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E02.720p.BluRay.X264-REWARD
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E02.720p.BluRay.X264-REWARD', 2, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/c9e/The.Following.S02E02.720p.BluRay.X264-REWARD.nzb', 1412306145, 128]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Following.S02E01.720p.BluRay.X264-REWARD
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Following
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Following']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Following.S02E01.720p.BluRay.X264-REWARD', 2, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/2d0/The.Following.S02E01.720p.BluRay.X264-REWARD.nzb', 1412306145, 128]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Dancing.with.the.Stars.US.S19E04.720p.WEBRip.x264-W4F
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Dancing with the Stars US
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Dancing.with.the.Stars.US']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Dancing with the Stars US', u'Dancing with the Stars US']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Dancing with the Stars US
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Dancing.with.the.Stars.US']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Dancing.with.the.Stars.US.S19E04.720p.WEBRip.x264-W4F', 19, '|4|', 0, 0, 'http://www.newshost.co.za/nzb/883/Dancing.with.the.Stars.US.S19E04.720p.WEBRip.x264-W4F.nzb', 1412306145, 32]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Gotham.S01E02.720p.HDTV.X264-DIMENSION
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Gotham
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Gotham']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Gotham', u'Gotham']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Gotham
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Gotham']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Gotham.S01E02.720p.HDTV.X264-DIMENSION', 1, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/ac4/Gotham.S01E02.720p.HDTV.X264-DIMENSION.nzb', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Hair.S01E03.720p.HDTV.x264-BARGE
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Hair
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Hair']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Hair.S01E03.720p.HDTV.x264-BARGE', 1, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/c5b/Hair.S01E03.720p.HDTV.x264-BARGE.nzb', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Dancing.with.the.Stars.US.S19E03.720p.WEBRip.x264-W4F
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Dancing with the Stars US
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Dancing.with.the.Stars.US']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Dancing.with.the.Stars.US.S19E03.720p.WEBRip.x264-W4F', 19, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/e7f/Dancing.with.the.Stars.US.S19E03.720p.WEBRip.x264-W4F.nzb', 1412306145, 32]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Hair.S01E02.720p.HDTV.x264-BARGE
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Hair
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Hair']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Hair.S01E02.720p.HDTV.x264-BARGE', 1, '|2|', 0, 0, 'http://www.newshost.co.za/nzb/620/Hair.S01E02.720p.HDTV.x264-BARGE.nzb', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Castle.2009.S07E01.720p.HDTV.X264-DIMENSION
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Castle 2009
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Castle.2009']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Castle 2009', u'Castle 2009']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match original name but trying to manually strip and specify show year
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE (show_name LIKE ? OR tvr_name LIKE ?) AND startyear = ? with args [u'Castle%', u'Castle%', u'2009']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Castle 2009
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Castle.2009']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Castle.2009.S07E01.720p.HDTV.X264-DIMENSION', 7, '|1|', 0, 0, 'http://www.newshost.co.za/nzb/775/Castle.2009.S07E01.720p.HDTV.X264-DIMENSION.nzb', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Red.Bull.Global.RallyCross.Championship.2014.Round.9.Seattle.720p.HDTV.x264-DHD
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Red Bull Global RallyCross Championship 2014 Round
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Red.Bull.Global.RallyCross.Championship.2014.Round']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Red Bull Global RallyCross Championship 2014 Round', u'Red Bull Global RallyCross Championship 2014 Round']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Red Bull Global RallyCross Championship 2014 Round
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Red.Bull.Global.RallyCross.Championship.2014.Round']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Red.Bull.Global.RallyCross.Championship.2014.Round.9.Seattle.720p.HDTV.x264-DHD', 1, '|9|', 0, 0, 'http://www.newshost.co.za/nzb/9d2/Red.Bull.Global.RallyCross.Championship.2014.Round.9.Seattle.720p.HDTV.x264-DHD.nzb', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Red.Bull.Signature.Series.2014.Joyride.720p.HDTV.x264-DHD
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename Red.Bull.Signature.Series.2014.Joyride.720p.HDTV.x264-DHD into a valid episode
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: Red.Bull.Signature.Series.2014.Joyride.720p.HDTV.x264-DHD
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Glue.S01E03.720p.HDTV.x264-FaiLED
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Glue
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Glue']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Glue', u'Glue']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Glue
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Glue']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Glue.S01E03.720p.HDTV.x264-FaiLED', 1, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/66c/Glue.S01E03.720p.HDTV.x264-FaiLED.nzb', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Panorama.S62E32.Born.Asleep.REPACK.720p.HDTV.x264-BARGE
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Panorama
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Panorama']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Panorama', u'Panorama']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Panorama
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Panorama']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Panorama.S62E32.Born.Asleep.REPACK.720p.HDTV.x264-BARGE', 62, '|32|', 0, 0, 'http://www.newshost.co.za/nzb/924/Panorama.S62E32.Born.Asleep.REPACK.720p.HDTV.x264-BARGE.nzb', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Big.Bang.Theory.S08E03.720p.HDTV.X264-DIMENSION
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Big Bang Theory
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Big.Bang.Theory']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'The Big Bang Theory', u'The Big Bang Theory']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for The Big Bang Theory
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'The.Big.Bang.Theory']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Big.Bang.Theory.S08E03.720p.HDTV.X264-DIMENSION', 8, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/813/The.Big.Bang.Theory.S08E03.720p.HDTV.X264-DIMENSION.nzb', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Biggest.Loser.S16E03.720p.WEBRip.x264-W4F
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Biggest Loser
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Biggest.Loser']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'The Biggest Loser', u'The Biggest Loser']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for The Biggest Loser
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'The.Biggest.Loser']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Biggest.Loser.S16E03.720p.WEBRip.x264-W4F', 16, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/5db/The.Biggest.Loser.S16E03.720p.WEBRip.x264-W4F.nzb', 1412306145, 32]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: 50.Ways.To.Kill.Your.Mammy.S01E06.720p.HDTV.x264-FaiLED
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of 50 Ways To Kill Your Mammy
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'50.Ways.To.Kill.Your.Mammy']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'50 Ways To Kill Your Mammy', u'50 Ways To Kill Your Mammy']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for 50 Ways To Kill Your Mammy
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'50.Ways.To.Kill.Your.Mammy']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['50.Ways.To.Kill.Your.Mammy.S01E06.720p.HDTV.x264-FaiLED', 1, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/ed9/50.Ways.To.Kill.Your.Mammy.S01E06.720p.HDTV.x264-FaiLED.nzb', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Girl.Meets.World.S01E10.720p.HDTV.x264-QCF
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Girl Meets World
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Girl.Meets.World']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Girl Meets World', u'Girl Meets World']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Girl Meets World
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Girl.Meets.World']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Girl.Meets.World.S01E10.720p.HDTV.x264-QCF', 1, '|10|', 0, 0, 'http://www.newshost.co.za/nzb/362/Girl.Meets.World.S01E10.720p.HDTV.x264-QCF.nzb', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Saints.And.Scroungers.S06E05.720p.HDTV.x264-BARGE
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Saints And Scroungers
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Saints.And.Scroungers']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Saints And Scroungers', u'Saints And Scroungers']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Saints And Scroungers
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Saints.And.Scroungers']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Saints.And.Scroungers.S06E05.720p.HDTV.x264-BARGE', 6, '|5|', 0, 0, 'http://www.newshost.co.za/nzb/f8c/Saints.And.Scroungers.S06E05.720p.HDTV.x264-BARGE.nzb', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Horizon.S53E15.720p.HDTV.x264-FTP
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Horizon
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Horizon']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Horizon', u'Horizon']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Horizon
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Horizon']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Horizon.S53E15.720p.HDTV.x264-FTP', 53, '|15|', 0, 0, 'http://www.newshost.co.za/nzb/4d8/Horizon.S53E15.720p.HDTV.x264-FTP.nzb', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Saints.And.Scroungers.S06E06.720p.HDTV.x264-BARGE
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Saints And Scroungers
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Saints.And.Scroungers']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Saints.And.Scroungers.S06E06.720p.HDTV.x264-BARGE', 6, '|6|', 0, 0, 'http://www.newshost.co.za/nzb/2a0/Saints.And.Scroungers.S06E06.720p.HDTV.x264-BARGE.nzb', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Cilla.S01E03.720p.HDTV.x264-TLA
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Cilla
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Cilla']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Cilla', u'Cilla']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Cilla
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Cilla']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [womble_s_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Cilla.S01E03.720p.HDTV.x264-TLA', 1, '|3|', 0, 0, 'http://www.newshost.co.za/nzb/3c8/Cilla.S01E03.720p.HDTV.x264-TLA.nzb', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM [womble_s_index]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT time FROM lastUpdate WHERE provider = ? with args ['sick_beard_index']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Sick Beard Index cache update URL: http://lolo.sickbeard.com/api?t=tvsearch&cat=5030%2C5040
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: UPDATE lastUpdate SET time = ? WHERE provider = ? with args [1412306145, 'sick_beard_index']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO lastUpdate (time, provider) VALUES (?, ?) with args [1412306145, 'sick_beard_index']
2014-10-03 13:15:45 INFO     SEARCHQUEUE-RSS-SEARCH :: Clearing Sick Beard Index cache and updating with new information
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: DELETE FROM [sick_beard_index] WHERE 1
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Jokers.Wild.2014.S01E02.Take.it.to.the.Bank.720p.HDTV.x264-DHD
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Jokers Wild 2014
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Jokers.Wild.2014']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Jokers Wild 2014', u'Jokers Wild 2014']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match original name but trying to manually strip and specify show year
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE (show_name LIKE ? OR tvr_name LIKE ?) AND startyear = ? with args [u'Jokers Wild%', u'Jokers Wild%', u'2014']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Jokers Wild 2014
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Jokers.Wild.2014']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Jokers.Wild.2014.S01E02.Take.it.to.the.Bank.720p.HDTV.x264-DHD', 1, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/2237a285b35f3961b75e5521167244ff.nzb&i=0&r=', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Absolute.Genius.with.Dick.and.Dom.S01E09.WEBRip.x264-FaiLED
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Absolute Genius with Dick and Dom
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Absolute.Genius.with.Dick.and.Dom']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Absolute Genius with Dick and Dom', u'Absolute Genius with Dick and Dom']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Absolute Genius with Dick and Dom
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Absolute.Genius.with.Dick.and.Dom']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Absolute.Genius.with.Dick.and.Dom.S01E09.WEBRip.x264-FaiLED', 1, '|9|', 0, 0, 'http://lolo.sickbeard.com/getnzb/39ac3b2f091ce07ef35a296b5d84830d.nzb&i=0&r=', 1412306145, 1]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Absolute.Genius.with.Dick.and.Dom.S01E08.720p.WEBRip.x264-FaiLED
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Absolute Genius with Dick and Dom
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Absolute.Genius.with.Dick.and.Dom']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Absolute.Genius.with.Dick.and.Dom.S01E08.720p.WEBRip.x264-FaiLED', 1, '|8|', 0, 0, 'http://lolo.sickbeard.com/getnzb/cc0dfc49ed09629f1d43eb2de2c5006a.nzb&i=0&r=', 1412306145, 32]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Absolute.Genius.with.Dick.and.Dom.S01E06.720p.WEBRip.x264-FaiLED
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Absolute Genius with Dick and Dom
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Absolute.Genius.with.Dick.and.Dom']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Absolute.Genius.with.Dick.and.Dom.S01E06.720p.WEBRip.x264-FaiLED', 1, '|6|', 0, 0, 'http://lolo.sickbeard.com/getnzb/f85292b39d97b30fb4bcf2e072eef484.nzb&i=0&r=', 1412306145, 32]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Absolute.Genius.with.Dick.and.Dom.S01E05.720p.WEBRip.x264-FaiLED
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Absolute Genius with Dick and Dom
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Absolute.Genius.with.Dick.and.Dom']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Absolute.Genius.with.Dick.and.Dom.S01E05.720p.WEBRip.x264-FaiLED', 1, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/04e33dc389e71ea7203a6e947506fa12.nzb&i=0&r=', 1412306145, 32]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Absolute.Genius.with.Dick.and.Dom.S01E05.WEBRip.x264-FaiLED
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Absolute Genius with Dick and Dom
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Absolute.Genius.with.Dick.and.Dom']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Absolute.Genius.with.Dick.and.Dom.S01E05.WEBRip.x264-FaiLED', 1, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/4a8f5759234cb3f58f662f4e9b22d492.nzb&i=0&r=', 1412306145, 1]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Absolute.Genius.with.Dick.and.Dom.S01E03.720p.WEBRip.x264-FaiLED
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Absolute Genius with Dick and Dom
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Absolute.Genius.with.Dick.and.Dom']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Absolute.Genius.with.Dick.and.Dom.S01E03.720p.WEBRip.x264-FaiLED', 1, '|3|', 0, 0, 'http://lolo.sickbeard.com/getnzb/6edf8732e951af97a439458534c70da6.nzb&i=0&r=', 1412306145, 32]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Absolute.Genius.with.Dick.and.Dom.S01E04.720p.WEBRip.x264-FaiLED
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Absolute Genius with Dick and Dom
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Absolute.Genius.with.Dick.and.Dom']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Absolute.Genius.with.Dick.and.Dom.S01E04.720p.WEBRip.x264-FaiLED', 1, '|4|', 0, 0, 'http://lolo.sickbeard.com/getnzb/6fffb911035533bed76c10fcc2c2a52f.nzb&i=0&r=', 1412306145, 32]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Absolute.Genius.with.Dick.and.Dom.S01E04.WEBRip.x264-FaiLED
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Absolute Genius with Dick and Dom
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Absolute.Genius.with.Dick.and.Dom']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Absolute.Genius.with.Dick.and.Dom.S01E04.WEBRip.x264-FaiLED', 1, '|4|', 0, 0, 'http://lolo.sickbeard.com/getnzb/8b1cbbda5d40cd2da03623387d59a2fe.nzb&i=0&r=', 1412306145, 1]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Gracepoint.S01E01.HDTV.x264-LOL
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Gracepoint
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Gracepoint']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Gracepoint', u'Gracepoint']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Gracepoint
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Gracepoint']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Gracepoint.S01E01.HDTV.x264-LOL', 1, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/a8bb652be4b3ab21ed8e8c8e3e67f1c8.nzb&i=0&r=', 1412306145, 1]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Absolute.Genius.with.Dick.and.Dom.S01E03.WEBRip.x264-FaiLED
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Absolute Genius with Dick and Dom
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Absolute.Genius.with.Dick.and.Dom']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Absolute.Genius.with.Dick.and.Dom.S01E03.WEBRip.x264-FaiLED', 1, '|3|', 0, 0, 'http://lolo.sickbeard.com/getnzb/01a4d58dfc5959242790b31e53ef7b56.nzb&i=0&r=', 1412306145, 1]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Scandal.US.S04E02.720p.HDTV.X264-DIMENSION
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Scandal US
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Scandal.US']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Scandal US', u'Scandal US']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Scandal US
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Scandal.US']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Scandal.US.S04E02.720p.HDTV.X264-DIMENSION', 4, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/96813df6f603b91814abb6dc52c865ac.nzb&i=0&r=', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Scandal.US.S04E02.HDTV.x264-LOL
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Scandal US
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Scandal.US']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Scandal.US.S04E02.HDTV.x264-LOL', 4, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/32f3f5f9771c8c2f54bec0ad2d9e4182.nzb&i=0&r=', 1412306145, 1]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bad.Judge.S01E01.HDTV.x264-LOL
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bad Judge
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bad.Judge']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Bad Judge', u'Bad Judge']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Bad Judge
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Bad.Judge']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bad.Judge.S01E01.HDTV.x264-LOL', 1, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/daf236e51244285b2063777a16834c5d.nzb&i=0&r=', 1412306145, 1]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bad.Judge.S01E01.720p.HDTV.X264-DIMENSION
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bad Judge
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bad.Judge']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bad.Judge.S01E01.720p.HDTV.X264-DIMENSION', 1, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/cd98137393114cb5df510bca1885e83a.nzb&i=0&r=', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Haven.S05E04.HDTV.x264-LOL
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Haven
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Haven']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Haven', u'Haven']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Haven
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Haven']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Haven.S05E04.HDTV.x264-LOL', 5, '|4|', 0, 0, 'http://lolo.sickbeard.com/getnzb/5ba42d9bddc367c2afae68aa46dbb98d.nzb&i=0&r=', 1412306145, 1]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Mock.The.Week.S13E10.720p.HDTV.x264-FaiLED
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Mock The Week
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Mock.The.Week']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Mock The Week', u'Mock The Week']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Mock The Week
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Mock.The.Week']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Mock.The.Week.S13E10.720p.HDTV.x264-FaiLED', 13, '|10|', 0, 0, 'http://lolo.sickbeard.com/getnzb/726a51e98f6de53423198804d2d71ee9.nzb&i=0&r=', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Mock.The.Week.S13E10.HDTV.x264-FaiLED
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Mock The Week
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Mock.The.Week']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Mock.The.Week.S13E10.HDTV.x264-FaiLED', 13, '|10|', 0, 0, 'http://lolo.sickbeard.com/getnzb/f7707e58b36bcd792d92ba94b1b78d5f.nzb&i=0&r=', 1412306145, 1]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Katherine.Mills.Mind.Games.S01E01.720p.HDTV.x264-FaiLED
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Katherine Mills Mind Games
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Katherine.Mills.Mind.Games']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Katherine Mills Mind Games', u'Katherine Mills Mind Games']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Katherine Mills Mind Games
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Katherine.Mills.Mind.Games']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Katherine.Mills.Mind.Games.S01E01.720p.HDTV.x264-FaiLED', 1, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/cfc67595bb545170362f02dc88d7fa8c.nzb&i=0&r=', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Eastenders.2014.10.02.720p.WEBRip.x264-FaiLED
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Eastenders
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Eastenders']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Eastenders', u'Eastenders']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Eastenders
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Eastenders']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Eastenders.2014.10.02.720p.WEBRip.x264-FaiLED', 1, '||', 0, 0, 'http://lolo.sickbeard.com/getnzb/45b678b1e18af25a1740a9fdd194f619.nzb&i=0&r=', 1412306145, 32]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Greys.Anatomy.S11E02.720p.HDTV.X264-DIMENSION
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Greys Anatomy
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Greys.Anatomy']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Greys Anatomy', u'Greys Anatomy']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Greys Anatomy
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Greys.Anatomy']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Greys.Anatomy.S11E02.720p.HDTV.X264-DIMENSION', 11, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/cc946181a0273812e3ce666a37dd164c.nzb&i=0&r=', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Greys.Anatomy.S11E02.HDTV.x264-LOL
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Greys Anatomy
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Greys.Anatomy']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Greys.Anatomy.S11E02.HDTV.x264-LOL', 11, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/e52c660eccb2dfc0b6fe37be38cf6e05.nzb&i=0&r=', 1412306145, 1]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Driver.S01E02.PROPER.720p.HDTV.x264-RiVER
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Driver
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Driver']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Driver.S01E02.PROPER.720p.HDTV.x264-RiVER', 1, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/ba1e769e3f0f2530713b9446229bbdc1.nzb&i=0&r=', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Uncle.Grandpa.S02E09.Grounded.720p.HDTV.x264-W4F
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Uncle Grandpa
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Uncle.Grandpa']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Uncle Grandpa', u'Uncle Grandpa']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Uncle Grandpa
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Uncle.Grandpa']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Uncle.Grandpa.S02E09.Grounded.720p.HDTV.x264-W4F', 2, '|9|', 0, 0, 'http://lolo.sickbeard.com/getnzb/c5d534611861a574c01a2be2f5d1510e.nzb&i=0&r=', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Hazing.Secret.2014.HDTV.x264-W4F
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename The.Hazing.Secret.2014.HDTV.x264-W4F into a valid episode
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: The.Hazing.Secret.2014.HDTV.x264-W4F
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Hazing.Secret.2014.720p.HDTV.x264-W4F
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename The.Hazing.Secret.2014.720p.HDTV.x264-W4F into a valid episode
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: The.Hazing.Secret.2014.720p.HDTV.x264-W4F
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Uncle.Grandpa.S02E08.Aunt.Grandma.HDTV.x264-W4F
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Uncle Grandpa
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Uncle.Grandpa']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Uncle.Grandpa.S02E08.Aunt.Grandma.HDTV.x264-W4F', 2, '|8|', 0, 0, 'http://lolo.sickbeard.com/getnzb/7223c875cfcbcab76348dfb93f97d886.nzb&i=0&r=', 1412306145, 1]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bad.Education.S03E03.PROPER.720p.HDTV.x264-RiVER
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bad Education
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bad.Education']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bad.Education.S03E03.PROPER.720p.HDTV.x264-RiVER', 3, '|3|', 0, 0, 'http://lolo.sickbeard.com/getnzb/7e4505d87e781a52b772e2f26a5b6d14.nzb&i=0&r=', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Jungle.Atlantis.S01E02.720p.HDTV.x264-BARGE
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Jungle Atlantis
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Jungle.Atlantis']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Jungle Atlantis', u'Jungle Atlantis']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Jungle Atlantis
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Jungle.Atlantis']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Jungle.Atlantis.S01E02.720p.HDTV.x264-BARGE', 1, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/6a375309fde265cae778ab6471cb15a5.nzb&i=0&r=', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.to.Get.Away.with.Murder.S01E02.720p.HDTV.X264-DIMENSION
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How to Get Away with Murder
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.to.Get.Away.with.Murder']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'How to Get Away with Murder', u'How to Get Away with Murder']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for How to Get Away with Murder
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'How.to.Get.Away.with.Murder']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.to.Get.Away.with.Murder.S01E02.720p.HDTV.X264-DIMENSION', 1, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/e6e29080ec22e3c5e8c6a9f86cfa7d51.nzb&i=0&r=', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: How.to.Get.Away.with.Murder.S01E02.HDTV.x264-LOL
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of How to Get Away with Murder
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'How.to.Get.Away.with.Murder']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['How.to.Get.Away.with.Murder.S01E02.HDTV.x264-LOL', 1, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/37da220c8f6e9d7da5b4209a1bfb650c.nzb&i=0&r=', 1412306145, 1]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Amazing.World.of.Gumball.S03E19.The.Procrastinators.720p.HDTV.x264-W4F
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Amazing World of Gumball
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Amazing.World.of.Gumball']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'The Amazing World of Gumball', u'The Amazing World of Gumball']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for The Amazing World of Gumball
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'The.Amazing.World.of.Gumball']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Amazing.World.of.Gumball.S03E19.The.Procrastinators.720p.HDTV.x264-W4F', 3, '|19|', 0, 0, 'http://lolo.sickbeard.com/getnzb/d8e793454e7ae93bfc783183f73b4610.nzb&i=0&r=', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Amazing.World.of.Gumball.S03E19.The.Procrastinators.HDTV.x264-W4F
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Amazing World of Gumball
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Amazing.World.of.Gumball']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Amazing.World.of.Gumball.S03E19.The.Procrastinators.HDTV.x264-W4F', 3, '|19|', 0, 0, 'http://lolo.sickbeard.com/getnzb/b50cdcf7b0f8bedae343055d15cdeae2.nzb&i=0&r=', 1412306145, 1]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Steven.Universe.S01E27.720p.HDTV.x264-W4F
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Steven Universe
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Steven.Universe']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Steven Universe', u'Steven Universe']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Steven Universe
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Steven.Universe']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Steven.Universe.S01E27.720p.HDTV.x264-W4F', 1, '|27|', 0, 0, 'http://lolo.sickbeard.com/getnzb/6e1054fe5c174797a2bd74939c92eefe.nzb&i=0&r=', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Steven.Universe.S01E27.HDTV.x264-W4F
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Steven Universe
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Steven.Universe']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Steven.Universe.S01E27.HDTV.x264-W4F', 1, '|27|', 0, 0, 'http://lolo.sickbeard.com/getnzb/3e279f2647c26ca4a049cf11ec2bf949.nzb&i=0&r=', 1412306145, 1]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: No.Foreigners.Here.100.Percent.British.S01E01.PDTV.x264-C4TV
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of No Foreigners Here 100 Percent British
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'No.Foreigners.Here.100.Percent.British']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'No Foreigners Here 100 Percent British', u'No Foreigners Here 100 Percent British']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for No Foreigners Here 100 Percent British
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'No.Foreigners.Here.100.Percent.British']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['No.Foreigners.Here.100.Percent.British.S01E01.PDTV.x264-C4TV', 1, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/ac416f036ba5355acb3f281fa1e5b6f1.nzb&i=0&r=', 1412306145, 1]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Benefit.House.Me.And.My.22.Kids.S01E01.PDTV.x264-C4TV
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Benefit House Me And My 22 Kids
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Benefit.House.Me.And.My.22.Kids']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Benefit House Me And My 22 Kids', u'Benefit House Me And My 22 Kids']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Benefit House Me And My 22 Kids
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Benefit.House.Me.And.My.22.Kids']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Benefit.House.Me.And.My.22.Kids.S01E01.PDTV.x264-C4TV', 1, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/54f979d87e74f193d3501ed6ebdf6793.nzb&i=0&r=', 1412306145, 1]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Clarence.US.S01E18.Average.Jeff.720p.HDTV.x264-W4F
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Clarence US
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Clarence.US']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Clarence US', u'Clarence US']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Clarence US
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Clarence.US']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Clarence.US.S01E18.Average.Jeff.720p.HDTV.x264-W4F', 1, '|18|', 0, 0, 'http://lolo.sickbeard.com/getnzb/a0ef3d41d70dc84eea927b94d47a9a9b.nzb&i=0&r=', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Big.Bang.Theory.S08E03.The.First.Pitch.Insufficiency.720p.WEB-DL.DD5.1.H.264-Oosh
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of The Big Bang Theory
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'The.Big.Bang.Theory']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['The.Big.Bang.Theory.S08E03.The.First.Pitch.Insufficiency.720p.WEB-DL.DD5.1.H.264-Oosh', 8, '|3|', 0, 0, 'http://lolo.sickbeard.com/getnzb/2a9a62d29facf24645078d852ea698c5.nzb&i=0&r=', 1412306145, 32]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Clarence.US.S01E18.Average.Jeff.HDTV.x264-W4F
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Clarence US
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Clarence.US']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Clarence.US.S01E18.Average.Jeff.HDTV.x264-W4F', 1, '|18|', 0, 0, 'http://lolo.sickbeard.com/getnzb/29d749e598647c187987c6e859bf7c0a.nzb&i=0&r=', 1412306145, 1]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: North.Square.S01E08.DVDRip.X264-NODLABS
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of North Square
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'North.Square']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'North Square', u'North Square']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for North Square
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'North.Square']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['North.Square.S01E08.DVDRip.X264-NODLABS', 1, '|8|', 0, 0, 'http://lolo.sickbeard.com/getnzb/13d89dfb9068eab7295e107f94856b6c.nzb&i=0&r=', 1412306145, 2]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: North.Square.S01E10.DVDRip.X264-NODLABS
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of North Square
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'North.Square']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['North.Square.S01E10.DVDRip.X264-NODLABS', 1, '|10|', 0, 0, 'http://lolo.sickbeard.com/getnzb/7fc02fbd615d87e9c391d8192963c9da.nzb&i=0&r=', 1412306145, 2]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Globe.Trekker.S16E07.Good.And.Bad.Food.Guide.3.720p.HDTV.x264-ASCENDANCE
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Globe Trekker
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Globe.Trekker']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Globe.Trekker.S16E07.Good.And.Bad.Food.Guide.3.720p.HDTV.x264-ASCENDANCE', 16, '|7|', 0, 0, 'http://lolo.sickbeard.com/getnzb/00dc82f5ad63a23ffdd1ec14fab4c42a.nzb&i=0&r=', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: North.Square.S01E07.DVDRip.X264-NODLABS
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of North Square
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'North.Square']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['North.Square.S01E07.DVDRip.X264-NODLABS', 1, '|7|', 0, 0, 'http://lolo.sickbeard.com/getnzb/9b902b3b7ad7c5a7cff51719dc81732a.nzb&i=0&r=', 1412306145, 2]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: North.Square.S01E09.DVDRip.X264-NODLABS
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of North Square
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'North.Square']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['North.Square.S01E09.DVDRip.X264-NODLABS', 1, '|9|', 0, 0, 'http://lolo.sickbeard.com/getnzb/52fb463fcdf18bc6aa1f00494f4c9f2a.nzb&i=0&r=', 1412306145, 2]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: North.Square.S01E06.DVDRip.X264-NODLABS
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of North Square
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'North.Square']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['North.Square.S01E06.DVDRip.X264-NODLABS', 1, '|6|', 0, 0, 'http://lolo.sickbeard.com/getnzb/b18992f09ddccbe73690f7e8882e495b.nzb&i=0&r=', 1412306145, 2]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: North.Square.S01E04.DVDRip.X264-NODLABS
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of North Square
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'North.Square']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['North.Square.S01E04.DVDRip.X264-NODLABS', 1, '|4|', 0, 0, 'http://lolo.sickbeard.com/getnzb/5aa9ae7d1bfaf2a042b1044a6e7c44c7.nzb&i=0&r=', 1412306145, 2]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: North.Square.S01E02.DVDRip.X264-NODLABS
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of North Square
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'North.Square']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['North.Square.S01E02.DVDRip.X264-NODLABS', 1, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/6be2b6e7660a0b072a954c9e5bff0faa.nzb&i=0&r=', 1412306145, 2]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: North.Square.S01E03.DVDRip.X264-NODLABS
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of North Square
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'North.Square']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['North.Square.S01E03.DVDRip.X264-NODLABS', 1, '|3|', 0, 0, 'http://lolo.sickbeard.com/getnzb/615c81b8cf4e42340b208970109d9b5e.nzb&i=0&r=', 1412306145, 2]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: North.Square.S01E05.DVDRip.X264-NODLABS
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of North Square
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'North.Square']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['North.Square.S01E05.DVDRip.X264-NODLABS', 1, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/f6df2032ab6c6e92e5fdce83efbc1756.nzb&i=0&r=', 1412306145, 2]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: North.Square.S01E01.DVDRip.X264-NODLABS
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of North Square
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'North.Square']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['North.Square.S01E01.DVDRip.X264-NODLABS', 1, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/b5c06233a73f5eaf2a01ab857b75cbf8.nzb&i=0&r=', 1412306145, 2]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Tough.Trains.S01E01.Across.Bolivia.The.Pantanal.to.the.Pacific.720p.HDTV.x264-ASCENDANCE
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Tough Trains
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Tough.Trains']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Tough Trains', u'Tough Trains']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Tough Trains
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Tough.Trains']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Tough.Trains.S01E01.Across.Bolivia.The.Pantanal.to.the.Pacific.720p.HDTV.x264-ASCENDANCE', 1, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/2a960c78c26da1a808632c3c174a7202.nzb&i=0&r=', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Globe.Trekker.S16E07.Good.And.Bad.Food.Guide.3.HDTV.x264-ASCENDANCE
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Globe Trekker
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Globe.Trekker']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Globe.Trekker.S16E07.Good.And.Bad.Food.Guide.3.HDTV.x264-ASCENDANCE', 16, '|7|', 0, 0, 'http://lolo.sickbeard.com/getnzb/615f0e4ae3f19159fb809338fe1a047e.nzb&i=0&r=', 1412306145, 1]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Teen.Titans.Go.S02E15.Friendship.720p.HDTV.x264-W4F
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Teen Titans Go
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Teen.Titans.Go']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Teen.Titans.Go.S02E15.Friendship.720p.HDTV.x264-W4F', 2, '|15|', 0, 0, 'http://lolo.sickbeard.com/getnzb/61467bf939584964ae0510f2fdc281fc.nzb&i=0&r=', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Surviving.Evil.S02E05.Coke.Crazed.Killer.720p.HDTV.x264-TERRA
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Surviving Evil
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Surviving.Evil']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Surviving Evil', u'Surviving Evil']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Surviving Evil
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Surviving.Evil']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Surviving.Evil.S02E05.Coke.Crazed.Killer.720p.HDTV.x264-TERRA', 2, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/268315fccd9d5c42bcce42fbfa114776.nzb&i=0&r=', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Dont.Drop.The.Baby.S01E03.720p.HDTV.x264-FTP
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Dont Drop The Baby
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Dont.Drop.The.Baby']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Dont Drop The Baby', u'Dont Drop The Baby']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Dont Drop The Baby
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Dont.Drop.The.Baby']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Dont.Drop.The.Baby.S01E03.720p.HDTV.x264-FTP', 1, '|3|', 0, 0, 'http://lolo.sickbeard.com/getnzb/fd91af3722fc2cd468145d1055914d95.nzb&i=0&r=', 1412306145, 4]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Tough.Trains.S01E01.Across.Bolivia.The.Pantanal.to.the.Pacific.HDTV.x264-ASCENDANCE
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Tough Trains
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Tough.Trains']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Tough.Trains.S01E01.Across.Bolivia.The.Pantanal.to.the.Pacific.HDTV.x264-ASCENDANCE', 1, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/fe775033f4394548244925533401dcee.nzb&i=0&r=', 1412306145, 1]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Teen.Titans.Go.S02E15.Friendship.HDTV.x264-W4F
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Teen Titans Go
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Teen.Titans.Go']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Teen.Titans.Go.S02E15.Friendship.HDTV.x264-W4F', 2, '|15|', 0, 0, 'http://lolo.sickbeard.com/getnzb/bfb601b37fef9de63abf10853ae0b60d.nzb&i=0&r=', 1412306145, 1]
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Stalker.S01E01.720p.WEB-DL.DD5.1.H.264-BS
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Stalker
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Stalker']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Stalker', u'Stalker']
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Stalker
2014-10-03 13:15:45 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Stalker']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Stalker.S01E01.720p.WEB-DL.DD5.1.H.264-BS', 1, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/abd4f437d819a70c38b30d2db5d29a99.nzb&i=0&r=', 1412306146, 32]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Detectorists.S01E01.HDTV.x264-RiVER
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Detectorists
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Detectorists']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Detectorists', u'Detectorists']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Detectorists
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Detectorists']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Detectorists.S01E01.HDTV.x264-RiVER', 1, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/2f9592b36c1f8dd05e5d4ffa13d54d73.nzb&i=0&r=', 1412306146, 1]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Criminal.Minds.S10E01.720p.WEB-DL.DD5.1.H.264-CtrlHD
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Criminal Minds
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Criminal.Minds']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Criminal Minds', u'Criminal Minds']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Criminal Minds
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Criminal.Minds']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Criminal.Minds.S10E01.720p.WEB-DL.DD5.1.H.264-CtrlHD', 10, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/5fda014075e5fc32e63d79246268afbc.nzb&i=0&r=', 1412306146, 32]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Scrotal.Recall.S01E01.HDTV.x264-TLA
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Scrotal Recall
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Scrotal.Recall']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Scrotal Recall', u'Scrotal Recall']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Scrotal Recall
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Scrotal.Recall']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Scrotal.Recall.S01E01.HDTV.x264-TLA', 1, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/8bb0b4809be43cb1425af9deab21cbc5.nzb&i=0&r=', 1412306146, 1]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Legends.2014.S01E08.720p.WEB-DL.DD5.1.H.264-BS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Legends 2014
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Legends.2014']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Legends 2014', u'Legends 2014']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match original name but trying to manually strip and specify show year
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE (show_name LIKE ? OR tvr_name LIKE ?) AND startyear = ? with args [u'Legends%', u'Legends%', u'2014']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Legends 2014
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Legends.2014']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Legends.2014.S01E08.720p.WEB-DL.DD5.1.H.264-BS', 1, '|8|', 0, 0, 'http://lolo.sickbeard.com/getnzb/6ec6fd4eef96aa0846e7877d9553fb6b.nzb&i=0&r=', 1412306146, 32]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Scrotal.Recall.S01E01.720p.HDTV.x264-TLA
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Scrotal Recall
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Scrotal.Recall']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Scrotal.Recall.S01E01.720p.HDTV.x264-TLA', 1, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/b3ea7d5139ad999e09bce8ece7dde816.nzb&i=0&r=', 1412306146, 4]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Modern.Family.S06E02.720p.WEB-DL.DD5.1.AAC2.0.H.264-YFN
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Modern Family
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Modern.Family']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Modern Family', u'Modern Family']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Modern Family
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Modern.Family']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Modern.Family.S06E02.720p.WEB-DL.DD5.1.AAC2.0.H.264-YFN', 6, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/ca2f2a180e681ed49659e5ae44727af6.nzb&i=0&r=', 1412306146, 32]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Peaky.Blinders.S02E01.HDTV.x264-TLA
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Peaky Blinders
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Peaky.Blinders']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Peaky Blinders', u'Peaky Blinders']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Peaky Blinders
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Peaky.Blinders']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Peaky.Blinders.S02E01.HDTV.x264-TLA', 2, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/403dda92cdc2b3915a7e7a20b077bc41.nzb&i=0&r=', 1412306146, 1]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Detectorists.1x01.720p.HDTV.x264-FoV
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Detectorists
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Detectorists']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Detectorists.1x01.720p.HDTV.x264-FoV', 1, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/7e1d48b8ffb35bbc1c340515356d6bea.nzb&i=0&r=', 1412306146, 4]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Assault.2014.HDTV.x264-W4F
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename The.Assault.2014.HDTV.x264-W4F into a valid episode
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: The.Assault.2014.HDTV.x264-W4F
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: The.Assault.2014.720p.HDTV.x264-W4F
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to parse the filename The.Assault.2014.720p.HDTV.x264-W4F into a valid episode
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Giving up because I'm unable to parse this name: The.Assault.2014.720p.HDTV.x264-W4F
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Who.Do.You.Think.You.Are.UK.S11E09.720p.HDTV.x264-FTP
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Who Do You Think You Are UK
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Who.Do.You.Think.You.Are.UK']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Who Do You Think You Are UK', u'Who Do You Think You Are UK']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Who Do You Think You Are UK
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Who.Do.You.Think.You.Are.UK']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Who.Do.You.Think.You.Are.UK.S11E09.720p.HDTV.x264-FTP', 11, '|9|', 0, 0, 'http://lolo.sickbeard.com/getnzb/a8ca22073fd0fea134861931e5fc5caa.nzb&i=0&r=', 1412306146, 4]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Peaky.Blinders.2x01.720p.HDTV.x264-FoV
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Peaky Blinders
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Peaky.Blinders']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Peaky.Blinders.2x01.720p.HDTV.x264-FoV', 2, '|1|', 0, 0, 'http://lolo.sickbeard.com/getnzb/a2882b7fc68968ee410641ae1a505d25.nzb&i=0&r=', 1412306146, 4]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Tonight.S16E35.When.Interest.Rates.Rise.HDTV.x264-C4TV
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Tonight
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Tonight']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Tonight', u'Tonight']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Tonight
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Tonight']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Tonight.S16E35.When.Interest.Rates.Rise.HDTV.x264-C4TV', 16, '|35|', 0, 0, 'http://lolo.sickbeard.com/getnzb/3c86acbbc8528d6f3ddf9df7489114e9.nzb&i=0&r=', 1412306146, 1]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Tonight.S16E35.When.Interest.Rates.Rise.720p.HDTV.x264-C4TV
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Tonight
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Tonight']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Tonight.S16E35.When.Interest.Rates.Rise.720p.HDTV.x264-C4TV', 16, '|35|', 0, 0, 'http://lolo.sickbeard.com/getnzb/ab978617876f0f789cb7fc9c831bdecd.nzb&i=0&r=', 1412306146, 4]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bakumatsu.Gijinden.Roman.S01E12.1080p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: No cache results returned, continuing on with the search
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Trying to look the show up in the show database
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: sickbeard.db: SELECT * FROM tv_shows WHERE show_name LIKE ? OR tvr_name LIKE ? with args [u'Bakumatsu Gijinden Roman', u'Bakumatsu Gijinden Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Unable to match a record in the DB for Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Couldn't figure out a show name straight from the DB, trying a regex search instead
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO scene_names (tvdb_id, name) VALUES (?, ?) with args [0, u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bakumatsu.Gijinden.Roman.S01E12.1080p.WEBRip.x264-ANiHLS', 1, '|12|', 0, 0, 'http://lolo.sickbeard.com/getnzb/2c98aa76a1b073605faff9b48b111ff0.nzb&i=0&r=', 1412306146, 64]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bakumatsu.Gijinden.Roman.S01E12.720p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bakumatsu.Gijinden.Roman.S01E12.720p.WEBRip.x264-ANiHLS', 1, '|12|', 0, 0, 'http://lolo.sickbeard.com/getnzb/9f6cd57b1ab12693bb1cd938429a74e1.nzb&i=0&r=', 1412306146, 32]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bakumatsu.Gijinden.Roman.S01E11.1080p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bakumatsu.Gijinden.Roman.S01E11.1080p.WEBRip.x264-ANiHLS', 1, '|11|', 0, 0, 'http://lolo.sickbeard.com/getnzb/ff67da5002e9e4063f4c007d4d774289.nzb&i=0&r=', 1412306146, 64]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bakumatsu.Gijinden.Roman.S01E12.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bakumatsu.Gijinden.Roman.S01E12.WEBRip.x264-ANiHLS', 1, '|12|', 0, 0, 'http://lolo.sickbeard.com/getnzb/e8e34494159170b91a89f16615f85906.nzb&i=0&r=', 1412306146, 1]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bakumatsu.Gijinden.Roman.S01E11.720p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bakumatsu.Gijinden.Roman.S01E11.720p.WEBRip.x264-ANiHLS', 1, '|11|', 0, 0, 'http://lolo.sickbeard.com/getnzb/ec3be152fa0432bfa6e86a629d527e09.nzb&i=0&r=', 1412306146, 32]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bakumatsu.Gijinden.Roman.S01E11.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bakumatsu.Gijinden.Roman.S01E11.WEBRip.x264-ANiHLS', 1, '|11|', 0, 0, 'http://lolo.sickbeard.com/getnzb/ea434ab342eb73b66a1f03bd26e8c020.nzb&i=0&r=', 1412306146, 1]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bakumatsu.Gijinden.Roman.S01E10.1080p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bakumatsu.Gijinden.Roman.S01E10.1080p.WEBRip.x264-ANiHLS', 1, '|10|', 0, 0, 'http://lolo.sickbeard.com/getnzb/d25d609ca824d1d8f55d35d8b9bdbb4b.nzb&i=0&r=', 1412306146, 64]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bakumatsu.Gijinden.Roman.S01E10.720p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bakumatsu.Gijinden.Roman.S01E10.720p.WEBRip.x264-ANiHLS', 1, '|10|', 0, 0, 'http://lolo.sickbeard.com/getnzb/b55858b274664fb960a2988b05e13bd0.nzb&i=0&r=', 1412306146, 32]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bakumatsu.Gijinden.Roman.S01E09.1080p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bakumatsu.Gijinden.Roman.S01E09.1080p.WEBRip.x264-ANiHLS', 1, '|9|', 0, 0, 'http://lolo.sickbeard.com/getnzb/a7b6812040af40310e23dcca0b9aed85.nzb&i=0&r=', 1412306146, 64]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bakumatsu.Gijinden.Roman.S01E09.720p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bakumatsu.Gijinden.Roman.S01E09.720p.WEBRip.x264-ANiHLS', 1, '|9|', 0, 0, 'http://lolo.sickbeard.com/getnzb/55527f17ddb1a9c25bd96a0c1d213ee1.nzb&i=0&r=', 1412306146, 32]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bakumatsu.Gijinden.Roman.S01E09.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bakumatsu.Gijinden.Roman.S01E09.WEBRip.x264-ANiHLS', 1, '|9|', 0, 0, 'http://lolo.sickbeard.com/getnzb/b864e1ef633caf19208da8007ebd1f49.nzb&i=0&r=', 1412306146, 1]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bakumatsu.Gijinden.Roman.S01E08.1080p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bakumatsu.Gijinden.Roman.S01E08.1080p.WEBRip.x264-ANiHLS', 1, '|8|', 0, 0, 'http://lolo.sickbeard.com/getnzb/055a53388da2c7485e4075cae65800c4.nzb&i=0&r=', 1412306146, 64]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bakumatsu.Gijinden.Roman.S01E08.720p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bakumatsu.Gijinden.Roman.S01E08.720p.WEBRip.x264-ANiHLS', 1, '|8|', 0, 0, 'http://lolo.sickbeard.com/getnzb/e7deb9ad6f5954eecdd3f761e65ea055.nzb&i=0&r=', 1412306146, 32]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bakumatsu.Gijinden.Roman.S01E07.1080p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bakumatsu.Gijinden.Roman.S01E07.1080p.WEBRip.x264-ANiHLS', 1, '|7|', 0, 0, 'http://lolo.sickbeard.com/getnzb/26c88f34fe4ae2f28f66230eecbeb75a.nzb&i=0&r=', 1412306146, 64]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bakumatsu.Gijinden.Roman.S01E07.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bakumatsu.Gijinden.Roman.S01E07.WEBRip.x264-ANiHLS', 1, '|7|', 0, 0, 'http://lolo.sickbeard.com/getnzb/ef5f9b716a50d96459763812d540d056.nzb&i=0&r=', 1412306146, 1]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bakumatsu.Gijinden.Roman.S01E06.1080p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bakumatsu.Gijinden.Roman.S01E06.1080p.WEBRip.x264-ANiHLS', 1, '|6|', 0, 0, 'http://lolo.sickbeard.com/getnzb/e109b794854426c3cb5ddab071689669.nzb&i=0&r=', 1412306146, 64]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bakumatsu.Gijinden.Roman.S01E06.720p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bakumatsu.Gijinden.Roman.S01E06.720p.WEBRip.x264-ANiHLS', 1, '|6|', 0, 0, 'http://lolo.sickbeard.com/getnzb/16f0b34b2a237357648bd454f9077065.nzb&i=0&r=', 1412306146, 32]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bakumatsu.Gijinden.Roman.S01E06.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bakumatsu.Gijinden.Roman.S01E06.WEBRip.x264-ANiHLS', 1, '|6|', 0, 0, 'http://lolo.sickbeard.com/getnzb/b45f86a3c510db349e09a65613d1019d.nzb&i=0&r=', 1412306146, 1]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bakumatsu.Gijinden.Roman.S01E05.1080p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bakumatsu.Gijinden.Roman.S01E05.1080p.WEBRip.x264-ANiHLS', 1, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/f867f7c155466eee3ec19b581e7560f7.nzb&i=0&r=', 1412306146, 64]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bakumatsu.Gijinden.Roman.S01E04.1080p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bakumatsu.Gijinden.Roman.S01E04.1080p.WEBRip.x264-ANiHLS', 1, '|4|', 0, 0, 'http://lolo.sickbeard.com/getnzb/eaedae248ff4fcce4aa9fd3f16b27a97.nzb&i=0&r=', 1412306146, 64]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bakumatsu.Gijinden.Roman.S01E05.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bakumatsu.Gijinden.Roman.S01E05.WEBRip.x264-ANiHLS', 1, '|5|', 0, 0, 'http://lolo.sickbeard.com/getnzb/c797aeb15dac28dda7b407e1de5ccbfc.nzb&i=0&r=', 1412306146, 1]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bakumatsu.Gijinden.Roman.S01E04.720p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bakumatsu.Gijinden.Roman.S01E04.720p.WEBRip.x264-ANiHLS', 1, '|4|', 0, 0, 'http://lolo.sickbeard.com/getnzb/106d5764b3986bff617486cce2772b33.nzb&i=0&r=', 1412306146, 32]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bakumatsu.Gijinden.Roman.S01E03.1080p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bakumatsu.Gijinden.Roman.S01E03.1080p.WEBRip.x264-ANiHLS', 1, '|3|', 0, 0, 'http://lolo.sickbeard.com/getnzb/77a36a52ef4665c32f03a0c54850865f.nzb&i=0&r=', 1412306146, 64]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bakumatsu.Gijinden.Roman.S01E03.720p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bakumatsu.Gijinden.Roman.S01E03.720p.WEBRip.x264-ANiHLS', 1, '|3|', 0, 0, 'http://lolo.sickbeard.com/getnzb/91e3b777465ec251417f55e56d2af9e7.nzb&i=0&r=', 1412306146, 32]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bakumatsu.Gijinden.Roman.S01E03.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bakumatsu.Gijinden.Roman.S01E03.WEBRip.x264-ANiHLS', 1, '|3|', 0, 0, 'http://lolo.sickbeard.com/getnzb/4fe43b41ac7d0b89ad05a8594bce1045.nzb&i=0&r=', 1412306146, 1]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bakumatsu.Gijinden.Roman.S01E02.1080p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bakumatsu.Gijinden.Roman.S01E02.1080p.WEBRip.x264-ANiHLS', 1, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/9952ff5795ec5ea8d60c51bffde87fe4.nzb&i=0&r=', 1412306146, 64]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Adding item from RSS to cache: Bakumatsu.Gijinden.Roman.S01E02.720p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Checking the cache to see if we already know the tvdb id of Bakumatsu Gijinden Roman
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM scene_names WHERE name = ? with args [u'Bakumatsu.Gijinden.Roman']
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Cache lookup found 0, using that
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: INSERT INTO [sick_beard_index] (name, season, episodes, tvrid, tvdbid, url, time, quality) VALUES (?,?,?,?,?,?,?,?) with args ['Bakumatsu.Gijinden.Roman.S01E02.720p.WEBRip.x264-ANiHLS', 1, '|2|', 0, 0, 'http://lolo.sickbeard.com/getnzb/41da95da1ef5ddf7db985e4a21db4b42.nzb&i=0&r=', 1412306146, 32]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: cache.db: SELECT * FROM [sick_beard_index]
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Jokers.Wild.2014.S01E02.Take.it.to.the.Bank.720p.HDTV.x264-DHD
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Absolute.Genius.with.Dick.and.Dom.S01E09.WEBRip.x264-FaiLED
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Absolute.Genius.with.Dick.and.Dom.S01E08.720p.WEBRip.x264-FaiLED
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Absolute.Genius.with.Dick.and.Dom.S01E06.720p.WEBRip.x264-FaiLED
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Absolute.Genius.with.Dick.and.Dom.S01E05.720p.WEBRip.x264-FaiLED
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Absolute.Genius.with.Dick.and.Dom.S01E05.WEBRip.x264-FaiLED
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Absolute.Genius.with.Dick.and.Dom.S01E03.720p.WEBRip.x264-FaiLED
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Absolute.Genius.with.Dick.and.Dom.S01E04.720p.WEBRip.x264-FaiLED
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Absolute.Genius.with.Dick.and.Dom.S01E04.WEBRip.x264-FaiLED
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Gracepoint.S01E01.HDTV.x264-LOL
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Absolute.Genius.with.Dick.and.Dom.S01E03.WEBRip.x264-FaiLED
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Scandal.US.S04E02.720p.HDTV.X264-DIMENSION
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Scandal.US.S04E02.HDTV.x264-LOL
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bad.Judge.S01E01.HDTV.x264-LOL
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bad.Judge.S01E01.720p.HDTV.X264-DIMENSION
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Haven.S05E04.HDTV.x264-LOL
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Mock.The.Week.S13E10.720p.HDTV.x264-FaiLED
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Mock.The.Week.S13E10.HDTV.x264-FaiLED
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Katherine.Mills.Mind.Games.S01E01.720p.HDTV.x264-FaiLED
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Eastenders.2014.10.02.720p.WEBRip.x264-FaiLED
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Greys.Anatomy.S11E02.720p.HDTV.X264-DIMENSION
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Greys.Anatomy.S11E02.HDTV.x264-LOL
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Driver.S01E02.PROPER.720p.HDTV.x264-RiVER
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Uncle.Grandpa.S02E09.Grounded.720p.HDTV.x264-W4F
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Uncle.Grandpa.S02E08.Aunt.Grandma.HDTV.x264-W4F
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bad.Education.S03E03.PROPER.720p.HDTV.x264-RiVER
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Jungle.Atlantis.S01E02.720p.HDTV.x264-BARGE
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: How.to.Get.Away.with.Murder.S01E02.720p.HDTV.X264-DIMENSION
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: How.to.Get.Away.with.Murder.S01E02.HDTV.x264-LOL
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Amazing.World.of.Gumball.S03E19.The.Procrastinators.720p.HDTV.x264-W4F
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Amazing.World.of.Gumball.S03E19.The.Procrastinators.HDTV.x264-W4F
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Steven.Universe.S01E27.720p.HDTV.x264-W4F
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Steven.Universe.S01E27.HDTV.x264-W4F
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: No.Foreigners.Here.100.Percent.British.S01E01.PDTV.x264-C4TV
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Benefit.House.Me.And.My.22.Kids.S01E01.PDTV.x264-C4TV
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Clarence.US.S01E18.Average.Jeff.720p.HDTV.x264-W4F
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: The.Big.Bang.Theory.S08E03.The.First.Pitch.Insufficiency.720p.WEB-DL.DD5.1.H.264-Oosh
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Clarence.US.S01E18.Average.Jeff.HDTV.x264-W4F
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: North.Square.S01E08.DVDRip.X264-NODLABS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: North.Square.S01E10.DVDRip.X264-NODLABS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Globe.Trekker.S16E07.Good.And.Bad.Food.Guide.3.720p.HDTV.x264-ASCENDANCE
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: North.Square.S01E07.DVDRip.X264-NODLABS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: North.Square.S01E09.DVDRip.X264-NODLABS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: North.Square.S01E06.DVDRip.X264-NODLABS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: North.Square.S01E04.DVDRip.X264-NODLABS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: North.Square.S01E02.DVDRip.X264-NODLABS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: North.Square.S01E03.DVDRip.X264-NODLABS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: North.Square.S01E05.DVDRip.X264-NODLABS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: North.Square.S01E01.DVDRip.X264-NODLABS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Tough.Trains.S01E01.Across.Bolivia.The.Pantanal.to.the.Pacific.720p.HDTV.x264-ASCENDANCE
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Globe.Trekker.S16E07.Good.And.Bad.Food.Guide.3.HDTV.x264-ASCENDANCE
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Teen.Titans.Go.S02E15.Friendship.720p.HDTV.x264-W4F
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Surviving.Evil.S02E05.Coke.Crazed.Killer.720p.HDTV.x264-TERRA
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Dont.Drop.The.Baby.S01E03.720p.HDTV.x264-FTP
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Tough.Trains.S01E01.Across.Bolivia.The.Pantanal.to.the.Pacific.HDTV.x264-ASCENDANCE
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Teen.Titans.Go.S02E15.Friendship.HDTV.x264-W4F
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Stalker.S01E01.720p.WEB-DL.DD5.1.H.264-BS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Detectorists.S01E01.HDTV.x264-RiVER
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Criminal.Minds.S10E01.720p.WEB-DL.DD5.1.H.264-CtrlHD
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Scrotal.Recall.S01E01.HDTV.x264-TLA
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Legends.2014.S01E08.720p.WEB-DL.DD5.1.H.264-BS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Scrotal.Recall.S01E01.720p.HDTV.x264-TLA
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Modern.Family.S06E02.720p.WEB-DL.DD5.1.AAC2.0.H.264-YFN
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Peaky.Blinders.S02E01.HDTV.x264-TLA
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Detectorists.1x01.720p.HDTV.x264-FoV
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Who.Do.You.Think.You.Are.UK.S11E09.720p.HDTV.x264-FTP
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Peaky.Blinders.2x01.720p.HDTV.x264-FoV
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Tonight.S16E35.When.Interest.Rates.Rise.HDTV.x264-C4TV
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Tonight.S16E35.When.Interest.Rates.Rise.720p.HDTV.x264-C4TV
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bakumatsu.Gijinden.Roman.S01E12.1080p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bakumatsu.Gijinden.Roman.S01E12.720p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bakumatsu.Gijinden.Roman.S01E11.1080p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bakumatsu.Gijinden.Roman.S01E12.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bakumatsu.Gijinden.Roman.S01E11.720p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bakumatsu.Gijinden.Roman.S01E11.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bakumatsu.Gijinden.Roman.S01E10.1080p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bakumatsu.Gijinden.Roman.S01E10.720p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bakumatsu.Gijinden.Roman.S01E09.1080p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bakumatsu.Gijinden.Roman.S01E09.720p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bakumatsu.Gijinden.Roman.S01E09.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bakumatsu.Gijinden.Roman.S01E08.1080p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bakumatsu.Gijinden.Roman.S01E08.720p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bakumatsu.Gijinden.Roman.S01E07.1080p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bakumatsu.Gijinden.Roman.S01E07.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bakumatsu.Gijinden.Roman.S01E06.1080p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bakumatsu.Gijinden.Roman.S01E06.720p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bakumatsu.Gijinden.Roman.S01E06.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bakumatsu.Gijinden.Roman.S01E05.1080p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bakumatsu.Gijinden.Roman.S01E04.1080p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bakumatsu.Gijinden.Roman.S01E05.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bakumatsu.Gijinden.Roman.S01E04.720p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bakumatsu.Gijinden.Roman.S01E03.1080p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bakumatsu.Gijinden.Roman.S01E03.720p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bakumatsu.Gijinden.Roman.S01E03.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bakumatsu.Gijinden.Roman.S01E02.1080p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 DEBUG    SEARCHQUEUE-RSS-SEARCH :: Using cached parse result for: Bakumatsu.Gijinden.Roman.S01E02.720p.WEBRip.x264-ANiHLS
2014-10-03 13:15:46 INFO     SEARCHQUEUE-RSS-SEARCH :: No needed episodes found on the RSS feeds
2014-10-03 13:18:10 INFO     MAIN :: Signal 2 caught, saving and exiting...
2014-10-03 13:18:10 INFO     MAIN :: Aborting all threads
2014-10-03 13:18:10 INFO     MAIN :: Waiting for the SEARCH thread to exit
2014-10-03 13:18:10 INFO     MAIN :: Waiting for the BACKLOG thread to exit
2014-10-03 13:18:11 INFO     MAIN :: Waiting for the SHOWUPDATER thread to exit
2014-10-03 13:18:12 INFO     MAIN :: Waiting for the VERSIONCHECKER thread to exit
2014-10-03 13:18:12 INFO     MAIN :: Waiting for the SHOWQUEUE thread to exit
2014-10-03 13:18:13 INFO     MAIN :: Waiting for the SEARCHQUEUE thread to exit
2014-10-03 13:18:14 INFO     MAIN :: Waiting for the POSTPROCESSER thread to exit
2014-10-03 13:18:15 INFO     MAIN :: Waiting for the PROPERFINDER thread to exit
2014-10-03 13:18:16 INFO     MAIN :: Saving all shows to the database
2014-10-03 13:18:16 INFO     MAIN :: Saving config file to disk
2014-10-03 13:18:16 INFO     MAIN :: Killing cherrypy
2014-10-03 13:30:41 INFO     MAIN :: Checking database structure...
2014-10-03 13:30:41 DEBUG    MAIN :: Checking Initial Schema database upgrade
2014-10-03 13:30:41 DEBUG    MAIN :: sickbeard.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('tv_shows',)
2014-10-03 13:30:41 DEBUG    MAIN :: sickbeard.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('db_version',)
2014-10-03 13:30:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:30:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:30:41 DEBUG    MAIN :: Initial Schema upgrade not required
2014-10-03 13:30:41 DEBUG    MAIN :: Checking Add Size And Scene Name Fields database upgrade
2014-10-03 13:30:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:30:41 DEBUG    MAIN :: Add Size And Scene Name Fields upgrade not required
2014-10-03 13:30:41 DEBUG    MAIN :: Checking Rename Season Folders database upgrade
2014-10-03 13:30:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:30:41 DEBUG    MAIN :: Rename Season Folders upgrade not required
2014-10-03 13:30:41 DEBUG    MAIN :: Checking Add1080p And Raw Qualities database upgrade
2014-10-03 13:30:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:30:41 DEBUG    MAIN :: Add1080p And Raw Qualities upgrade not required
2014-10-03 13:30:41 DEBUG    MAIN :: Checking Add Showid Tvdbid Index database upgrade
2014-10-03 13:30:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:30:41 DEBUG    MAIN :: Add Showid Tvdbid Index upgrade not required
2014-10-03 13:30:41 DEBUG    MAIN :: Checking Add Last Update database upgrade
2014-10-03 13:30:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:30:41 DEBUG    MAIN :: Add Last Update upgrade not required
2014-10-03 13:30:41 DEBUG    MAIN :: Checking Add Require And Ignore Words database upgrade
2014-10-03 13:30:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:30:41 DEBUG    MAIN :: Add Require And Ignore Words upgrade not required
2014-10-03 13:30:41 DEBUG    MAIN :: Checking Cleanup History And Specials database upgrade
2014-10-03 13:30:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:30:41 DEBUG    MAIN :: Cleanup History And Specials upgrade not required
2014-10-03 13:30:41 DEBUG    MAIN :: Checking Add Skip Notifications database upgrade
2014-10-03 13:30:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:30:41 DEBUG    MAIN :: Add Skip Notifications upgrade not required
2014-10-03 13:30:41 DEBUG    MAIN :: Checking Add History Source database upgrade
2014-10-03 13:30:41 DEBUG    MAIN :: sickbeard.db: SELECT db_version FROM db_version
2014-10-03 13:30:41 DEBUG    MAIN :: Add History Source upgrade not required
2014-10-03 13:30:41 INFO     MAIN :: Checking database structure...
2014-10-03 13:30:41 DEBUG    MAIN :: Checking Initial Schema database upgrade
2014-10-03 13:30:41 DEBUG    MAIN :: cache.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('lastUpdate',)
2014-10-03 13:30:41 DEBUG    MAIN :: Initial Schema upgrade not required
2014-10-03 13:30:41 DEBUG    MAIN :: Checking Add Scene Exceptions database upgrade
2014-10-03 13:30:41 DEBUG    MAIN :: cache.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('scene_exceptions',)
2014-10-03 13:30:41 DEBUG    MAIN :: Add Scene Exceptions upgrade not required
2014-10-03 13:30:41 DEBUG    MAIN :: Checking Add Scene Name Cache database upgrade
2014-10-03 13:30:41 DEBUG    MAIN :: cache.db: SELECT 1 FROM sqlite_master WHERE name = ?; with args ('scene_names',)
2014-10-03 13:30:41 DEBUG    MAIN :: Add Scene Name Cache upgrade not required
2014-10-03 13:30:41 DEBUG    MAIN :: Checking Add Scene Exceptions Provider database upgrade
2014-10-03 13:30:41 DEBUG    MAIN :: Add Scene Exceptions Provider upgrade not required
2014-10-03 13:30:41 DEBUG    MAIN :: sickbeard.db: SELECT show_id, tvdb_id, COUNT(tvdb_id) as count FROM tv_shows GROUP BY tvdb_id HAVING count > 1
2014-10-03 13:30:41 INFO     MAIN :: No duplicate show, check passed
2014-10-03 13:30:41 DEBUG    MAIN :: sickbeard.db: SELECT showid, season, episode, COUNT(showid) as count FROM tv_episodes GROUP BY showid, season, episode HAVING count > 1
2014-10-03 13:30:41 INFO     MAIN :: No duplicate episode, check passed
2014-10-03 13:30:41 DEBUG    MAIN :: sickbeard.db: SELECT episode_id, showid, tv_shows.tvdb_id FROM tv_episodes LEFT JOIN tv_shows ON tv_episodes.showid=tv_shows.tvdb_id WHERE tv_shows.tvdb_id is NULL
2014-10-03 13:30:41 INFO     MAIN :: No orphan episodes, check passed
2014-10-03 13:30:41 DEBUG    MAIN :: config_version -> 6
2014-10-03 13:30:41 DEBUG    MAIN :: Retrieving the last check time from the DB
2014-10-03 13:30:41 DEBUG    MAIN :: sickbeard.db: SELECT * FROM info
2014-10-03 13:30:41 INFO     MAIN :: Starting Sick Beard on http://0.0.0.0:7779/
2014-10-03 13:30:41 INFO     MAIN :: Loading initial show list
2014-10-03 13:30:41 DEBUG    MAIN :: sickbeard.db: SELECT * FROM tv_shows
2014-10-03 13:30:41 DEBUG    CHECKVERSION :: Starting new thread: CHECKVERSION
2014-10-03 13:30:41 INFO     CHECKVERSION :: Checking if source needs an update
2014-10-03 13:30:42 DEBUG    CP Server Thread-4 :: sickbeard.db: SELECT showid, (SELECT COUNT(*) FROM tv_episodes WHERE showid=tv_eps.showid AND season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE showid=tv_eps.showid AND season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE showid=tv_eps.showid AND season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 735509 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total,  (SELECT airdate FROM tv_episodes WHERE showid=tv_eps.showid AND airdate >= 735509 AND status = 1 ORDER BY airdate ASC LIMIT 1) AS ep_airs_next  FROM tv_episodes tv_eps GROUP BY showid
2014-10-03 13:30:42 DEBUG    CP Server Thread-4 :: sickbeard.db: SELECT (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 735509 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total  FROM tv_episodes tv_eps LIMIT 1
2014-10-03 13:30:43 DEBUG    CHECKVERSION :: cur_commit = None, newest_commit = 630fb45df4843069ab2268d4819432e346904901, num_commits_behind = 0
2014-10-03 13:30:43 DEBUG    CHECKVERSION :: Unknown current version number, don't know if we should update or not
2014-10-03 13:30:43 INFO     CHECKVERSION :: Check scene exceptions update
2014-10-03 13:30:43 DEBUG    CHECKVERSION :: cache.db: SELECT tvdb_id, show_name FROM scene_exceptions WHERE provider=?; with args ['sb_tvdb_scene_exceptions']
2014-10-03 13:30:43 INFO     CHECKVERSION :: No scene exceptions update needed
2014-10-03 13:30:48 DEBUG    CP Server Thread-4 :: sickbeard.db: SELECT *, tv_shows.status as show_status FROM tv_episodes, tv_shows WHERE season > 0 AND airdate >= ? AND airdate < ? AND tv_shows.tvdb_id = tv_episodes.showid AND tv_episodes.status NOT IN (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) with args [735509, 735516, 4, 3276804, 204, 404, 104, 804, 12804, 25604, 1604, 3204, 6404, 2, 3276802, 202, 402, 102, 802, 12802, 25602, 1602, 3202, 6402, 6, 7]
2014-10-03 13:30:48 DEBUG    CP Server Thread-4 :: sickbeard.db: SELECT *, tv_shows.status as show_status FROM tv_episodes outer_eps, tv_shows WHERE season > 0 AND showid NOT IN () AND tv_shows.tvdb_id = outer_eps.showid AND airdate = (SELECT airdate FROM tv_episodes inner_eps WHERE inner_eps.season > 0 AND inner_eps.showid = outer_eps.showid AND inner_eps.airdate >= ? ORDER BY inner_eps.airdate ASC LIMIT 1) AND outer_eps.status NOT IN (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) with args [735516, 4, 3276804, 204, 404, 104, 804, 12804, 25604, 1604, 3204, 6404, 2, 3276802, 202, 402, 102, 802, 12802, 25602, 1602, 3202, 6402]
2014-10-03 13:30:48 DEBUG    CP Server Thread-4 :: sickbeard.db: SELECT *, tv_shows.status as show_status FROM tv_episodes, tv_shows WHERE season > 0 AND tv_shows.tvdb_id = tv_episodes.showid AND airdate < ? AND airdate >= ? AND tv_episodes.status = ? AND tv_episodes.status NOT IN (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) with args [735509, 735506, 3, 4, 3276804, 204, 404, 104, 804, 12804, 25604, 1604, 3204, 6404, 2, 3276802, 202, 402, 102, 802, 12802, 25602, 1602, 3202, 6402, 6, 7]
2014-10-03 13:30:48 DEBUG    CP Server Thread-4 :: sickbeard.db: SELECT (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) AS ep_snatched, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0 AND status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)) AS ep_downloaded, (SELECT COUNT(*) FROM tv_episodes WHERE season > 0 AND episode > 0  AND ((airdate > 1 AND airdate <= 735509 AND (status = 5 OR status = 3))  OR (status IN (2,3276802,202,402,102,802,12802,25602,1602,3202,6402,9,3276809,209,409,109,809,12809,25609,1609,3209,6409)) OR (status IN (4,3276804,204,404,104,804,12804,25604,1604,3204,6404,6)))) AS ep_total  FROM tv_episodes tv_eps LIMIT 1
2014-10-03 13:30:59 INFO     MAIN :: Signal 2 caught, saving and exiting...
2014-10-03 13:30:59 INFO     MAIN :: Aborting all threads
2014-10-03 13:30:59 INFO     MAIN :: Waiting for the SEARCH thread to exit
2014-10-03 13:30:59 INFO     MAIN :: Waiting for the BACKLOG thread to exit
2014-10-03 13:31:00 INFO     MAIN :: Waiting for the SHOWUPDATER thread to exit
2014-10-03 13:31:01 INFO     MAIN :: Waiting for the VERSIONCHECKER thread to exit
2014-10-03 13:31:02 INFO     MAIN :: Waiting for the SHOWQUEUE thread to exit
2014-10-03 13:31:02 INFO     MAIN :: Waiting for the SEARCHQUEUE thread to exit
2014-10-03 13:31:03 INFO     MAIN :: Waiting for the POSTPROCESSER thread to exit
2014-10-03 13:31:04 INFO     MAIN :: Waiting for the PROPERFINDER thread to exit
2014-10-03 13:31:05 INFO     MAIN :: Saving all shows to the database
2014-10-03 13:31:05 INFO     MAIN :: Saving config file to disk
2014-10-03 13:31:05 INFO     MAIN :: Killing cherrypy
